{"mappings":"gBAkB8B,wDAAE,oEAA0B,4EAAiB,sDAAQ,EAAaA,OAAC,CAAQ,CAA0BC,aAAG,UAACC,KAAA,QAACC,KAAc,iBAA4C,cAAAC,QAAC,CAAmB,CAAkBH,aAAU,UAAEC,KAAA,GAAGC,KAAA,4BAA4B,YAAa,aAA+BH,OAAC,CAAQ,CAA6BC,aAAG,UAACC,KAAA,GAACC,KAAc,iBAA4C,iBAAAC,QAAC,CAAmB,CAAkBH,aAAU,UAAEC,KAAA,GAAGC,KAAA,4BAA4B,YAAa,aAA+BH,OAAC,CAAQ,CAAuCC,aAAG,UAACC,KAAA,GAACC,KAAc,iBAA4C,2BAAAC,QAAC,CAAmB,CAAkBH,aAAU,UAAEC,KAAA,GAACC,KAAA,YAG5rBE,gBAAU,OAChBF,KAAA,aAIGG,aAAc,CACdC,gBAAeC,mCAACC,cAAiBC,kBACrC,IACIC,QAAQC,KAAK,4BACbC,QAAQC,MAAI,CACfC,UAAAA,UAEKC,MAAAA,QAEN,MAAMC,GACNN,QAAYM,MAAG,iCACfN,QAAMO,IAAAD,GAIN,MAAIE,cAAgBC,SAAQC,eAAiB,kBACvCC,SAAWF,SAA0EC,eAAA,iBACvFE,UAAcH,SAAMC,eAAU,eAE5BG,OAAAJ,SAAAC,eAA+B,wBACjBD,SAAAC,eAAA,eAGdI,YAAAL,SAAAC,eAAA,2BAEFK,KAAM,IAAAC,KAAUd,QAAkDe,UAAAD,KAAAE,qBAClEC,SAAI,+EACJF,SAAgD,IAAAD,KAAAI,UAAAC,aAAAF,gBAK7CG,oBAAAb,SAAAc,cAAA,8BAOAC,UAKA,IAAEC,EAAAC,2BAEDC,EAAA,gDAA2BF,IAK1BH,sBAAAM,wBAAA,GAGDC,qBACJC,sBAEA,IACI9B,QAACO,IAAA,yCACDwB,2BAAaJ,GACb3B,QAAAO,IAAA,+CACAD,GACFN,QAAOM,MAAQ,iDAEjB,IACIN,QAACO,IAAA,yCACDyB,2BAAaP,GACbzB,QAAAO,IAAA,2CACA0B,GACFjC,QAAOM,MAAQ,iDAEjB,IAKGN,QAAAO,IAAA,oDAEqD2B,+BAAAT,GACpDzB,QAAAO,IAAA,yCAEP,MAAA4B,GAKEnC,QAAAM,MAAA,qDAGC,IACIN,QAAQO,IAAA,gDACR6B,2BAAMX,GACTzB,QAAAO,IAAA,qCACC,MAAE8B,GACArC,QAAQM,MAAyB,iDAUSgC,mBAAAC,qBAAA,YAOfV,wBAA2BpB,SAAAc,cAAA,6DAS1ChB,IAAG,wCAA6BiC,MAAUC,YAAe,wBAAA,eAEFlC,IAAA,0CACxDiC,MAAEC,YAAQ,wBAAA,eARvBzC,QAAUM,MAAA,mCAUAoC,MAAQC,SAIRzC,QAAQ0C,KAAMC,aACP,0BAA0B3C,QAAA4C,WAAA,UACjC,wBAEA5C,QAAA4C,cACHC,aACGxC,IAAQ,aAAOoC,aACD,kBAAdA,EAAmB,IACtB3C,QAAAC,KAAA,gDAER8C,QAAA7C,QAAA8C,aAAA,CAED/B,SAAoB,kBAGhBjB,QAAOC,KAAA,mBAAA0C,eAEP,MAAAM,GACAjD,QAAWM,MAAA,kDACdN,QAAAM,MAAA2C,QAG+E,IAC+BjD,QAAAC,KAAA,0CAClH8C,QAAA7C,QAAA8C,eAGQhD,QAAAC,KAAA,sCAEAF,wBACSG,QAAAgD,cA/BD,QAiCP,MAACC,GACVnD,QAAAM,MAAA,oCAEQN,QAAAM,MAAe6C,GAGvBpD,wBAAAG,QAAAkD,iCAGG5B,UACAV,YAAwBuC,QAAAC,IAAAP,EAAAQ,IAAA,cACMzC,YAAA0B,MAAAC,YAAA,wBAAA,OACsBe,WAAAzD,kBAAAgD,EAAAQ,IAAA,yBAW/C7B,uBAEL,OAAEY,kBACEpC,QAAQ0C,KAAMC,UAAKU,IAAA,cAFnB,sBAICjB,kBAEL,QADIpC,QAAA0C,KAAAC,yBAGHY,eACIvD,QAAA0C,KAAAa,iBACDlD,IAAA,cAGJmD,oBAEIA,WAKJpC,sBAAkBM,wBAAA,GAClB,IAE0CG,2BAAA,cAC1C,MAAM4B,GACN3D,QAAAM,MAAeqD,GAGf,IACI3B,2BAAC,oBACD4B,GACF5D,QAAOM,MAAOsD,OAGf1B,+BAAA,KACD,MAAK2B,GACD7D,QAAAM,MAAauD,OAGbzB,2BAAmB,GACtB,MAAA0B,GACJ9D,QAAAM,MAAAwD,GAIGjC,qBACAC,sBAEA,MAAIiC,EAAkBtD,SAAGc,cAA4B,iBACrDwC,GAAiBA,EAAAC,UAAAC,IAAA,+BAAe,eAAwCZ,QAASC,IAAI,uBAAmE,IAC7CY,oBAAAA,qBACc,MAAAC,GACInE,QAAAM,MAAA,yCAE7HN,QAAMM,MAAY6D,GAIlB,IAEIC,eACAA,eAAS,SACmCC,GACxCrE,QAAIM,MAAM,4CACNA,MAAM+D,8BAKOC,EAACC,SAEjBC,EAAA/D,SAAAC,eAAA,cACLX,wBAACG,QAAAkD,mBAEIlD,QACD0C,KAAQC,UAEgBU,IAAA,cAGnC,MAAAkB,EAAA,OAGQH,GAAAvE,mBAAgC,OACrCwE,QAAaA,GAAWG,GAAwC,8CAK5DC,QAAazE,QAAU0E,QAAUC,QAAeC,iBAAAL,GAChDD,IAAAA,EAAgBO,UAAa,sGAAyBC,qBAAAjF,mBAAAkF,mDAAAlE,KAAAmE,MAAAC,QAAAR,EAAAS,wBACtD,MAAmDC,QAAAnF,QAAA0E,QAAAC,QAAAS,iBAAAb,GACtDY,EACKE,OAAAF,EAAAG,SAAAC,OAIiB,UAAfC,QAAwB,QAAAD,EAAAC,QAAA,QAAAD,EAAAC,OAAA,CACpB,MAAIN,EAAUO,oBAAeF,EAAAL,QAAAK,EAAAG,UAGwBpB,EACpDA,EAAIO,WAAmB,iGAAaU,EAAAC,8CAAAN,gBADgBpF,QAAAM,MAAA,mCAIpEkE,EAEQA,EAAAO,WAAuB,gGAF/B/E,QAAAM,MAAA,wCAIGiC,oBAAgBsD,SACVC,EAAErF,SAAesF,iBAAK,6BAEjBP,SAAMQ,IACTA,EAAGhC,UAASC,IAAc,wBAEjBrD,UAAUoD,UAAYiC,OAAA,wBACnBC,aAAkBlC,UAAAiC,OAAA,YAGzCH,EAGQA,EAAAN,SAAoBQ,IACrBA,EAAAhC,UAAaiC,OAAY,aAJhCjG,QAAAM,MAAA,4BAOAM,WAAAA,UAAAoD,UAAAC,IAAA,wBAEciC,aAAiBlC,UAAAC,IAAA,oBAEdnC,8BAAarB,SAAAsF,iBAAA,2BAAUI,EAAeX,SAAAY,IAAE9D,+BAAa2D,OAAA,sBAAeI,WAAA,sBAAgB,sBAAsBA,WAAA,UAAAD,EAACrB,UAAA,6BAAkDY,oBAAAP,EAAAQ,GAC3K,IAAAU,EAAqB,GAANlB,EAAM,EAA4BA,EAAAmB,KAAEC,IAAG,GAAAZ,GAEzD,OAD+CU,EAAAA,EAAA,KAAA,EAAAA,EAC/CA,iBAIcG,sBAkBUC,aAAA,gBAhBgD,CAChC,CACuIrH,OAAA,GAC5JE,KAAA,gBACuBE,QAAA,CAC9B,CAC8BH,aAAA,OACnCC,KAAA,GACWC,KAAA,SAGRE,gBAAK,OACXF,KAAA,6BAQiCkH,aAAAC,EAAAC,GAarC,IAAAnC,EAAA,iBAEsBoC,yBACnBF,aAAeA,EACqCG,IAAAF,GAGpD,aAAM1G,QAAe6G,gBAAYtC,YAE7BuC,mBAGAC,EAAY,EAYhB,OAXgCxG,SAAAsF,iBAAA,eAKgBP,SAAAY,IAC5CA,EAAAc,QACAD,GAAMb,EAAAc,UAIJD,iBAAiBE,oBAAYH,6BAA2BlE,qBAAerC,SAAWC,eAAA,kCAAUA,eAAE,2DAAyE,eAAnDH,IAAA,yCAAmB,uCAAmB6G,EAAYC,EAAAC,GAC5K,GAAIJ,GAAO,EAGP,OAFAI,EAAA,4CACAC,WAAAH,EAA2BC,EAAAC,OA4B/BE,EATI/C,EAAQ,CACR7E,gBAAkCiH,yBAClCF,aAlBH,WAmBAG,IAlBS,CACN,CACAzH,OAAc,GACuBE,KAAA,WAClCE,QAAU,CACT,CACQH,aAAU,UACZC,KAAM,GACJC,KAAQ,4BAGN,UACVA,KAAC,aAOZiI,SAAAvH,QAAAwH,MAAAC,IAAAT,IAMG,IACHM,QAAAtH,QAAA6G,gBAAAtC,GAMG,MAAQmD,GAER,GAAQA,EACRC,UAEO7H,QAAQO,IAAAqH,EAAAC,SAEfP,EACAM,EAAUC,QAEFP,EAAOQ,SAAA,sCAKP,OAHyBR,EAAA,oCAE/BC,WAAoBH,EAAIC,EAAAC,GAIzBA,EAAAM,EAAAG,KAAAF,QACK7H,QAAGO,IAAA+G,GACLA,EAAc,6BACdC,WAAYH,EAAAC,EAAAC,aAIVU,qBACYX,EAAA5G,SAAAC,eAAA,2BACduH,SAAYZ,EAAAY,QAEhBpH,OAACA,OAAAqH,QAAAf,SACJnH,QAAAM,MAAA","sources":["src/js/devWeb3.js"],"sourcesContent":["/**\r\n * *******************************    WEB3    *******************************\r\n */\r\n// Connecting with Metamask Wallet\r\n\r\n// Moralis Config details\r\n/**\r\n * forshared\r\n // const serverUrl = \"https://tdwibddr7hmu.usemoralis.com:2053/server\"; //BSC testnet\r\n // const appId = \"pxANj4iAZAqjimgleq7f5iKzPE3rKJXoFtaMfzYc\"; //BSC testnet\r\n */\r\n\r\n// paid-account-joshi-\r\nconst serverUrl = \"https://gusm6vrpbwtk.usemoralis.com:2053/server\"; //BSC testnet\r\nconst appId = \"glRYjrZo9XjLE2MPc7sWgzc4PyoFs3RbmyoNiPbf\"; //BSC testnet\r\n\r\nconst CONTRACT_ADDRESS_TESTNET = '0xf8992AE362561427602A50aff0f84085d1fd88f7';\r\nconst REFER_CONTRACT_ADDRESS_TESTNET = '0xfe2E124FE1418419A9efd8Ba987Fa1769D506c8a';\r\nconst referABI = [{ \"inputs\": [{ \"internalType\": \"address\", \"name\": \"_user\", \"type\": \"address\" }], \"name\": \"getReferrer\", \"outputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }], \"name\": \"referralsCount\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }], \"name\": \"totalReferralCommissions\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }], \"stateMutability\": \"view\", \"type\": \"function\" }]\r\nconst referOptions = {\r\n    contractAddress: REFER_CONTRACT_ADDRESS_TESTNET,\r\n    abi: referABI,\r\n};\r\n\r\nlet currentChainIdHex; //default chain set to ETH\r\ntry {\r\n    console.info(`starting server - ln-30 `);\r\n    Moralis.start({ serverUrl, appId });\r\n} catch (error) {\r\n    console.error(`Server failed to start -ln-34`);\r\n    console.log(error);\r\n}\r\n\r\nconst walletOptions = document.getElementById(\"wallet-options\");\r\nconst loginBtn = document.getElementById(\"web3-login-mm\");\r\nconst logoutBtn = document.getElementById(\"web3-logout\");\r\nconst buyBtn = document.getElementById(\"buy_btn\");\r\nconst showTokenBtn = document.getElementById(\"web3-tokens\");\r\n\r\nconst showAddress = document.getElementById(\"web3-wallet-address\");\r\n\r\nlet web3 = new Web3(Moralis.provider || Web3.givenProvider);\r\nconst NODE_URL = \"https://speedy-nodes-nyc.moralis.io/d633c685eb50e4bb5f7bdcf8/bsc/testnet\";\r\nlet provider = new Web3.providers.HttpProvider(NODE_URL);\r\n\r\nconst userEnteredPassword = document.querySelector('#presale-password');\r\nfunction atLogin() {\r\n    /**\r\n    * 1. show referral box - toggle visibility of it\r\n    */\r\n    let userAddress = getUserWalletAddress();\r\n    const URL_Prefix = 'https://presale.battleinfinity.io/?refercode='\r\n    let USER_RefferalLink = `${URL_Prefix}${userAddress}`;\r\n    // let USER_RefferalLink = `url/${userAddress}`;\r\n\r\n    /**\r\n     * If there is a presale password field - only then \r\n     * presalePasswordEntered = true;\r\n     */\r\n    if (!userEnteredPassword) {\r\n        presalePasswordEntered = true;\r\n    }\r\n\r\n    /**\r\n     * Manages the left to make sure that weird zoomed out page effect doesn't happen\r\n     */\r\n    manageTooltipWidth()\r\n    toggleConnectStatus()\r\n\r\n    // if (userEnteredPassword && presalePasswordEntered) {\r\n    try {\r\n        console.log(`start - populateReferralLinkinHTML ..`);\r\n        populateReferralLinkinHTML(USER_RefferalLink);\r\n        console.log(`done - populateReferralLinkinHTML ...`);\r\n    } catch (error) {\r\n        console.error(`failed - populateReferralLinkinHTML ... ln-69`);\r\n    }\r\n    try {\r\n        console.log(`start - populateReferrerLinkinHTML ..`);\r\n        populateReferrerLinkinHTML(userAddress);\r\n        console.log(`done - populateReferrerLinkinHTML`);\r\n    } catch (error) {\r\n        console.error(`failed - populateReferrerLinkinHTML ... ln-76`);\r\n    }\r\n    try {\r\n        console.log(`start - populateUserReferralComissions ... ln-79`);\r\n        populateUserReferralComissions(userAddress);\r\n        console.log(`done - populateUserReferralComissions`);\r\n    } catch (error) {\r\n        console.error(`failed - populateUserReferralComissions ... ln-83`);\r\n    }\r\n    try {\r\n        console.log(`start - populateUserReferralsCount ... ln-86`);\r\n        populateUserReferralsCount(userAddress);\r\n        console.log(`done - populateUserReferralsCount`);\r\n    } catch (error) {\r\n        console.error(`failed - populateUserReferralsCount ... ln-90`);\r\n    }\r\n    /**\r\n     * Test\r\n     // populateUserReferralComissions('0x361c26aDc02Ade99735E2A7F38606F2ec56cc1B0');\r\n     // populateUserReferralsCount('0x361c26aDc02Ade99735E2A7F38606F2ec56cc1B0');\r\n     */\r\n    // }\r\n    // toggles the visibility of connect & disconnect button\r\n    if (isUserConnected()) toggleBtnVisibility(true);\r\n\r\n}\r\n\r\n\r\n/**\r\n * Manages the left to make sure that weird zoomed out page effect doesn't happen\r\n */\r\nfunction manageTooltipWidth() {\r\n    const toolTip = document.querySelector('#web3-wallet-address');\r\n    if (!toolTip) {\r\n        console.error(`tooltips missing`);\r\n        return;\r\n    }\r\n    if (isUserConnected()) {\r\n        console.log('setting left to : 0');\r\n        showAddress.style.setProperty(\"--custom-tooltip-left\", \"0px\");\r\n        return;\r\n    }\r\n    console.log('setting left to : negative');\r\n    showAddress.style.setProperty(\"--custom-tooltip-left\", \"-100px\");\r\n}\r\n\r\n\r\nasync function login(provider) {\r\n    // const BscChainId = \"0x38\"; //Bsc Mainnet ID\r\n    const BscChainId = \"0x61\"; //Bsc Testnet ID\r\n\r\n\r\n    let user = Moralis.User.current();\r\n\r\n    if (provider === 'walletconnect') {\r\n        await Moralis.enableWeb3({ provider: \"walletconnect\" });\r\n    } else {\r\n        await Moralis.enableWeb3();\r\n    }\r\n    if (!user) {\r\n        console.log(`Provider :${provider} -ln-108`);\r\n        if (provider === 'walletconnect') {\r\n            try {\r\n                console.info(`Authenticating with WalletConnect ... ln-113`);\r\n                user = await Moralis.authenticate({ provider: \"walletconnect\" });\r\n                console.info(`Enabling Web3 - ${provider}... ln-128`)\r\n                // await Moralis.enableWeb3({ provider: \"walletconnect\" });\r\n            } catch (error) {\r\n                console.error(`Authentication Failed - Walletconnect - ln-118`);\r\n                console.error(error);\r\n            }\r\n        } else {\r\n            try {\r\n                console.info(`Authenticating with MetaMask... ln-123`);\r\n                user = await Moralis.authenticate();\r\n                console.info(`Enabling Web3 - Metamask... ln-125`)\r\n                // await Moralis.enableWeb3();\r\n                currentChainIdHex = await Moralis.switchNetwork(BscChainId);\r\n            } catch (error) {\r\n                console.error(`Authentication Failed - MetaMask`);\r\n                console.error(error);\r\n            }\r\n        }\r\n    }\r\n\r\n    currentChainIdHex = await Moralis.getChainId();\r\n\r\n    if (isUserConnected()) {\r\n        atLogin();\r\n        showAddress.dataset.tip = user.get(\"ethAddress\");\r\n        showAddress.style.setProperty(\"--custom-tooltip-left\", \"0px\");\r\n        getBalance(currentChainIdHex, user.get(\"ethAddress\"));\r\n    }\r\n\r\n    // Below address is on both BSC & ETH Scan - \r\n    // getBalance('0x1', '0x66A2C7B0d4Da7E699f6dD27f89b49AB15b0A51e8'); // eth chain\r\n    // getBalance('0x38', '0x66A2C7B0d4Da7E699f6dD27f89b49AB15b0A51e8'); // bsc chain - this account has BUSD in it\r\n}\r\n\r\n\r\nfunction getUserWalletAddress() {\r\n    let err = 'Logged Out';\r\n    if (!isUserConnected())\r\n        return err;\r\n\r\n    return Moralis.User.current().get(\"ethAddress\");\r\n}\r\n\r\nfunction isUserConnected() {\r\n    let user = Moralis.User.current();\r\n    return user ? true : false;\r\n}\r\n\r\nasync function logOut() {\r\n    await Moralis.User.logOut();\r\n    console.log(\"logged out\");\r\n    // toggleBtnVisibility(false);\r\n    // showAddress.dataset.tip = 'Wallet not connected';\r\n    atLogout();\r\n}\r\n\r\nfunction atLogout() {\r\n    /**\r\n     * 1. hide referral box\r\n     */\r\n    // need to \r\n    if (userEnteredPassword) presalePasswordEntered = false;\r\n\r\n    try {\r\n        populateReferralLinkinHTML('Logged Out');\r\n    } catch (error) {\r\n        console.error(error);\r\n    }\r\n    try {\r\n        populateReferrerLinkinHTML('Logged Out')\r\n    } catch (error) {\r\n        console.error(error);\r\n    }\r\n    try {\r\n        populateUserReferralComissions('0');\r\n    } catch (error) {\r\n        console.error(error);\r\n    }\r\n    try {\r\n        populateUserReferralsCount(0);\r\n    } catch (error) {\r\n        console.error(error);\r\n    }\r\n\r\n    manageTooltipWidth()\r\n    toggleConnectStatus()\r\n\r\n    // hiding addreferrer btn when logging out\r\n    const setRefferrerBtn = document.querySelector('#add-referrer');\r\n    setRefferrerBtn && setRefferrerBtn.classList.add('hidden')\r\n\r\n    toggleBtnVisibility(false);\r\n    showAddress.dataset.tip = 'Wallet not connected';\r\n    try {\r\n        setPresalePassword && setPresalePassword();\r\n    } catch (error) {\r\n        console.error(`dev:setPresalePassword(); not defined`);\r\n        console.error(error);\r\n    }\r\n    try {\r\n        showArenaLock && showArenaLock(true);\r\n    } catch (error) {\r\n        console.error(`dev:showArenaLock(); not defined`);\r\n        console.error(error);\r\n    }\r\n}\r\n\r\n\r\nasync function getBalance(chainId, address) {\r\n    const tokenList = document.getElementById('token-list');\r\n    currentChainIdHex = await Moralis.getChainId();\r\n    let currentUser = Moralis.User.current();\r\n    let currentUserAddress = currentUser.get(\"ethAddress\");\r\n    const options = { chain: chainId || currentChainIdHex || '0x38', address: address || currentUserAddress || \"0x9d51fd1a308c073f2f06a7181ad90c6d6ab5e9d7\" };\r\n    // console.log(`getBalance called with \\n chaidId ${options.chain} and \\n of address: ${options.address}`);\r\n    // const options = { chain: 'eth', address: \"0x9d51fd1a308c073f2f06a7181ad90c6d6ab5e9d7\" } // test address from Etherscan\r\n    // const options = { chain: 'bsc', address: \"0x60913d3fE722bFE425247D7673D8bdbDA56D1e02\" } // test address from BSC (bscscan)\r\n\r\n    const nativeBal = await Moralis.Web3API.account.getNativeBalance(options);\r\n\r\n    if (tokenList) tokenList.innerHTML = `<li class=\"pr-2 flex justify-between w-full md:w-1/2 mx-auto mt-2\"><span class=\"w-1/2 text-center\">${HEX_TO_CHAIN_DETAILS[currentChainIdHex].nativeToken}</span><span class=\"w-1/2 text-left\">${web3.utils.fromWei(nativeBal.balance)}</span></li>`\r\n\r\n    const balances = await Moralis.Web3API.account.getTokenBalances(options);\r\n\r\n    if (balances.length) {\r\n        balances.forEach(token => {\r\n            // console.log(`not - ${token.symbol}`);\r\n            if (token.symbol == 'USDC' || token.symbol == 'BUSD' || token.symbol == 'IBAT') {\r\n                const balance = convertTokenBalance(token.balance, token.decimals);\r\n                // const tokenFromWei = web3.utils.fromWei(token.balance)\r\n                if (!tokenList) {\r\n                    console.error('ln:226 - Token List Missing');\r\n                } else {\r\n                    tokenList.innerHTML += `<li class=\"pr-2 flex justify-between w-full md:w-1/2 mx-auto\"><span class=\"w-1/2 text-center\">${token.symbol}</span><span class=\"w-1/2 text-left\">${balance}</span></li>`\r\n                }\r\n            }\r\n        });\r\n    } else {\r\n        if (!tokenList) {\r\n            console.error('ln:226 - Token List Missing');\r\n        } else {\r\n            tokenList.innerHTML += `<li class=\"w-full text-center mx-auto text-xs opacity-80 mt-2\">no other tokens available</li>`\r\n        }\r\n    }\r\n}\r\n\r\n\r\nfunction toggleBtnVisibility(connected) {\r\n    const allBtns = document.querySelectorAll('.wallet-options-btn ');\r\n    if (connected) { //show\r\n        allBtns.forEach(btn => {\r\n            btn.classList.add('hidden');\r\n        });\r\n        logoutBtn && logoutBtn.classList.remove('hidden');\r\n        showTokenBtn && showTokenBtn.classList.remove('hidden');\r\n        // loginBtn && loginBtn.classList.remove('hidden');\r\n    }\r\n    else {\r\n        if (!allBtns) {\r\n            console.error(`ln:249-Invalid Arguments`);\r\n        } else {\r\n            allBtns.forEach(btn => {\r\n                btn.classList.remove('hidden');\r\n            });\r\n        }\r\n        // walletOptions && walletOptions.classList.remove('hidden');\r\n        logoutBtn && logoutBtn.classList.add('hidden');\r\n        showTokenBtn && showTokenBtn.classList.add('hidden');\r\n    }\r\n}\r\n\r\nfunction toggleConnectStatus() {\r\n    const statusFields = document.querySelectorAll('.connectivity-status');\r\n    statusFields && statusFields.forEach(el => {\r\n        if (isUserConnected()) {\r\n            el.classList.remove('bg-red-400')\r\n            el.style.background = \"#4ade80\";\r\n            el.innerHTML = 'connected'\r\n        } else {\r\n            el.style.background = \"#f87171\";\r\n            el.innerHTML = 'not connected'\r\n        }\r\n    });\r\n}\r\n\r\n\r\nfunction convertTokenBalance(balance, decimals) {\r\n    let newBalance = balance == 0 ? 0 : balance / Math.pow(10, decimals);\r\n    newBalance = newBalance < 0.001 ? 0 : newBalance;\r\n    return newBalance;\r\n}\r\n\r\nasync function isPresaleOpen() {\r\n    // await Moralis.enableWeb3();\r\n    const ABI = [{ \"inputs\": [], \"name\": \"isPresaleOpen\", \"outputs\": [{ \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" }], \"stateMutability\": \"view\", \"type\": \"function\" }];\r\n    const result = await readFunction('isPresaleOpen', ABI);\r\n    // console.log(`isPresaleOpen = ${result}`);\r\n}\r\n\r\n// isPresaleOpen();\r\n\r\nasync function readFunction(functionName, ABI) {\r\n    // let options = {\r\n    //     contractAddress: '0x356d2E7a0d592bAd95E86d19479c37cfdBb68Ab9',\r\n    //     functionName: 'isPresaleOpen',\r\n    //     abi: [{ \"inputs\": [], \"name\": \"isPresaleOpen\", \"outputs\": [{ \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" }], \"stateMutability\": \"view\", \"type\": \"function\" }],\r\n    //     Params: {\r\n    //         Note: 'Thanks for your work'\r\n    //     },\r\n    //     msgValue: Moralis.Units.ETH(0.1)\r\n    // }\r\n    let options = {\r\n        contractAddress: CONTRACT_ADDRESS_TESTNET,\r\n        functionName: functionName,\r\n        abi: ABI,\r\n    }\r\n    return await Moralis.executeFunction(options);\r\n}\r\n\r\nfunction getBuyAmount() {\r\n    // @todo: validate input\r\n    let buyAmount = 0;\r\n    const buyAmounts = document.querySelectorAll('.buy-amount');\r\n    // console.log(buyAmounts.length);\r\n\r\n    // const buyAmountMob = document.getElementById(\"buy-amount-mobile\");\r\n    // const buyAmountDesktop = document.getElementById(\"buy-amount-desktop\");\r\n    // if (buyAmountMob.classList.contains(hidden))\r\n    buyAmounts.forEach(el => {\r\n        if (el.value) {\r\n            // console.log(`${el.value}`);\r\n            buyAmount = +el.value;\r\n        }\r\n    });\r\n    // console.log(+buyAmount);\r\n    return buyAmount;\r\n}\r\n\r\nasync function buyToken() {\r\n    const value = +getBuyAmount();\r\n    // console.log(`Ran buyToken() : value = ${value}`);\r\n\r\n    await Moralis.enableWeb3();\r\n    const errMsgContainer = document.getElementById('buy-token-error-con');\r\n    const errMsg = document.getElementById('buy-token-error-msg');\r\n    let msg = 'Error';\r\n\r\n    if (!isUserConnected()) {\r\n        console.log('User not Logged in - connect wallet');\r\n        msg = 'Wallet not connected';\r\n        showErrMsg(errMsgContainer, errMsg, msg);\r\n        return;\r\n    }\r\n    if (value <= 0) {\r\n        msg = 'BNB Amount should be larged than 0.0';\r\n        showErrMsg(errMsgContainer, errMsg, msg);\r\n        return;\r\n    }\r\n\r\n    const FUNCTION_NAME = 'buyToken';\r\n    const ABI = [{ \"inputs\": [], \"name\": \"buyToken\", \"outputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }], \"stateMutability\": \"payable\", \"type\": \"function\" }];\r\n    let options = {\r\n        contractAddress: CONTRACT_ADDRESS_TESTNET,\r\n        functionName: FUNCTION_NAME,\r\n        abi: ABI,\r\n        msgValue: Moralis.Units.ETH(value)\r\n    }\r\n    let result;\r\n    try {\r\n        result = await Moralis.executeFunction(options);\r\n        // console.log(`Result \\n${result}`);\r\n    } catch (error) {\r\n        if (error.message) {\r\n            console.log(error.message);\r\n            msg = error.message;\r\n            if (msg.includes('User denied transaction signature')) {\r\n                msg = 'Transaction declined by User';\r\n                showErrMsg(errMsgContainer, errMsg, msg);\r\n                return;\r\n            }\r\n        }\r\n        msg = error.data.message;\r\n        console.log(msg);\r\n        msg = 'Insufficient BNB in wallet';\r\n        showErrMsg(errMsgContainer, errMsg, msg);\r\n    }\r\n}\r\n\r\n\r\n\r\nfunction toggleErrMsg() {\r\n    const errMsg = document.getElementById('buy-token-error-input');\r\n    errMsg.checked = !errMsg.checked;\r\n}\r\n\r\n\r\nif (buyBtn) {\r\n    buyBtn.onclick = buyToken;\r\n} else {\r\n    console.error(`Login button missing in UI`);\r\n}\r\nif (loginBtn) {\r\n    loginBtn.onclick = login;\r\n} else {\r\n    console.error(`Login button missing in UI`);\r\n}\r\nif (logoutBtn) {\r\n    logoutBtn.onclick = logOut;\r\n} else {\r\n    console.error(`Logout button missing in UI`);\r\n}\r\n// showTokenBtn.onclick = getBalance;\r\n\r\nconst HEX_TO_CHAIN_DETAILS = {\r\n    '0x1': {\r\n        chain: 'ETH',\r\n        nativeToken: 'ETH'\r\n    },\r\n    '0x61': {\r\n        // BSC testnet\r\n        chain: 'BSC',\r\n        nativeToken: 'BNB'\r\n    }\r\n    ,\r\n    '0x38': {\r\n        // BSC mainnet\r\n        chain: 'BSC',\r\n        nativeToken: 'BNB'\r\n    }\r\n}\r\n\r\n"],"names":["inputs","internalType","name","type","outputs","stateMutability","referOptions","contractAddress","REFER_CONTRACT_ADDRESS_TESTNET","referABI","currentChainIdHex","console","info","Moralis","start","serverUrl","appId","error","log","walletOptions","document","getElementById","loginBtn","logoutBtn","buyBtn","showAddress","web3","Web3","provider","givenProvider","NODE_URL","providers","HttpProvider","userEnteredPassword","querySelector","atLogin","userAddress","getUserWalletAddress","USER_RefferalLink","presalePasswordEntered","manageTooltipWidth","toggleConnectStatus","populateReferralLinkinHTML","populateReferrerLinkinHTML","error1","populateUserReferralComissions","error2","populateUserReferralsCount","error3","isUserConnected","toggleBtnVisibility","style","setProperty","login","provider1","User","current","enableWeb3","user","authenticate","error4","switchNetwork","error5","getChainId","dataset","tip","get","getBalance","logOut","atLogout","error6","error7","error8","error9","setRefferrerBtn","classList","add","setPresalePassword","error10","showArenaLock","error11","chainId","address","tokenList","options","currentUserAddress","nativeBal","Web3API","account","getNativeBalance","innerHTML","HEX_TO_CHAIN_DETAILS","nativeToken","utils","fromWei","balance","balances","getTokenBalances","length","forEach","token","symbol","convertTokenBalance","decimals","connected","allBtns","querySelectorAll","btn","remove","showTokenBtn","statusFields","el","background","newBalance","Math","pow","isPresaleOpen","readFunction","functionName","ABI","CONTRACT_ADDRESS_TESTNET","abi","executeFunction","getBuyAmount","buyAmount","value","buyToken","errMsgContainer","errMsg","msg","showErrMsg","result","msgValue","Units","ETH","error12","message","includes","data","toggleErrMsg","checked","onclick"],"version":3,"file":"index.1cc842d0.js.map"}