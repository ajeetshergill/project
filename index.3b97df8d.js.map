{"mappings":"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","sources":["src/js/devWeb3.js"],"sourcesContent":["window.onload = async function () {\r\n    console.log(`dev:onload`);\r\n\r\n    // populates BNB Raised bar from firebase\r\n    populateAmountRaisedinHTMLDB();\r\n\r\n    /**\r\n     * If web3enabled \r\n     * - see if user is already connected \r\n     * - enableWeb3\r\n     * - if user is already connected - but only page was refreshed - login()\r\n     * Else if web3notenabled but loggedIn user\r\n    */\r\n\r\n    if (await isWeb3Installed()) {\r\n        console.log(`dev: web3 installed  - checking if user is connected upon refreshing`);\r\n        try {\r\n            console.log(\"dev: onload - enabling web3\");\r\n            await Moralis.enableWeb3();\r\n            console.log(\"dev: onload - enabled web3\");\r\n        } catch (e) {\r\n            console.error(e), console.error(\"dev: onload - failed to enable web3\");\r\n        }\r\n\r\n        if (isUserConnected()) {\r\n            console.log(\"dev: Page-refreshed - User already connected\");\r\n            login();\r\n        } else {\r\n            console.log(\"dev: Page-refreshed - User not connected\")\r\n        }\r\n    } else if (!(await isWeb3Installed()) && isUserConnected()) {\r\n        // Shouldn't this show error coz web3 wasn't enabled to check isUserConnected?\r\n        // I'm not sure about the below trycatch block coz I'm using it to enableWeb3 and I think checking isUserConnected requires it to be enabled so commenting it out \r\n        // try {\r\n        //     console.log(\"dev: onload - enabling web3-WC\");\r\n        //     await Moralis.enableWeb3({ provider: \"walletconnect\" });\r\n        //     console.log(\"dev: onload - enabled web3-WC\");\r\n        // } catch (e) {\r\n        //     console.error(e);\r\n        //     console.error(\"dev: onload - failed to enable web3-WC\");\r\n        // }\r\n        if (isUserConnected()) {\r\n            console.log(\"dev: Page-refreshed - User already connected\");\r\n            login(\"walletconnect\");\r\n        } else {\r\n            console.log(\"dev: Page-refreshed - User not connected\");\r\n        }\r\n    }\r\n};\r\n/**\r\n * *******************************    WEB3    *******************************\r\n */\r\n// const TEST_ENVIRONMENT = true;\r\nconst TEST_ENVIRONMENT = false;\r\n\r\nconst REFER_CONTRACT_ADDRESS_TESTNET = '0xfe2E124FE1418419A9efd8Ba987Fa1769D506c8a';\r\n// if TEST_ENVIRONMENT is false then use mainnet contract else testnet contract\r\nconst REFER_CONTRACT_ADDRESS_MAINNET = '0x5832E385f633b30519B3ECaDE3C5eD3d9881cf58'; //mainnet contract\r\n\r\nconst DEPLOYED_CONTRACT_ADDRESS = TEST_ENVIRONMENT ? REFER_CONTRACT_ADDRESS_TESTNET : REFER_CONTRACT_ADDRESS_MAINNET;\r\nconsole.log(`Deployed Presale Contract is ${DEPLOYED_CONTRACT_ADDRESS}`);\r\n\r\nconst CONFIRMATIONS_ON_BSC = 5;\r\n// paid-account-joshi-sir\r\nconst serverUrl_Testnet = \"https://gusm6vrpbwtk.usemoralis.com:2053/server\"; //BSC testnet\r\nconst appId_Testnet = \"glRYjrZo9XjLE2MPc7sWgzc4PyoFs3RbmyoNiPbf\"; //BSC testnet\r\nlet serverUrl_Mainnet = \"https://gb6gwydcjjw6.usemoralis.com:2053/server\"; //BSC mainnet\r\nlet appId_Mainnet = \"Zq3s8magh8mlppfXIGSHZRdLj49LlCnIaqs2mD2U\"; //BSC mainnet\r\n\r\nlet currentChainIdHex; //default chain set to ETH\r\ntry {\r\n    // if (await isWeb3Installed()) {\r\n    if (TEST_ENVIRONMENT) {\r\n        console.info(`starting server - testnet `);\r\n        serverUrl = \"https://gusm6vrpbwtk.usemoralis.com:2053/server\"; //BSC testnet\r\n        appId = \"glRYjrZo9XjLE2MPc7sWgzc4PyoFs3RbmyoNiPbf\"; //BSC testnet\r\n        Moralis.start({ serverUrl: serverUrl_Testnet, appId: appId_Testnet });\r\n    } else {\r\n        console.info(`starting server - mainnet `);\r\n        Moralis.start({ serverUrl: serverUrl_Mainnet, appId: appId_Mainnet });\r\n    }\r\n    // } else {\r\n    //     console.error(`dev: wallet/web3 not installed`);\r\n    // }\r\n\r\n} catch (error) {\r\n    console.error(`Server failed to start -ln-34`);\r\n    console.log(error);\r\n}\r\n\r\n\r\nconst walletOptions = document.getElementById(\"wallet-options\");\r\nconst loginBtn = document.getElementById(\"web3-login-mm\");\r\nconst logoutBtn = document.getElementById(\"web3-logout\");\r\nconst buyBtn = document.getElementById(\"buy_btn\");\r\nconst showTokenBtn = document.getElementById(\"web3-tokens\");\r\n\r\n// need it to be hex and not string coz then I get RPC URL Error\r\nconst BscChainIdMain = 0x38; //Bsc Mainnet ID\r\nconst BscChainIdTest = 0x61; //Bsc Testnet ID\r\n// const BscChainIdTest = 97; //Bsc Testnet ID\r\n\r\nconst showAddressHeader = document.getElementById(\"web3-wallet-address-header\");\r\n\r\nlet web3 = new Web3(Moralis.provider || Web3.givenProvider);\r\nconst NODE_URL_TESTNET = \"https://speedy-nodes-nyc.moralis.io/7569a2c3fc822716349963c8/bsc/testnet\";\r\nconst NODE_URL_MAINNET = \"https://speedy-nodes-nyc.moralis.io/7569a2c3fc822716349963c8/bsc/mainnet\";\r\n\r\nlet provider = '';\r\n// if (TEST_ENVIRONMENT) {\r\n//     provider = new Web3.providers.HttpProvider(NODE_URL_TESTNET);\r\n// } else {\r\n//     provider = new Web3.providers.HttpProvider(NODE_URL_MAINNET);\r\n// }\r\n\r\n\r\nconst userEnteredPassword = document.querySelector('#presale-password');\r\n\r\nfunction atLogin() {\r\n    /**\r\n    * 1. show referral box - toggle visibility of it\r\n    */\r\n    let userAddress = getUserWalletAddress();\r\n    const URL_Prefix = 'https://presale.battleinfinity.io/?refercode='\r\n    let USER_RefferalLink = `${URL_Prefix}${userAddress}`;\r\n    // let USER_RefferalLink = `url/${userAddress}`;\r\n\r\n    /**\r\n     * If there is a presale password field - only then \r\n     * presalePasswordEntered = true;\r\n     */\r\n    if (!userEnteredPassword) {\r\n        presalePasswordEntered = true;\r\n    }\r\n\r\n    /**\r\n     * Manages the left to make sure that weird zoomed out page effect doesn't happen\r\n     */\r\n    manageTooltipWidth();\r\n    toggleChainName(true);\r\n    toggleConnectStatus();\r\n    populateUserAddress(getUserWalletAddress(), true);\r\n\r\n    const secondLoginBtn = document.querySelector('#second-login-btn')\r\n    disableButton(secondLoginBtn)\r\n    secondLoginBtn.setAttribute(\"for\", \"\");\r\n\r\n    let BSC_Chain = TEST_ENVIRONMENT ? BscChainIdTest : BscChainIdMain;\r\n\r\n    // let currentChain = await Moralis.getChainId();\r\n    let tempCurrentChainIdHex = parseInt(currentChainIdHex, 16);\r\n    if (tempCurrentChainIdHex === BSC_Chain) {\r\n        try {\r\n            console.log(`start - populateReferralLinkinHTML ..`);\r\n            populateReferralLinkinHTML(USER_RefferalLink);\r\n            console.log(`done - populateReferralLinkinHTML `);\r\n        } catch (error) {\r\n            console.error(`dev:failed - populateReferralLinkinHTML`);\r\n        }\r\n        try {\r\n            console.log(`start - populateReferrerinHTML ..`);\r\n            populateReferrerinHTML(userAddress);\r\n            console.log(`done - populateReferrerinHTML`);\r\n        } catch (error) {\r\n            console.error(`dev:failed - populateReferrerinHTML`);\r\n        }\r\n        try {\r\n            console.log(`start - populateUserReferralComissions`);\r\n            populateUserReferralComissions(userAddress);\r\n            console.log(`done - populateUserReferralComissions`);\r\n        } catch (error) {\r\n            console.error(`dev:failed - populateUserReferralComissions`);\r\n        }\r\n        try {\r\n            console.log(`start - populateUserReferralsCount`);\r\n            populateUserReferralsCount(userAddress);\r\n            console.log(`done - populateUserReferralsCount`);\r\n        } catch (error) {\r\n            console.error(`dev:failed - populateUserReferralsCount`);\r\n        }\r\n        try {\r\n            console.log(`start - populateUsersInvestments`);\r\n            populateUsersInvestments(userAddress);\r\n            console.log(`done - populateUsersInvestments`);\r\n        } catch (error) {\r\n            console.error(`dev:failed - populateUsersInvestments`);\r\n        }\r\n        // each time a user logs in - they fetch value of BNBRaised and update the DB\r\n        try {\r\n            updateBNBRaised()\r\n        } catch (error) {\r\n            console.error(`failed - updateBNBRaised - atlogin`);\r\n        }\r\n    } else {\r\n        BSC_Chain += '';\r\n        console.error(`dev: atlogin() BSC_Chain = ${BSC_Chain}`);\r\n        console.error(`dev: atlogin() tempCurrentChainIdHex = ${tempCurrentChainIdHex}`);\r\n        console.error(`dev: Didn't run atlogin() methods coz wrong chain`);\r\n    }\r\n\r\n    if (isUserConnected()) toggleBtnVisibility(true);\r\n}\r\n\r\nasync function updateBNBRaised() {\r\n\r\n    const HARDCAP = +16500;\r\n    let raisedAmount = 0;\r\n    try {\r\n        raisedAmount = await getTotalBNBAmount(); //which will be 'logged out' if user is logged out\r\n    }\r\n    catch (e) {\r\n        console.error(e);\r\n        console.error(`dev:failed - updateBNBRaised`);\r\n    }\r\n    raisedAmount = +raisedAmount.toFixed(2);\r\n    let raisedAmountPercentage = '';\r\n    try {\r\n        raisedAmountPercentage = percentageOfBNBRaised(raisedAmount, HARDCAP);\r\n    } catch (error) {\r\n        console.error(`dev: percentageOfBNBRaised() issue`);\r\n    }\r\n    console.log(`raisedAmount = ${raisedAmount}`);\r\n    console.log(`raisedAmountPercentage = ${raisedAmountPercentage}`);\r\n    updateRaisedBNBinDB(raisedAmount, raisedAmountPercentage);\r\n}\r\n\r\n/**\r\n * Manages the left to make sure that weird zoomed out page effect doesn't happen\r\n */\r\nfunction manageTooltipWidth() {\r\n    const toolTip = document.querySelector('#web3-wallet-address-header');\r\n    if (!toolTip) {\r\n        console.error(`tooltip missing`);\r\n        return;\r\n    }\r\n    if (isUserConnected()) {\r\n        toolTip.dataset.tip = getUserWalletAddress();\r\n        if (+window.innerWidth <= 610) {\r\n            toolTip.style.setProperty(\"--custom-tooltip-left\", \"50%\");\r\n        } else {\r\n            toolTip.style.setProperty(\"--custom-tooltip-left\", \"0px\");\r\n        }\r\n    } else {\r\n        toolTip.dataset.tip = '';\r\n        if (+window.innerWidth > 610) {\r\n            //     toolTip.style.setProperty(\"--custom-tooltip-left\", \"50%\");\r\n            toolTip.style.setProperty(\"--custom-tooltip-left\", \"-15px\");\r\n        }\r\n        // }\r\n    }\r\n}\r\n\r\nasync function addNetwork(chainId) {\r\n    const BscChainId = chainId;\r\n    const chainName = TEST_ENVIRONMENT ? \"BNB Testnet\" : \"BNB Smart Chain Mainnet\";\r\n    const currencyName = TEST_ENVIRONMENT ? \"tBNB\" : \"BNB\";\r\n    const currencySymbol = TEST_ENVIRONMENT ? \"tBNB\" : \"BNB\";;\r\n    const rpcUrl = TEST_ENVIRONMENT ? NODE_URL_TESTNET : NODE_URL_MAINNET;\r\n    const blockExplorerUrl = TEST_ENVIRONMENT ? \"https://testnet.bscscan.com/\" : \"https://bscscan.com/\";\r\n    console.log('BscChainId-chainName-rpcUrl-blockexplorer');\r\n    console.log(`${BscChainId}-${chainName}-${rpcUrl}-${blockExplorerUrl}`);\r\n    await Moralis.addNetwork(\r\n        BscChainId,\r\n        chainName,\r\n        currencyName,\r\n        currencySymbol,\r\n        rpcUrl,\r\n        blockExplorerUrl\r\n    );\r\n}\r\n\r\nasync function switchAndAdd(toChainId = '0x61') {\r\n    console.log(`switchAndAdd - toChainid`);\r\n    console.log(toChainId);\r\n    try {\r\n        await switchNetwork(toChainId);\r\n    } catch (er) {\r\n        await addNetwork(toChainId);\r\n    }\r\n}\r\nasync function switchNetwork(toChainId = '0x61') {\r\n    currentChainIdHex = await Moralis.switchNetwork(toChainId);\r\n}\r\n\r\nasync function login(provider) {\r\n\r\n    let BSC_Chain = TEST_ENVIRONMENT ? BscChainIdTest : BscChainIdMain;\r\n    let user = Moralis.User.current();\r\n\r\n    if (!user) {\r\n        console.info(`dev: login() - Provider :${provider}`);\r\n\r\n        if (provider === 'walletconnect') {\r\n            try {\r\n                console.info(`⚪Authenticating with WalletConnect`);\r\n                user = await Moralis.authenticate({\r\n                    provider: \"walletconnect\",\r\n                    chainId: BSC_Chain,\r\n                    signingMessage: \"Battle Infinity Authentication: WalletConnect\"\r\n                });\r\n                console.info(`✅Authenticated with WalletConnect`);\r\n            } catch (error) {\r\n                console.error(error);\r\n                console.error(`dev:❌Authentication Failed - Walletconnect - login()`);\r\n            }\r\n        } else {\r\n            console.info(`Authenticating with MetaMask`);\r\n            try {\r\n                currentChainIdHex = await Moralis.getChainId();\r\n                // Authenticate only if user is on correct chain\r\n                if (currentChainIdHex !== BSC_Chain) {\r\n                    console.log(`Current chain -${currentChainIdHex}`);\r\n                    console.log(\"BSC chain - 56\");\r\n                    console.log(`BSC_Chain - ${BSC_Chain}`);\r\n\r\n                    try {\r\n                        console.log(\"dev: login metamask - enabling web3 for switching chain\");\r\n                        await Moralis.enableWeb3();\r\n                        console.log(\"dev: login metamask - enabled web3 for switching chain\");\r\n                    } catch (e) {\r\n                        console.error(e);\r\n                        console.error(\"dev: login metamask - failed to enable web3 for switching chain\");\r\n                    }\r\n                    await switchAndAdd(BSC_Chain);\r\n                }\r\n\r\n                user = await Moralis.authenticate({ signingMessage: \"Battle Infinity Authentication\" })\r\n\r\n                try {\r\n                    if (!TEST_ENVIRONMENT) hitDataLayer(getUserWalletAddress())\r\n                } catch (error) {\r\n                    console.error(`dev:couldn't hit data layer`);\r\n                }\r\n\r\n            } catch (error) {\r\n                console.error(error);\r\n                console.error(\"dev: login metamask - failed to enable web3 for switching chain\");\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    try {\r\n        currentChainIdHex = await Moralis.getChainId();\r\n        console.info(\"dev:getChainId() succeded - login()\");\r\n        console.info(`dev: current chain ${currentChainIdHex} - login()`);\r\n    } catch (e) {\r\n        console.error(e);\r\n        console.error(\"dev:getChainId() Failed - login()\");\r\n    }\r\n\r\n    if (isUserConnected()) {\r\n        console.log(\"IBAT Authentication - userconnected\");\r\n        atLogin();\r\n\r\n    }\r\n}\r\n\r\n\r\nfunction getUserWalletAddress() {\r\n    let err = 'Wallet not connected';\r\n    if (!isUserConnected())\r\n        return err;\r\n\r\n    return Moralis.User.current().get(\"ethAddress\");\r\n}\r\n\r\nfunction isUserConnected() {\r\n    let user = Moralis.User.current();\r\n    return user ? true : false;\r\n}\r\n\r\nasync function logOut() {\r\n    await Moralis.User.logOut();\r\n    try {\r\n        await Moralis.deactivateWeb3();\r\n        console.info(`Success - Moralis.deactivateWeb3() -logout()`)\r\n    } catch (e) {\r\n        console.error(\"dev:failed Moralis.deactivateWeb3(); - logout()\");\r\n    }\r\n    console.log(\"logged out\");\r\n    await atLogout();\r\n}\r\n\r\nasync function atLogout() {\r\n    /**\r\n     * 1. hide referral box\r\n     */\r\n    // need to \r\n    if (userEnteredPassword) presalePasswordEntered = false;\r\n\r\n    try {\r\n        populateReferralLinkinHTML('Wallet not connected');\r\n    } catch (error) {\r\n        console.log(error);\r\n        console.error(`dev:failed - populateReferralLinkinHTML('Wallet not connected') - atlogout()`);\r\n    }\r\n    try {\r\n        populateReferrerinHTML('Wallet not connected');\r\n    } catch (error) {\r\n        console.log(error);\r\n        console.error(`dev:failed - populateReferrerinHTML('Wallet not connected') - atlogout()`);\r\n    }\r\n    try {\r\n        populateUserReferralComissions('0');\r\n    } catch (error) {\r\n        console.log(error);\r\n        console.error(`dev:failed - populateUserReferralComissions('0') - atlogout()`);\r\n    }\r\n    try {\r\n        populateUserReferralsCount(0);\r\n    } catch (error) {\r\n        console.log(error);\r\n        console.error(`dev:failed - populateUserReferralsCount(0) - atlogout()`);\r\n    }\r\n    try {\r\n        populateUsersInvestments('0');\r\n    } catch (error) {\r\n        console.log(error);\r\n        console.error(`dev:failed - populateUsersInvestments`);\r\n    }\r\n\r\n    manageTooltipWidth();\r\n    toggleChainName(false);\r\n    toggleConnectStatus();\r\n    populateUserAddress(\"not connected\", false);\r\n\r\n    const secondLoginBtn = document.querySelector('#second-login-btn');\r\n    enableButton(secondLoginBtn);\r\n    secondLoginBtn.setAttribute(\"for\", \"wallets\");\r\n\r\n    // hiding addreferrer btn when logging out\r\n    const setReferrerBtn = document.querySelector('#add-referrer');\r\n    setReferrerBtn && setReferrerBtn.classList.add('hidden');\r\n\r\n    toggleBtnVisibility(false);\r\n    try {\r\n        setPresalePassword && setPresalePassword();\r\n    } catch (error) {\r\n        // console.error(error);\r\n        console.error(`dev:setPresalePassword(); not defined`);\r\n    }\r\n    try {\r\n        showArenaLock && showArenaLock(true);\r\n    } catch (error) {\r\n        // console.error(error);\r\n        console.error(`dev:showArenaLock(); not defined`);\r\n    }\r\n    const addReferrerBtn = document.getElementById('add-referrer-btn');\r\n    const addReferrerInput = document.getElementById('add-referrer-address');\r\n    enableButton(addReferrerBtn);\r\n    enableButton(addReferrerInput);\r\n}\r\n\r\n\r\n// async function getBalance(chainId, address) {\r\n//     const tokenList = document.getElementById('token-list');\r\n//     currentChainIdHex = await Moralis.getChainId();\r\n//     let currentUser = Moralis.User.current();\r\n//     let currentUserAddress = currentUser.get(\"ethAddress\");\r\n//     const options = { chain: chainId || currentChainIdHex || '0x38', address: address || currentUserAddress || \"0x9d51fd1a308c073f2f06a7181ad90c6d6ab5e9d7\" };\r\n//     // console.log(`getBalance called with \\n chaidId ${options.chain} and \\n of address: ${options.address}`);\r\n//     // const options = { chain: 'eth', address: \"0x9d51fd1a308c073f2f06a7181ad90c6d6ab5e9d7\" } // test address from Etherscan\r\n//     // const options = { chain: 'bsc', address: \"0x60913d3fE722bFE425247D7673D8bdbDA56D1e02\" } // test address from BSC (bscscan)\r\n\r\n//     const nativeBal = await Moralis.Web3API.account.getNativeBalance(options);\r\n\r\n//     if (tokenList) tokenList.innerHTML = `<li class=\"pr-2 flex justify-between w-full md:w-1/2 mx-auto mt-2\"><span class=\"w-1/2 text-center\">${HEX_TO_CHAIN_DETAILS[currentChainIdHex].nativeToken}</span><span class=\"w-1/2 text-left\">${web3.utils.fromWei(nativeBal.balance)}</span></li>`\r\n\r\n//     const balances = await Moralis.Web3API.account.getTokenBalances(options);\r\n\r\n//     if (balances.length) {\r\n//         balances.forEach(token => {\r\n//             // console.log(`not - ${token.symbol}`);\r\n//             if (token.symbol == 'USDC' || token.symbol == 'BUSD' || token.symbol == 'IBAT') {\r\n//                 const balance = convertTokenBalance(token.balance, token.decimals);\r\n//                 // const tokenFromWei = web3.utils.fromWei(token.balance)\r\n//                 if (!tokenList) {\r\n//                     console.error('ln:226 - Token List Missing');\r\n//                 } else {\r\n//                     tokenList.innerHTML += `<li class=\"pr-2 flex justify-between w-full md:w-1/2 mx-auto\"><span class=\"w-1/2 text-center\">${token.symbol}</span><span class=\"w-1/2 text-left\">${balance}</span></li>`\r\n//                 }\r\n//             }\r\n//         });\r\n//     } else {\r\n//         if (!tokenList) {\r\n//             console.error('dev:getBalance() - Token List Missing');\r\n//         } else {\r\n//             tokenList.innerHTML += `<li class=\"w-full text-center mx-auto text-xs opacity-80 mt-2\">no other tokens available</li>`\r\n//         }\r\n//     }\r\n// }\r\n\r\n\r\nfunction toggleBtnVisibility(connected) {\r\n    const allBtns = document.querySelectorAll('.wallet-options-btn ');\r\n    if (connected) { //show\r\n        allBtns.forEach(btn => {\r\n            btn.classList.add('hidden');\r\n        });\r\n        logoutBtn && logoutBtn.classList.remove('hidden');\r\n        showTokenBtn && showTokenBtn.classList.remove('hidden');\r\n        // loginBtn && loginBtn.classList.remove('hidden');\r\n    }\r\n    else {\r\n        if (!allBtns) {\r\n            console.error(`ln:249-Invalid Arguments`);\r\n        } else {\r\n            allBtns.forEach(btn => {\r\n                btn.classList.remove('hidden');\r\n            });\r\n        }\r\n        // walletOptions && walletOptions.classList.remove('hidden');\r\n        logoutBtn && logoutBtn.classList.add('hidden');\r\n        showTokenBtn && showTokenBtn.classList.add('hidden');\r\n    }\r\n}\r\n\r\nfunction toggleConnectStatus() {\r\n    const statusFields = document.querySelectorAll('.connectivity-status');\r\n    statusFields && statusFields.forEach(el => {\r\n        if (isUserConnected()) {\r\n            el.classList.remove('bg-red-400')\r\n            el.style.background = \"#4ade80\";\r\n            el.innerHTML = 'connected'\r\n        } else {\r\n            el.style.background = \"#f87171\";\r\n            el.innerHTML = 'not connected'\r\n        }\r\n    });\r\n}\r\n\r\n\r\nfunction convertTokenBalance(balance, decimals) {\r\n    let newBalance = balance == 0 ? 0 : balance / Math.pow(10, decimals);\r\n    newBalance = newBalance < 0.001 ? 0 : newBalance;\r\n    return newBalance;\r\n}\r\n\r\n\r\n\r\nasync function isPresaleOpen() {\r\n    const ABI = [{ \"inputs\": [], \"name\": \"isPresaleOpen\", \"outputs\": [{ \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" }], \"stateMutability\": \"view\", \"type\": \"function\" }];\r\n    const result = await readFunction('isPresaleOpen', ABI);\r\n    // console.log(`isPresaleOpen = ${result}`);\r\n    return result;\r\n}\r\n\r\n// isPresaleOpen();\r\n\r\nasync function readFunction(functionName, ABI) {\r\n\r\n    let options = {\r\n        contractAddress: DEPLOYED_CONTRACT_ADDRESS,\r\n        functionName: functionName,\r\n        abi: ABI,\r\n    }\r\n    return await Moralis.executeFunction(options);\r\n}\r\n\r\n\r\n\r\nfunction getBuyAmount() {\r\n    // @todo: validate input\r\n    let buyAmount = 0;\r\n    const buyAmounts = document.querySelectorAll('.buy-amount');\r\n    // console.log(buyAmounts.length);\r\n\r\n    // const buyAmountMob = document.getElementById(\"buy-amount-mobile\");\r\n    // const buyAmountDesktop = document.getElementById(\"buy-amount-desktop\");\r\n    // if (buyAmountMob.classList.contains(hidden))\r\n    buyAmounts.forEach(el => {\r\n        if (el.value) {\r\n            // console.log(`${el.value}`);\r\n            buyAmount = +el.value;\r\n        }\r\n    });\r\n    console.log(`buyAmount = ${+buyAmount}`);\r\n    return buyAmount;\r\n}\r\n\r\nasync function buyToken() {\r\n    const BNBValue = +getBuyAmount();\r\n\r\n    const errMsgContainer = document.getElementById('buy-token-error-con');\r\n    const errMsg = document.getElementById('buy-token-error-msg');\r\n    let msg = 'Error';\r\n\r\n    if (BNBValue <= 0) {\r\n        msg = 'Enter valid amount between 0.1-500BNB';\r\n        console.error(`dev: BNBAmount = ${BNBValue}`);\r\n        showErrMsg(errMsgContainer, errMsg, msg);\r\n        return;\r\n    }\r\n    if (isNaN(BNBValue)) {\r\n        msg = 'Enter valid amount';\r\n        console.error(`dev: BNBAmount = ${BNBValue}`);\r\n        console.error(`dev: isNaN(BNBAmount) = ${isNaN(BNBValue)}`);\r\n        showErrMsg(errMsgContainer, errMsg, msg);\r\n        return;\r\n    }\r\n    if (!isUserConnected()) {\r\n        console.log('User not Logged in - connect wallet');\r\n        msg = 'Wallet not connected';\r\n        showErrMsg(errMsgContainer, errMsg, msg);\r\n        return;\r\n    }\r\n    let isSaleOpen = false;\r\n    try {\r\n        isSaleOpen = await isPresaleOpen();\r\n        console.log(`sale open - ${isSaleOpen}`);\r\n    } catch (error) {\r\n        console.error(error);\r\n        console.error(`dev:failed isSaleOpen() - buyToken()`);\r\n    }\r\n    if (!isSaleOpen) {\r\n        console.log('Presale is not open');\r\n        msg = 'Presale has not yet started !!!';\r\n        showErrMsg(errMsgContainer, errMsg, msg);\r\n        return;\r\n    }\r\n    const MIN_BNB = TEST_ENVIRONMENT ? 0 : 0.1;\r\n    const MAX_BNB = 500;\r\n    if (\"0xc8179e6927b61a4fdc3e5a2db14e641e51b9ad83\" !== getUserWalletAddress() && +BNBValue < MIN_BNB) {\r\n        msg = 'Minimum BNB Amount should be 0.1BNB';\r\n        showErrMsg(errMsgContainer, errMsg, msg);\r\n        return;\r\n    }\r\n    if (+BNBValue > MAX_BNB) {\r\n        msg = 'Maximum BNB Amount is 500BNB';\r\n        showErrMsg(errMsgContainer, errMsg, msg);\r\n        return;\r\n    }\r\n\r\n    const FUNCTION_NAME = 'buyToken';\r\n    const ABI = [{ \"inputs\": [], \"name\": \"buyToken\", \"outputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }], \"stateMutability\": \"payable\", \"type\": \"function\" }];\r\n    let options = {\r\n        contractAddress: DEPLOYED_CONTRACT_ADDRESS,\r\n        functionName: FUNCTION_NAME,\r\n        abi: ABI,\r\n        msgValue: Moralis.Units.ETH(BNBValue)\r\n    }\r\n\r\n    let result;\r\n    try {\r\n        // result = await Moralis.executeFunction(options);\r\n        let userAddress = getUserWalletAddress();\r\n        console.log(`Transaction started`);\r\n        if (!TEST_ENVIRONMENT) swapAmountDataLayer(userAddress);\r\n        const transaction = await Moralis.executeFunction(options);\r\n        showTransactionLoader(true);\r\n        if (!TEST_ENVIRONMENT) confirmTransactionDataLayer(userAddress);\r\n        console.log(`Transaction finished`);\r\n        console.log(`Transaction`);\r\n        console.log(transaction);\r\n\r\n        result = await transaction.wait(CONFIRMATIONS_ON_BSC);\r\n        console.log(`Result`);\r\n        console.log(result.transactionHash);\r\n        updateBNBRaised();\r\n        showTransactionLoader(false);\r\n        alert(\"✅Transaction Successful✅\\nPlease Import token and check your wallet.\");\r\n        refreshUsersInvestments();\r\n        let IBATValue = calculateIBATAmount(BNBValue);\r\n        if (!TEST_ENVIRONMENT) result && swapSuccessfulDataLayer(userAddress, result.transactionHash, BNBValue, IBATValue);\r\n        console.log(`Add: ${userAddress} \\n tID: ${result.transactionHash} \\n BNB: ${BNBValue} \\nIBAT: ${IBATValue}`);\r\n\r\n    } catch (error) {\r\n        console.log(`Transaction cancelled`);\r\n        if (error.message) {\r\n            console.log(error.message);\r\n            msg = error.message;\r\n            if (msg.includes('User denied transaction signature')) {\r\n                msg = 'Transaction declined by User';\r\n                showErrMsg(errMsgContainer, errMsg, msg);\r\n                return;\r\n            }\r\n        }\r\n        msg = error.data.message;\r\n        console.log(msg);\r\n        msg = 'Insufficient BNB in wallet';\r\n        showErrMsg(errMsgContainer, errMsg, msg);\r\n    }\r\n\r\n}\r\n\r\nasync function getTotalBNBAmount() {\r\n    const functionName = 'totalBNBAmount';\r\n    const ABI_totalBNBAmount = [{ \"inputs\": [], \"name\": \"totalBNBAmount\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }], \"stateMutability\": \"view\", \"type\": \"function\" }];\r\n    let options = {\r\n        contractAddress: DEPLOYED_CONTRACT_ADDRESS,\r\n        functionName: functionName,\r\n        abi: ABI_totalBNBAmount,\r\n    }\r\n\r\n    let raisedAmount = await Moralis.executeFunction(options);\r\n    raisedAmount = raisedAmount / Math.pow(10, DECIMALS);\r\n    return raisedAmount;\r\n}\r\n\r\nasync function populateAmountRaisedinHTML() {\r\n    let BSC_Chain = TEST_ENVIRONMENT ? BscChainIdTest : BscChainIdMain;\r\n    console.log(`populateAmountRaisedinHTML-switchAndAdd-chainId-${BSC_Chain}`);\r\n    await switchAndAdd(BSC_Chain);\r\n\r\n    console.log(`ran - populateAmountRaisedinHTML`);\r\n\r\n    let raisedAmount = await getTotalBNBAmount(); //which will be 'logged out' if user is logged out\r\n    raisedAmount = +raisedAmount.toFixed(2);\r\n    console.log(`raisedAmount = ${raisedAmount}`);\r\n    const HARDCAP = +16500;\r\n    let raisedAmountPercentage = '';\r\n    try {\r\n        raisedAmountPercentage = percentageOfBNBRaised(raisedAmount, HARDCAP);\r\n    } catch (error) {\r\n        console.error(`dev: percentageOfBNBRaised() issue`);\r\n    }\r\n    // if (raisedAmountPercentage < 1) raisedAmountPercentage = 1;\r\n    console.log(`raisedAmount = ${raisedAmount}`);\r\n    console.log(`setting % = ${raisedAmountPercentage}`);\r\n    // if user is logged-in we change the value of refferValue\r\n    const progressBars = document.querySelectorAll('.sale-progress');\r\n\r\n\r\n    progressBars && progressBars.forEach(el => {\r\n        // in this example - the countValue = 0\r\n        let percentageForBar = raisedAmountPercentage;\r\n        percentageForBar < 1 ? percentageForBar = 1 : '';\r\n        el.value = percentageForBar;\r\n    });\r\n\r\n\r\n    const raisedAmountHTML = document.querySelectorAll('.sale-progress-amount');\r\n    raisedAmountHTML && raisedAmountHTML.forEach(el => {\r\n        el.innerHTML = raisedAmount;\r\n    })\r\n\r\n\r\n    const raisedAmountPercentageHTML = document.querySelectorAll('.sale-progress-percentage');\r\n    raisedAmountPercentageHTML && raisedAmountPercentageHTML.forEach(el => {\r\n        el.innerHTML = raisedAmountPercentage;\r\n    })\r\n\r\n\r\n    const parentContainer = document.querySelectorAll('.sale-progress-val-parent');\r\n    parentContainer.forEach(e => {\r\n        let leftVal = +raisedAmountPercentage - 3;\r\n        const maxLeftVal = +94;\r\n        // console.log(`-left = ${leftVal}`);\r\n        leftVal >= maxLeftVal ? leftVal = maxLeftVal : '';\r\n        const minLeftVal = +0;\r\n        leftVal <= minLeftVal ? leftVal = minLeftVal : '';\r\n        // console.log(`-left = ${leftVal}`);\r\n        // console.log(e);\r\n        e.style.left = `${leftVal}%`;\r\n    })\r\n    const parentContainerMob = document.querySelectorAll('.sale-progress-val-parent-mob');\r\n    parentContainerMob.forEach(e => {\r\n        let leftVal = +raisedAmountPercentage - 3;\r\n        const maxLeftValMob = +65;\r\n        leftVal >= maxLeftValMob ? leftVal = maxLeftValMob : '';\r\n        const minLeftValMob = +0;\r\n        leftVal <= minLeftValMob ? leftVal = minLeftValMob : '';\r\n        // console.log(`left = ${leftVal}`);\r\n        // console.log(e);\r\n        e.style.left = `${leftVal}%`;\r\n    })\r\n}\r\n\r\nfunction toggleErrMsg() {\r\n    const errMsg = document.getElementById('buy-token-error-input');\r\n    errMsg.checked = !errMsg.checked;\r\n}\r\n\r\nasync function isWeb3Installed() {\r\n    const ethereum = window.ethereum;\r\n    let isInstalled = true;\r\n    if (!ethereum || !ethereum.on) {\r\n        console.log(`dev:isWeb3Installed - Metamask not installed`);\r\n        isInstalled = false;\r\n    }\r\n    return isInstalled;\r\n}\r\n\r\nfunction toggleChainName(hide = false) {\r\n    const elParent = document.getElementById('web3-wallet-chainid-con');\r\n    const el = document.getElementById('web3-wallet-chainid');\r\n    if (hide) {\r\n        el.innerHTML = HEX_TO_CHAIN_DETAILS[currentChainIdHex] ? HEX_TO_CHAIN_DETAILS[currentChainIdHex].chain : 'NOT BSC';\r\n        elParent.classList.remove('hidden');\r\n    } else {\r\n        elParent.classList.add('hidden');\r\n    }\r\n}\r\n\r\nfunction populateUserAddress(e, o = !1) {\r\n    const labels = document.querySelectorAll(\".web3-wallet-address-label\");\r\n    const n = document.querySelectorAll(\".web3-wallet-address-field\");\r\n    n &&\r\n        n.forEach((o) => {\r\n            o.value = e;\r\n        }),\r\n        labels &&\r\n        labels.forEach((e) => {\r\n            o ? e.classList.remove(\"hidden\") : e.classList.add(\"hidden\");\r\n        });\r\n}\r\nconst showAddressBtn = document.getElementById(\"web3-wallet-address-btn\");\r\nlet showAddressFied = false;\r\nfunction toggleShowAddress() {\r\n    showAddressFied = !showAddressFied;\r\n    const e = document.querySelectorAll(\".web3-wallet-address-label input\");\r\n    console.log(`toggleShowAddress - show : ${showAddressFied}`),\r\n        e.forEach((e) => {\r\n            if (showAddressFied) {\r\n                e.setAttribute(\"type\", \"text\");\r\n                showAddressBtn.innerHTML = \"HIDE\";\r\n            } else {\r\n                e.setAttribute(\"type\", \"password\");\r\n                showAddressBtn.innerHTML = \"SHOW\";\r\n            }\r\n        });\r\n}\r\n\r\nif (showAddressBtn) {\r\n    showAddressBtn.onclick = toggleShowAddress;\r\n}\r\nif (buyBtn) {\r\n    buyBtn.onclick = buyToken;\r\n} else {\r\n    console.error(`Login button missing in UI`);\r\n}\r\nif (loginBtn) {\r\n    loginBtn.onclick = login;\r\n} else {\r\n    console.error(`Login button missing in UI`);\r\n}\r\nif (logoutBtn) {\r\n    logoutBtn.onclick = logOut;\r\n} else {\r\n    console.error(`Logout button missing in UI`);\r\n}\r\n// showTokenBtn.onclick = getBalance;\r\n\r\nconst HEX_TO_CHAIN_DETAILS = {\r\n    '0x1': {\r\n        chain: 'ETH',\r\n        nativeToken: 'ETH'\r\n    },\r\n    '0x61': {\r\n        // BSC testnet\r\n        chain: 'tBSC Testnet',\r\n        nativeToken: 'tBNB'\r\n    }\r\n    ,\r\n    '0x38': {\r\n        // BSC mainnet\r\n        chain: 'BSC Mainnet',\r\n        nativeToken: 'BNB'\r\n    }\r\n}\r\n\r\n"],"names":["window","onload","async","console","log","populateAmountRaisedinHTMLDB","isWeb3Installed","Moralis","enableWeb3","e","error","isUserConnected","login","TEST_ENVIRONMENT","REFER_CONTRACT_ADDRESS_TESTNET","REFER_CONTRACT_ADDRESS_MAINNET","DEPLOYED_CONTRACT_ADDRESS","CONFIRMATIONS_ON_BSC","info","start","serverUrl","serverUrl_Mainnet","appId","appId_Mainnet","walletOptions","document","getElementById","loginBtn","logoutBtn","buyBtn","showTokenBtn","BscChainIdMain","BscChainIdTest","showAddressHeader","web3","Web3","provider","givenProvider","NODE_URL_TESTNET","userEnteredPassword","querySelector","atLogin","userAddress","getUserWalletAddress","USER_RefferalLink","presalePasswordEntered","manageTooltipWidth","secondLoginBtn","setAttribute","BSC_Chain","tempCurrentChainIdHex","parseInt","currentChainIdHex","populateReferralLinkinHTML","populateReferrerinHTML","error1","populateUserReferralComissions","error2","populateUserReferralsCount","error3","populateUsersInvestments","error4","updateBNBRaised","error5","toggleBtnVisibility","raisedAmount","getTotalBNBAmount","toFixed","raisedAmountPercentage","percentageOfBNBRaised","toolTip","dataset","tip","innerWidth","style","setProperty","addNetwork","chainId","BscChainId","chainName","rpcUrl","NODE_URL_MAINNET","blockExplorerUrl","switchAndAdd","toChainId","switchNetwork","provider1","User","current","authenticate","error6","getChainId","user","signingMessage","hitDataLayer","error7","get","logOut","deactivateWeb3","atLogout","error8","error9","error10","error11","error12","populateUserAddress","enableButton","setReferrerBtn","classList","add","setPresalePassword","showArenaLock","error13","addReferrerBtn","addReferrerInput","connected","allBtns","querySelectorAll","forEach","btn","remove","toggleConnectStatus","statusFields","el","background","convertTokenBalance","balance","decimals","newBalance","Math","pow","isPresaleOpen","readFunction","inputs","name","outputs","internalType","type","stateMutability","functionName","ABI","options","contractAddress","executeFunction","getBuyAmount","buyAmount","value","buyToken","BNBValue","errMsgContainer","errMsg","msg","showErrMsg","isNaN","isSaleOpen","error14","result","abi","msgValue","Units","ETH","swapAmountDataLayer","transaction","confirmTransactionDataLayer","wait","transactionHash","showTransactionLoader","alert","refreshUsersInvestments","IBATValue","calculateIBATAmount","swapSuccessfulDataLayer","error15","message","includes","data","DECIMALS","populateAmountRaisedinHTML","progressBars","percentageForBar","raisedAmountHTML","innerHTML","raisedAmountPercentageHTML","leftVal","left","toggleErrMsg","checked","ethereum","isInstalled","on","toggleChainName","hide","elParent","HEX_TO_CHAIN_DETAILS","chain","e1","o1","n","o","labels","showAddressBtn","showAddressFied","toggleShowAddress","e2","onclick"],"version":3,"file":"index.3b97df8d.js.map"}