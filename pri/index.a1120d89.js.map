{"mappings":"AAAAA,OAAOC,OAAMC,oBACTC,QAAQC,IAAG,cAsBPC,0DAUSC,kBAAA,CACTH,QACIC,IAAA,wEAEP,IACiFD,QAAAC,IAAA,qCACoFG,QAAAC,aAC1JL,QAAAC,IAAA,8BAC6C,MAAAK,GACUN,QAAAO,MAAAD,GAAAN,QAAAO,MAAA,uCAE/CC,mBACQR,QAAAC,IAAA,gDACuCQ,SAC3DT,QAAAC,IAAA,uDACAE,mBAAoBK,oBAiB+CA,mBACzER,QAAAC,IAAA,gDACAQ,MAAA,kBAEAT,QAAAC,IAAA,8CAON,MAAMS,kBAAiB,EACjBC,YAAa,EACfC,QAAqE,KACrEC,+BAA0D,6CAGzDC,+BAAA,6CACgCC,iCAAA,6CAC/BC,0BAAqBD,yCACnBd,IAAA,gCAAce,6CACL,6BAEM,oBAAsC,gEAAe,iEACxEC,kBAAQ,gEACQ,+CAadjB,QAAAkB,KAAa,8BACbd,QAAQe,MAAG,CACXC,UAAYH,kBACNI,MAAGC,gBAQf,MAAMf,GAEFP,QAAOO,MAAI,iCACfP,QAAMC,IAAAM,GAGN,MAAIgB,cAAaC,SAAAC,eAAA,kBACSC,SAAAF,SAAAC,eAAA,iBAC0CE,UAAAH,SAAAC,eAAA,eACzDG,OAAAJ,SAAAC,eAAA,WACyDI,aAAAL,SAAAC,eAAA,eAI9DK,eAAA,kBAEc,GAKhBC,kBAAkEP,SAAAC,eAAA,kCAClEO,KAAI,IAAAC,KAAA7B,QAAiB8B,UAAMD,KAAaE,qBACQC,iBAAA,2EAK7CC,iBAAA,+EAKHH,SAEG,SAQHI,oBAAed,SAAkBe,cAAI,8BAEjCC,UAIF,IAAEC,EAAAC,6BAEiB,gDAAAD,IAKhBH,sBAAAK,wBAAA,yCAIW,6CAEAD,wBAAO,SAClBE,EAAApB,SAAAe,cAAA,mCACIK,KACMC,aAAM,MAAA,UAnDnB,GAsDEC,EAAiBC,SAAAC,kBAAA,WACEC,EAAA,CACnB,IACIjD,QAACC,IAAA,yCACDiD,2BAAaC,GACbnD,QAAAC,IAAA,4CACAM,GACFP,QAAOO,MAAQ,2CAEjB,IACIP,QAACC,IAAA,qCACDmD,uBAAaX,GACbzC,QAAAC,IAAA,uCACAoD,GACFrD,QAAOO,MAAQ,uCAEjB,IAC6EP,QAAAC,IAAA,0CACzEqD,+BAACb,GACDzC,QAAAC,IAAA,yCACF,MAAOsD,GACLvD,QAAQO,MAAK,+CAGpB,IACGP,QAASC,IAAM,sCACfuD,2BAAef,GACfzC,QAAQC,IAAO,qCACf,MAAQwD,GACXzD,QAAAO,MAAA,2CAGJ,YAEcN,IAAA,oCAEoCyD,yBAAAjB,GAC3CzC,QAAYC,IAAI,mCACf,MAAA0D,GACD3D,QAAYO,MAAG,yCAIf,IACHqD,kBACD,MAAYC,GACR7D,QAAAO,MAAA,4CAGF0C,GAAe,GACbjD,QAAQO,MAAK,8BAAE0C,KAClBjD,QAAAO,MAAA,0CAAAuC,KACD9C,QAAWO,MAAE,qDAEbC,mBAAoBsD,qBAAc,GAGtC/D,eAEG6D,kBAGC,IAAEG,EAAa,MAEXA,QAAMC,oBACT,MAAA1D,GACGN,QAAAO,MAAAD,GACAN,QAAQO,MAAA,mCAIGwD,EAAOE,QAAmC,GAEzD,IAACC,EAAO,OAEJA,EAAyBC,sBAC4CJ,EApLJ,YAqL7DxD,GAEAP,QAAAO,MAAA,sCAEXP,QAAAC,IAAA,kBAAA8D,iBAEc,4BAAqBG,KAChCE,oBAAoBL,EAAmCG,GAIvD,SAAMG,qBACN,MAAMC,EAAA9C,SAAiBe,cAAgB,+BAClC+B,EAIL9D,mBAQH8D,EAAAC,QAAAC,IAAA9B,+BAEc+B,YAAa,IAASH,EAASI,MAAGC,YAAA,wBAAA,OACrCL,EAAKI,MAAAC,YAAA,wBAAwB,SAEjCL,EAACC,QAAAC,IAAA,IACI3E,OAAC4E,WAAc,KACtBH,EAASI,MAAGC,YAAA,wBAAA,UAlBd3E,QAAMO,MAAA,kCAsBKqE,WAAAC,GACX,QAGiBA,EAEbC,EAAgD,0BAIhDC,EATgB,oCAWhBC,EAAK,+BACD/E,IAAA,qDACAA,IAAA,GAAOgF,KAACH,KAAwBC,KAAQC,mBACxCJ,WAAaK,EAAAH,EARU,MAEnB,MAMyCC,EAAAC,kBAE7CE,aAAeC,EAAA,gBACflF,IAAA,oCACHA,IAAAkF,aAIOC,cAAcD,SACZE,oBACUF,mBAGXC,cAAAD,EAAA,gCACa/E,QAAAgF,cAAAD,kBAEd1E,MAAQ6E,OAEVC,EAADnF,QAAAoF,KAAAC,gBACG,SACJvE,KAAQ,4BAAMoE,iBAEVrF,IAAA,6CACgDyF,sBAAAtF,QAAAuF,yBAC5C1F,IAAA,qDAEAM,MAAAD,WACAC,MAAA,mDAGI,oBAAqE,iBACrE,8CACAH,QAAQwF,aAA4D,UACtE,wBAvNhB,kBAyN0B,0DAEZ1E,KAAK,2CACR2E,WAEGtF,MAAGsF,WAA6BtF,MAAA,qEAGhCW,KAAK,oCAKX,2BAHqBd,QAAA0F,aAnO7B,KAsOa9C,kBAAU,CACbhD,QAAQC,IAAM,kBAAK+C,qBACnBhD,QAAQC,IAAuE,kBAClFD,QAAAC,IAAA,kBAEJ,IACJD,QAAAC,IAAA,iEAEIG,QAAAC,aACDL,QAAoBC,IAAM,0DACwB,MAAAK,GACpCN,QAAAO,MAAAD,GACLN,QAAAO,MAAA,yEAEwC2E,aApPnD,IAuPEK,QAAoBnF,QAAAwF,aAAA,CACRG,eAAqC,mCAE7C,IAC2BC,aAAUtD,wBAChC,MAAOnC,GACJP,QAAMO,MAAK,gCAEtB,MAAA0F,GACMjG,QAAAO,MAAA0F,GACVjG,QAAAO,MAAA,qEAMD,IAGAyC,wBAA8B5C,QAAgB0F,aACjD9F,QAAAkB,KAAA,+CAEQA,KAAA,sBAAmB8B,+BACxB,MAAQ1C,GACRN,QAAWO,MAAOD,GACrBN,QAAAO,MAAA,qCAGG,GAAAC,kBAAmB,CACfR,QAACC,IAAA,uCACD,IACAiG,iBAAcC,gBACXnG,QAAMC,IAAA,eAAAiG,cACT,MAAQE,GACXpG,QAAAO,MAAA6F,GACOpG,QAAgBO,MAAA,wCAE3BiC,oBAO0BE,uBAGvB,OAAKlC,kBACDJ,QAAAoF,KAAAC,UAA0BY,IAAuB,cAHjD,gCAKA7F,kBAEJ,QADWJ,QAAQoF,KAAAC,yBAGfa,eACFlG,QAAOoF,KAAQc,mBAEblG,QAAauF,iBAChB3F,QAAAkB,KAAA,gDACD,MAAKZ,GACDN,QAAAO,MAAA,2DAEAN,IAAQ,oBACRsG,0BAECA,WAKJjE,sBAAAK,wBAAA,GACD,IACIO,2BAA4B,wBAC9B,MAAOsD,GACLxG,QAAQC,IAAIuG,GACZxG,QAAQO,MAAK,gFAEjB,IACI6C,uBAAkB,wBACpB,MAAOqD,GACLzG,QAAQC,IAAAwG,GACRzG,QAAQO,MAAK,4EAGjB,IACA+C,+BAAqB,KACrB,MAAAoD,GACA1G,QAAAC,IAAAyG,GAEA1G,QAAMO,MAAA,iEAEN,IAE0CiD,2BAAA,GAC1C,MAAMmD,GACN3G,QAAAC,IAAc0G,GAEd3G,QAAAO,MAAA,+DAGEmD,yBAAe,WACWkD,GACxB5G,QAAQC,IAAA2G,GACX5G,QAAAO,MAAA,6CAGC2F,YAAY,QACcW,GACxB7G,QAAQO,MAAKsG,GAChB7G,QAAAO,MAAA,gBAED8D,qBACAyC,iBAAa,GACbC,sBACAC,oBAAiB,iBAA0B,GAC9C,MAAApE,EAAApB,SAAAe,cAAA,qBAG+C0E,aAAArE,GACeA,EAAAC,aAAA,MAAA,WAEf,MAAAqE,EAAA1F,SAAAe,cAAA,iBACc2E,GAAAA,EAAAC,UAAAC,IAAA,UACmGtD,qBAAA,GAC/C,IACcuD,oBAAAA,qBACI,MAAA9G,GAI4JP,QAAAO,MAAA,yCAInQ,IACS+G,eAAAA,eAAA,GACiB,MAAAC,GAE+BvH,QAAAO,MAAA,oCAElD,MAAAiH,EAAAhG,SAAAC,eAAA,oBACgCgG,EAAAjG,SAAAC,eAAA,wBACzCwF,aAAAO,GAC6LP,aAAAQ,GACpMA,EAAAC,gBAAA,yCA0CCC,WACNnG,SAAuBoG,iBAAA,wBAC9BD,KACOE,SAAMC,IACTA,EAAGX,UAASC,IAAkB,aAErCzF,WAAAA,UAAAwF,UAAAY,OAAA,UACJlG,cAAAA,aAAAsF,UAAAY,OAAA,YAKGC,EACOA,EAAUH,SAAAC,IACpBA,EAAAX,UAAAY,OAAA,aAFgB/H,QAAaO,MAAK,4BAOlBoB,WAACA,UAAAwF,UAAAC,IAAA,wBAAavF,aAAAsF,UAAAC,IAAA,kDAAuD5F,SAAAoG,iBAAQ,2BAAEK,EAAUJ,SAAAK,mCAAkBH,OAAA,cAAAG,EAACxD,MAAAyD,WAAA,UAAED,EAAiBE,UAAA,cAA8BF,EAAAxD,MAAAyD,WAAA,UAACD,EAAAE,UAAA,oBAI/K,SAACC,oBAAAC,EAAAC,GAEkB,IAAAC,EAAA,GAAAF,EAAA,EAAAA,EAAAG,KAAAC,IAAA,GAAAH,GAIf,SAFWC,EAAa,KAAA,EAAcA,EAElCA,iBAEArC,gBAwBJ,aAFCwC,aAAA,gBArBW,CACX,CACMC,OAAM,GAChBC,KAAA,gBAIQC,QAAY,CACO,CACRC,aAAC,OACDF,KAAG,GACeG,KAAA,SAIaC,gBAAA,OAC/CD,KAAW,6BAWLL,aAAYO,EAAYC,GAE9B,IAAAC,EAAM,CACNC,gBAAerI,0BACXkI,aAAaA,EAEfI,IAAGH,gBAE2B/I,QAAAmJ,gBAAAH,YAE5BI,eAGJ,IAAIC,EAAY,SACiCjI,SAAAoG,iBAAA,eAKvCC,SAAQK,IACXA,EAAuBwB,QAC1BD,GAAavB,EAAEwB,kBAEfzJ,IAAA,iBAAWwJ,GACXA,iBAGCE,iBACDC,GAAaJ,eACbK,EAA0FrI,SAAAC,eAAA,uBACpFqI,EAAKtI,SAAGC,eAAA,2BACdsI,EAAM,QACV,IAACvJ,kBAIG,OAHFR,QAAGC,IAAU,uCACX8J,EAAA,4BACAC,WAAuCH,EAAAC,EAAAC,GAG3C,GAACH,GAAA,EAIG,OAHJG,EAAM,wCACN/J,QAAMO,MAAU,oBAAGqJ,UACfI,WAA4CH,EAAAC,EAAAC,MAG5CE,MAAML,GAKN,OAJHG,EAAA,qBACC/J,QAAGO,MAAW,oBAAUqJ,KACtB5J,QAAoCO,MAAA,2BAAA0J,MAAAL,WACpCI,WAAWH,EAAiBC,EAAQC,GAIxC,IAAK3J,QAAC8J,uBACNlK,QAAMO,MAAY,+EACdwJ,EAAC,qGACWA,qCAEM,6EAAwDD,EAAAC,MAG1E,+CAACrH,yBAAAkH,EAF+B,GAIhC,OAFEG,EAAA,2CACFC,WAAWH,EAAAC,EAAAC,OAGXH,EALY,IAQhB,OAFIG,EAAA,oCACHC,WAAAH,EAAAC,EAAAC,OA4CGI,EAfAf,EAIG,CAEHC,gBAAmDrI,0BACnDkI,aAjCS,WAkCTI,IAjCgB,CAEhB,CAODV,OAAA,GAECC,KAAA,WAEQC,QAAA,CACC,CACyFC,aAAA,UAC1FF,KAAY,GACNG,KAAA,YAGVC,gBAAuB,UACvBD,KAAQ,aAaZoB,SAAKhK,QAAAiK,MAAkBC,IAAAV,YAEvB3J,IAAA,iDACEA,IAAGmJ,WACLnJ,IAAQ,uDACRA,IAAQmJ,EAAKgB,UAQb,IAAAG,EAAsBC,8BAGtBD,GAAYA,EAA6BE,OACrC,EAAM,IAMR,UAJqFC,kBAAAH,GAYhF,YADCI,WAAA,0EAGAC,WACArK,MAAQqK,GACZ5K,QAACO,MAAA,8DAWLqB,OAAQiJ,QAAO,OAEXpI,EAAcC,+BACdzC,IAAQ,uBACI6K,oBAAOrI,SACjBsI,QAAkD3K,QAAAmJ,gBAAAH,0BACZ,GACzB4B,4BAA4BvI,WACvCxC,IAAA,mCACHA,IAAA,qBACLD,QAACC,IAAA8K,GACDZ,QAAYY,EAAYE,KArrBT,GAsrBfjL,QAAQC,IAAA,+BACRD,QAAQC,IAAA,oBACRD,QAAkCC,IAAAkK,EAAAe,iBAClCtH,kBACHuH,uBAAA,GAGJ,oBAAAC,aAAAC,MAAA,qFAEc,uEAAqB,KAChC,IAAMC,EAAYC,oBAAmB3B,GACaW,GAAkBA,EAAAE,OAAA,GAAAe,mBAAArB,EAAAe,gBAAAzI,EAAAmH,EAAA0B,EAAAf,GAAAkB,MAAA,KAAEL,aAAY,8BAAA,eAAC9K,eAAe,yBAAW,aAAEC,MAAMD,WAAMC,MAAM,2EAAmC4J,GAAMuB,wBAAAjJ,EAAA0H,EAAAe,gBAAAtB,EAAA0B,WAAQrL,IAAE,QAAUwC,aAAA0H,EAAAe,2BAAAtB,aAAA0B,KAAC1J,OAACiJ,QAAAlB,SAAC,MAAAgC,GAG7L,GAFA/J,OAAOiJ,QAAIlB,SACX3J,QAAAO,MAAA,yBACAoL,EAAYC,UACT5L,QAAEO,MAAAoL,EAAkBC,SAC1B5L,QAAAO,MAAA,8CAEGwJ,EAAA4B,EAAeC,QACP7B,EAAG8B,SAAA,sCAIJ,OAHJ9B,EAAA,oCACVC,WAAAH,EAAAC,EAAAC,GAKGA,EAAM4B,EAAYG,KAACF,QAEnB5L,QAAWO,MAAEwJ,GAET/J,QAAAO,MAAY,8CAChBwJ,EAAA,6BACAC,WAAaH,EAAiBC,EAAAC,mBAGzB/F,oBAqBL,IAAAoF,EAAA,CACIC,gBAAerI,0BAClBkI,aAtBG,iBAyBJI,IAxBiB,CACb,CACHV,OAAA,GAC6DC,KAAA,iBACtDC,QAAK,CACF,CAC+CC,aAAA,UACpDF,KAAe,GAGLG,KAAA,YAGZC,gBAAoB,OACjBD,KAAQ,cAYXjF,QAAe3D,QAAAmJ,gBAAsBH,GAIzC,OAHArF,GAAC0E,KAAAC,IAAA,GAAAqD,UAGKhI,iBAEEiI,qCAEiC/L,IAAA,4DACrCiF,aAttBF,YAutBEjF,IAAM,wCACN8D,QAAqBC,uBACgBD,EAAAE,QAAA,WACnBhE,IAAA,kBAAA8D,KAEtB,IAACG,EAAA,GACD,IACAA,EAA4BC,sBAAKJ,EAhxBoC,YAixB7DxD,GACJP,QAAMO,MAAA,8CAGNN,IAAO,kBAAiB8D,aACY9D,IAAA,eAAAiE,WAElC+H,EAAUzK,SAAcoG,iBAAC,kBAC/BqE,GAACA,EAAApE,SAAAK,QAGIgE,EAAgBhI,EACrBgI,EAAuB,IAACA,EAAsC,GAC9DhE,EAAOwB,MAAOwC,aAGH1K,SAAmBoG,iBAAA,yBAC9BuE,GAAiBA,EAAetE,SAAAK,IAC5BA,EAAAE,UAAcrE,WAEdqI,EAAa5K,SAAAoG,iBAA4C,gCACtCwE,EAAAvE,SAAAK,IACtBA,EAAAE,UAAAlE,KAEJ1C,SAAAoG,iBAAA,6BAEQC,SAAoBvH,IACzB,IAAM+L,GAAWnI,EAAiD,EAG9DmI,GAFgB,KAEDA,EAFC,IAInBA,GADsB,IAEIA,EAFJ,GAOvB/L,EAAMoE,MAAM4H,KAAG,GAAAD,QAGO7K,SAAAoG,iBAAA,iCACHC,SAAAvH,IAEf,IAAA+L,GACAnI,EAAuB,EAEtBmI,GADmB,KACnBA,EADmB,IAGtBA,GADL,IAC+BA,EAD/B,GAIG/L,EAAAoE,MAAA4H,KAAmB,GAAAD,iBAIXE,uBACM/K,SAAmBC,eAAQ,oCAC7BqI,EAAe0C,uBAEbrM,0BACFN,OAAe4M,aACnBC,GAAC,SACJD,GAAAA,EAAAE,KACR3M,QAAAC,IAAA,gDAEGyM,GACA,GAKAA,WAKA5F,gBAAe8F,GAAA,GAEf,MAAAC,EACArL,SAAUC,eAAgB,2BAE1ByG,EAAQ1G,SAAOC,eAAA,uBAEkBmL,GAE/B1E,EAAAE,UAAA0E,qBAAwB9J,mBAAA8J,qBAAA9J,mBAAA+J,MAAA,UACrBF,EAAG1F,UAAAY,OAAA,WACJ8E,EAAY1F,UAAAC,IAAA,mBAEfJ,oBAAAgG,EAAAC,GAAA,GACD,MAAMC,EAAG1L,SAAAoG,iBAAA,8BACSuF,EAAA3L,SAAAoG,iBAAA,iCACduF,EAAAtF,SAAqBuF,IACrBA,EAAA1D,MAAAsD,KACHE,GAAAA,EAAArF,SAAAvH,IAEK2M,EAAG3M,EAAA6G,UAAAY,OAAA,UAAAzH,EAAA6G,UAAAC,IAAA,kCAGa5F,SAAAC,eAAA,+BACtB4L,iBAAC,EACL,SAACC","sources":["src/js/devWeb3.js"],"sourcesContent":["window.onload = async function () {\r\n    console.log(`dev:onload`);\r\n\r\n    /**\r\n     * I've hidden the connect buttons so that users can't connect wallet\r\n     * until the whole page is loaded\r\n     * Once whole page is loaded\r\n     * showConnectButtons() function unhides the connect buttons\r\n     */\r\n    showConnectButtons();\r\n    // populates BNB Raised bar from firebase\r\n    populateAmountRaisedinHTMLDB();\r\n\r\n    /**\r\n     * If web3enabled \r\n     * - see if user is already connected \r\n     * - enableWeb3\r\n     * - if user is already connected - but only page was refreshed - login()\r\n     * Else if web3notenabled but loggedIn user\r\n    */\r\n\r\n    if (await isWeb3Installed()) {\r\n        console.log(`dev: web3 installed  - checking if user is connected upon refreshing`);\r\n        try {\r\n            console.log(\"dev: onload - enabling web3\");\r\n            await Moralis.enableWeb3();\r\n            console.log(\"dev: onload - enabled web3\");\r\n        } catch (e) {\r\n            console.error(e), console.error(\"dev: onload - failed to enable web3\");\r\n        }\r\n\r\n        if (isUserConnected()) {\r\n            console.log(\"dev: Page-refreshed - User already connected\");\r\n            login();\r\n        } else {\r\n            console.log(\"dev: Page-refreshed - User not connected\")\r\n        }\r\n    } else if (!(await isWeb3Installed()) && isUserConnected()) {\r\n        // Shouldn't this show error coz web3 wasn't enabled to check isUserConnected?\r\n        // I'm not sure about the below trycatch block coz I'm using it to enableWeb3 and I think checking isUserConnected requires it to be enabled so commenting it out \r\n        // try {\r\n        //     console.log(\"dev: onload - enabling web3-WC\");\r\n        //     await Moralis.enableWeb3({ provider: \"walletconnect\" });\r\n        //     console.log(\"dev: onload - enabled web3-WC\");\r\n        // } catch (e) {\r\n        //     console.error(e);\r\n        //     console.error(\"dev: onload - failed to enable web3-WC\");\r\n        // }\r\n        if (isUserConnected()) {\r\n            console.log(\"dev: Page-refreshed - User already connected\");\r\n            login(\"walletconnect\");\r\n        } else {\r\n            console.log(\"dev: Page-refreshed - User not connected\");\r\n        }\r\n    }\r\n};\r\n/**\r\n * *******************************    WEB3    *******************************\r\n */\r\n// const TEST_ENVIRONMENT = true;\r\nconst TEST_ENVIRONMENT = false;\r\nconst IS_PRESALE = false;\r\nconst HARDCAP = IS_PRESALE ? +16500 : +1200;\r\n\r\nconst REFER_CONTRACT_ADDRESS_TESTNET = '0xfe2E124FE1418419A9efd8Ba987Fa1769D506c8a';\r\n// if TEST_ENVIRONMENT is false then use mainnet contract else testnet contract\r\nconst REFER_CONTRACT_ADDRESS_MAINNET = '0x5832E385f633b30519B3ECaDE3C5eD3d9881cf58'; //mainnet contract\r\nconst PRIVATE_CONTRACT_ADDRESS_MAINNET = '0x4ce1f912E06211095633961fd542E2455580721d';\r\n\r\nconst DEPLOYED_CONTRACT_ADDRESS = TEST_ENVIRONMENT ? REFER_CONTRACT_ADDRESS_TESTNET : PRIVATE_CONTRACT_ADDRESS_MAINNET;\r\nconsole.log(`Deployed Presale Contract is ${DEPLOYED_CONTRACT_ADDRESS}`);\r\nlet isSaleOpen = false;\r\n\r\n// less confirmations for testnet to speed up testing\r\nconst CONFIRMATIONS_ON_BSC = TEST_ENVIRONMENT ? 1 : 5;\r\n// paid-account-joshi-sir\r\nconst serverUrl_Testnet = \"https://gusm6vrpbwtk.usemoralis.com:2053/server\"; //BSC testnet\r\nconst appId_Testnet = \"glRYjrZo9XjLE2MPc7sWgzc4PyoFs3RbmyoNiPbf\"; //BSC testnet\r\nlet serverUrl_Mainnet = \"https://gb6gwydcjjw6.usemoralis.com:2053/server\"; //BSC mainnet\r\nlet appId_Mainnet = \"Zq3s8magh8mlppfXIGSHZRdLj49LlCnIaqs2mD2U\"; //BSC mainnet\r\n\r\nlet currentChainIdHex; //default chain set to ETH\r\ntry {\r\n    // if (await isWeb3Installed()) {\r\n    if (TEST_ENVIRONMENT) {\r\n        console.info(`starting server - testnet `);\r\n        serverUrl = \"https://gusm6vrpbwtk.usemoralis.com:2053/server\"; //BSC testnet\r\n        appId = \"glRYjrZo9XjLE2MPc7sWgzc4PyoFs3RbmyoNiPbf\"; //BSC testnet\r\n        Moralis.start({ serverUrl: serverUrl_Testnet, appId: appId_Testnet });\r\n    } else {\r\n        console.info(`starting server - mainnet `);\r\n        Moralis.start({ serverUrl: serverUrl_Mainnet, appId: appId_Mainnet });\r\n    }\r\n    // } else {\r\n    //     console.error(`dev: wallet/web3 not installed`);\r\n    // }\r\n\r\n} catch (error) {\r\n    console.error(`Server failed to start -ln-34`);\r\n    console.log(error);\r\n}\r\n\r\n\r\nconst walletOptions = document.getElementById(\"wallet-options\");\r\nconst loginBtn = document.getElementById(\"web3-login-mm\");\r\nconst logoutBtn = document.getElementById(\"web3-logout\");\r\nconst buyBtn = document.getElementById(\"buy_btn\");\r\nconst showTokenBtn = document.getElementById(\"web3-tokens\");\r\n\r\n// need it to be hex and not string coz then I get RPC URL Error\r\nconst BscChainIdMain = 0x38; //Bsc Mainnet ID\r\nconst BscChainIdTest = 0x61; //Bsc Testnet ID\r\n// const BscChainIdTest = 97; //Bsc Testnet ID\r\n\r\nconst showAddressHeader = document.getElementById(\"web3-wallet-address-header\");\r\n\r\nlet web3 = new Web3(Moralis.provider || Web3.givenProvider);\r\nconst NODE_URL_TESTNET = \"https://speedy-nodes-nyc.moralis.io/7569a2c3fc822716349963c8/bsc/testnet\";\r\nconst NODE_URL_MAINNET = \"https://speedy-nodes-nyc.moralis.io/7569a2c3fc822716349963c8/bsc/mainnet\";\r\n\r\nlet provider = '';\r\n// if (TEST_ENVIRONMENT) {\r\n//     provider = new Web3.providers.HttpProvider(NODE_URL_TESTNET);\r\n// } else {\r\n//     provider = new Web3.providers.HttpProvider(NODE_URL_MAINNET);\r\n// }\r\n\r\n\r\nconst userEnteredPassword = document.querySelector('#presale-password');\r\n\r\nfunction atLogin() {\r\n    /**\r\n    * 1. show referral box - toggle visibility of it\r\n    */\r\n    let userAddress = getUserWalletAddress();\r\n    const URL_Prefix = 'https://presale.battleinfinity.io/?refercode='\r\n    let USER_RefferalLink = `${URL_Prefix}${userAddress}`;\r\n    // let USER_RefferalLink = `url/${userAddress}`;\r\n\r\n    /**\r\n     * If there is a presale password field - only then \r\n     * presalePasswordEntered = true;\r\n     */\r\n    if (!userEnteredPassword) {\r\n        presalePasswordEntered = true;\r\n    }\r\n\r\n    /**\r\n     * Manages the left to make sure that weird zoomed out page effect doesn't happen\r\n     */\r\n    manageTooltipWidth();\r\n    toggleChainName(true);\r\n    toggleConnectStatus();\r\n    populateUserAddress(getUserWalletAddress(), true);\r\n\r\n    const secondLoginBtn = document.querySelector('#second-login-btn')\r\n    disableButton(secondLoginBtn)\r\n    secondLoginBtn.setAttribute(\"for\", \"\");\r\n\r\n    let BSC_Chain = TEST_ENVIRONMENT ? BscChainIdTest : BscChainIdMain;\r\n\r\n    // let currentChain = await Moralis.getChainId();\r\n    let tempCurrentChainIdHex = parseInt(currentChainIdHex, 16);\r\n    if (tempCurrentChainIdHex === BSC_Chain) {\r\n        try {\r\n            console.log(`start - populateReferralLinkinHTML ..`);\r\n            populateReferralLinkinHTML(USER_RefferalLink);\r\n            console.log(`done - populateReferralLinkinHTML `);\r\n        } catch (error) {\r\n            console.error(`dev:failed - populateReferralLinkinHTML`);\r\n        }\r\n        try {\r\n            console.log(`start - populateReferrerinHTML ..`);\r\n            populateReferrerinHTML(userAddress);\r\n            console.log(`done - populateReferrerinHTML`);\r\n        } catch (error) {\r\n            console.error(`dev:failed - populateReferrerinHTML`);\r\n        }\r\n        try {\r\n            console.log(`start - populateUserReferralComissions`);\r\n            populateUserReferralComissions(userAddress);\r\n            console.log(`done - populateUserReferralComissions`);\r\n        } catch (error) {\r\n            console.error(`dev:failed - populateUserReferralComissions`);\r\n        }\r\n        try {\r\n            console.log(`start - populateUserReferralsCount`);\r\n            populateUserReferralsCount(userAddress);\r\n            console.log(`done - populateUserReferralsCount`);\r\n        } catch (error) {\r\n            console.error(`dev:failed - populateUserReferralsCount`);\r\n        }\r\n        try {\r\n            console.log(`start - populateUsersInvestments`);\r\n            populateUsersInvestments(userAddress);\r\n            console.log(`done - populateUsersInvestments`);\r\n        } catch (error) {\r\n            console.error(`dev:failed - populateUsersInvestments`);\r\n        }\r\n        // each time a user logs in - they fetch value of BNBRaised and update the DB\r\n        try {\r\n            updateBNBRaised()\r\n        } catch (error) {\r\n            console.error(`failed - updateBNBRaised - atlogin`);\r\n        }\r\n\r\n    } else {\r\n        BSC_Chain += '';\r\n        console.error(`dev: atlogin() BSC_Chain = ${BSC_Chain}`);\r\n        console.error(`dev: atlogin() tempCurrentChainIdHex = ${tempCurrentChainIdHex}`);\r\n        console.error(`dev: Didn't run atlogin() methods coz wrong chain`);\r\n    }\r\n\r\n    if (isUserConnected()) toggleBtnVisibility(true);\r\n}\r\n\r\nasync function updateBNBRaised() {\r\n\r\n    // const HARDCAP = IS_PRESALE ? +16500 : +1200;\r\n    let raisedAmount = 0;\r\n    try {\r\n        raisedAmount = await getTotalBNBAmount(); //which will be 'logged out' if user is logged out\r\n    }\r\n    catch (e) {\r\n        console.error(e);\r\n        console.error(`dev:failed - updateBNBRaised`);\r\n    }\r\n    raisedAmount = +raisedAmount.toFixed(2);\r\n    let raisedAmountPercentage = '';\r\n    try {\r\n        raisedAmountPercentage = percentageOfBNBRaised(raisedAmount, HARDCAP);\r\n    } catch (error) {\r\n        console.error(`dev: percentageOfBNBRaised() issue`);\r\n    }\r\n    console.log(`raisedAmount = ${raisedAmount}`);\r\n    console.log(`raisedAmountPercentage = ${raisedAmountPercentage}`);\r\n    updateRaisedBNBinDB(raisedAmount, raisedAmountPercentage);\r\n}\r\n\r\n/**\r\n * Manages the left to make sure that weird zoomed out page effect doesn't happen\r\n */\r\nfunction manageTooltipWidth() {\r\n    const toolTip = document.querySelector('#web3-wallet-address-header');\r\n    if (!toolTip) {\r\n        console.error(`tooltip missing`);\r\n        return;\r\n    }\r\n    if (isUserConnected()) {\r\n        toolTip.dataset.tip = getUserWalletAddress();\r\n        if (+window.innerWidth <= 610) {\r\n            toolTip.style.setProperty(\"--custom-tooltip-left\", \"50%\");\r\n        } else {\r\n            toolTip.style.setProperty(\"--custom-tooltip-left\", \"0px\");\r\n        }\r\n    } else {\r\n        toolTip.dataset.tip = '';\r\n        if (+window.innerWidth > 610) {\r\n            //     toolTip.style.setProperty(\"--custom-tooltip-left\", \"50%\");\r\n            toolTip.style.setProperty(\"--custom-tooltip-left\", \"-15px\");\r\n        }\r\n        // }\r\n    }\r\n}\r\n\r\nasync function addNetwork(chainId) {\r\n    const BSC_RPC_URL = 'https://bsc-dataseed.binance.org/';\r\n    const tBSC_RPC_URL = 'https://data-seed-prebsc-1-s1.binance.org:8545/';\r\n    const BscChainId = chainId;\r\n    const chainName = TEST_ENVIRONMENT ? \"BNB Testnet\" : \"BSC Mainnet Smart Chain\";\r\n    const currencyName = TEST_ENVIRONMENT ? \"tBNB\" : \"BNB\";\r\n    const currencySymbol = TEST_ENVIRONMENT ? \"tBNB\" : \"BNB\";;\r\n    const rpcUrl = TEST_ENVIRONMENT ? tBSC_RPC_URL : BSC_RPC_URL;\r\n    const blockExplorerUrl = TEST_ENVIRONMENT ? \"https://testnet.bscscan.com/\" : \"https://bscscan.com/\";\r\n    console.log('BscChainId-chainName-rpcUrl-blockexplorer');\r\n    console.log(`${BscChainId}-${chainName}-${rpcUrl}-${blockExplorerUrl}`);\r\n    await Moralis.addNetwork(\r\n        BscChainId,\r\n        chainName,\r\n        currencyName,\r\n        currencySymbol,\r\n        rpcUrl,\r\n        blockExplorerUrl\r\n    );\r\n}\r\n\r\nasync function switchAndAdd(toChainId = '0x61') {\r\n    console.log(`switchAndAdd - toChainid`);\r\n    console.log(toChainId);\r\n    try {\r\n        await switchNetwork(toChainId);\r\n    } catch (er) {\r\n        await addNetwork(toChainId);\r\n    }\r\n}\r\nasync function switchNetwork(toChainId = '0x61') {\r\n    currentChainIdHex = await Moralis.switchNetwork(toChainId);\r\n}\r\n\r\nasync function login(provider) {\r\n\r\n    let BSC_Chain = TEST_ENVIRONMENT ? BscChainIdTest : BscChainIdMain;\r\n    let user = Moralis.User.current();\r\n\r\n    if (!user) {\r\n        console.info(`dev: login() - Provider :${provider}`);\r\n\r\n        try {\r\n            console.log(`Deactivating old instance of Web3`);\r\n            Moralis.isEnablingWeb3 && await Moralis.deactivateWeb3();\r\n            console.log(`Deactivated old instance of Web3`);\r\n        } catch (e) {\r\n            console.error(e);\r\n            console.error(`dev:failed Deactivating old instance of Web3`);\r\n        }\r\n\r\n        if (provider === 'walletconnect') {\r\n            try {\r\n                console.info(`⚪Authenticating with WalletConnect`);\r\n                user = await Moralis.authenticate({\r\n                    provider: \"walletconnect\",\r\n                    chainId: BSC_Chain,\r\n                    signingMessage: \"Battle Infinity Authentication: WalletConnect\"\r\n                });\r\n                console.info(`✅Authenticated with WalletConnect`);\r\n            } catch (error) {\r\n                console.error(error);\r\n                console.error(`dev:❌Authentication Failed - Walletconnect - login()`);\r\n            }\r\n        } else {\r\n            console.info(`Authenticating with MetaMask`);\r\n            try {\r\n                currentChainIdHex = await Moralis.getChainId();\r\n                // Authenticate only if user is on correct chain\r\n                if (currentChainIdHex !== BSC_Chain) {\r\n                    console.log(`Current chain -${currentChainIdHex}`);\r\n                    console.log(\"BSC chain - 56\");\r\n                    console.log(`BSC_Chain - ${BSC_Chain}`);\r\n\r\n                    try {\r\n                        console.log(\"dev: login metamask - enabling web3 for switching chain\");\r\n                        await Moralis.enableWeb3();\r\n                        console.log(\"dev: login metamask - enabled web3 for switching chain\");\r\n                    } catch (e) {\r\n                        console.error(e);\r\n                        console.error(\"dev: login metamask - failed to enable web3 for switching chain\");\r\n                    }\r\n                    await switchAndAdd(BSC_Chain);\r\n                }\r\n\r\n                user = await Moralis.authenticate({ signingMessage: \"Battle Infinity Authentication\" })\r\n\r\n                try {\r\n                    if (!TEST_ENVIRONMENT) hitDataLayer(getUserWalletAddress())\r\n                } catch (error) {\r\n                    console.error(`dev:couldn't hit data layer`);\r\n                }\r\n\r\n            } catch (error) {\r\n                console.error(error);\r\n                console.error(\"dev: login metamask - failed to enable web3 for switching chain\");\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    try {\r\n        currentChainIdHex = await Moralis.getChainId();\r\n        console.info(\"dev:getChainId() succeded - login()\");\r\n        console.info(`dev: current chain ${currentChainIdHex} - login()`);\r\n    } catch (e) {\r\n        console.error(e);\r\n        console.error(\"dev:getChainId() Failed - login()\");\r\n    }\r\n\r\n    if (isUserConnected()) {\r\n        console.log(\"IBAT Authentication - userconnected\");\r\n        try {\r\n            isSaleOpen = await isPresaleOpen();\r\n            console.log(`sale open - ${isSaleOpen}`);\r\n        } catch (error) {\r\n            console.error(error);\r\n            console.error(`dev:failed isSaleOpen() - buyToken()`);\r\n        }\r\n        atLogin();\r\n    }\r\n}\r\n\r\n\r\nfunction getUserWalletAddress() {\r\n    let err = 'Wallet not connected';\r\n    if (!isUserConnected())\r\n        return err;\r\n\r\n    return Moralis.User.current().get(\"ethAddress\");\r\n}\r\n\r\nfunction isUserConnected() {\r\n    let user = Moralis.User.current();\r\n    return user ? true : false;\r\n}\r\n\r\nasync function logOut() {\r\n    await Moralis.User.logOut();\r\n    try {\r\n        await Moralis.deactivateWeb3();\r\n        console.info(`Success - Moralis.deactivateWeb3() -logout()`)\r\n    } catch (e) {\r\n        console.error(\"dev:failed Moralis.deactivateWeb3(); - logout()\");\r\n    }\r\n    console.log(\"logged out\");\r\n    await atLogout();\r\n}\r\n\r\nasync function atLogout() {\r\n    /**\r\n     * 1. hide referral box\r\n     */\r\n    // need to \r\n    // undo till this point\r\n    if (userEnteredPassword) presalePasswordEntered = false;\r\n\r\n    try {\r\n        populateReferralLinkinHTML('Wallet not connected');\r\n    } catch (error) {\r\n        console.log(error);\r\n        console.error(`dev:failed - populateReferralLinkinHTML('Wallet not connected') - atlogout()`);\r\n    }\r\n    try {\r\n        populateReferrerinHTML('Wallet not connected');\r\n    } catch (error) {\r\n        console.log(error);\r\n        console.error(`dev:failed - populateReferrerinHTML('Wallet not connected') - atlogout()`);\r\n    }\r\n    try {\r\n        populateUserReferralComissions('0');\r\n    } catch (error) {\r\n        console.log(error);\r\n        console.error(`dev:failed - populateUserReferralComissions('0') - atlogout()`);\r\n    }\r\n    try {\r\n        populateUserReferralsCount(0);\r\n    } catch (error) {\r\n        console.log(error);\r\n        console.error(`dev:failed - populateUserReferralsCount(0) - atlogout()`);\r\n    }\r\n    try {\r\n        populateUsersInvestments('0');\r\n    } catch (error) {\r\n        console.log(error);\r\n        console.error(`dev:failed - populateUsersInvestments`);\r\n    }\r\n    try {\r\n        isSaleOpen = false;\r\n    } catch (error) {\r\n        console.error(error);\r\n        console.error(`dev:atLogout`);\r\n    }\r\n\r\n    manageTooltipWidth();\r\n    toggleChainName(false);\r\n    toggleConnectStatus();\r\n    populateUserAddress(\"not connected\", false);\r\n\r\n    const secondLoginBtn = document.querySelector('#second-login-btn');\r\n    enableButton(secondLoginBtn);\r\n    secondLoginBtn.setAttribute(\"for\", \"wallets\");\r\n\r\n    // hiding addreferrer btn when logging out\r\n    const setReferrerBtn = document.querySelector('#add-referrer');\r\n    setReferrerBtn && setReferrerBtn.classList.add('hidden');\r\n\r\n    toggleBtnVisibility(false);\r\n    try {\r\n        setPresalePassword && setPresalePassword();\r\n    } catch (error) {\r\n        // console.error(error);\r\n        console.error(`dev:setPresalePassword(); not defined`);\r\n    }\r\n    try {\r\n        showArenaLock && showArenaLock(true);\r\n    } catch (error) {\r\n        // console.error(error);\r\n        console.error(`dev:showArenaLock(); not defined`);\r\n    }\r\n    const addReferrerBtn = document.getElementById('add-referrer-btn');\r\n    const addReferrerInput = document.getElementById('add-referrer-address');\r\n    enableButton(addReferrerBtn);\r\n    enableButton(addReferrerInput);\r\n    addReferrerInput.removeAttribute('readonly')\r\n}\r\n\r\n\r\n// async function getBalance(chainId, address) {\r\n//     const tokenList = document.getElementById('token-list');\r\n//     currentChainIdHex = await Moralis.getChainId();\r\n//     let currentUser = Moralis.User.current();\r\n//     let currentUserAddress = currentUser.get(\"ethAddress\");\r\n//     const options = { chain: chainId || currentChainIdHex || '0x38', address: address || currentUserAddress || \"0x9d51fd1a308c073f2f06a7181ad90c6d6ab5e9d7\" };\r\n//     // console.log(`getBalance called with \\n chaidId ${options.chain} and \\n of address: ${options.address}`);\r\n//     // const options = { chain: 'eth', address: \"0x9d51fd1a308c073f2f06a7181ad90c6d6ab5e9d7\" } // test address from Etherscan\r\n//     // const options = { chain: 'bsc', address: \"0x60913d3fE722bFE425247D7673D8bdbDA56D1e02\" } // test address from BSC (bscscan)\r\n\r\n//     const nativeBal = await Moralis.Web3API.account.getNativeBalance(options);\r\n\r\n//     if (tokenList) tokenList.innerHTML = `<li class=\"pr-2 flex justify-between w-full md:w-1/2 mx-auto mt-2\"><span class=\"w-1/2 text-center\">${HEX_TO_CHAIN_DETAILS[currentChainIdHex].nativeToken}</span><span class=\"w-1/2 text-left\">${web3.utils.fromWei(nativeBal.balance)}</span></li>`\r\n\r\n//     const balances = await Moralis.Web3API.account.getTokenBalances(options);\r\n\r\n//     if (balances.length) {\r\n//         balances.forEach(token => {\r\n//             // console.log(`not - ${token.symbol}`);\r\n//             if (token.symbol == 'USDC' || token.symbol == 'BUSD' || token.symbol == 'IBAT') {\r\n//                 const balance = convertTokenBalance(token.balance, token.decimals);\r\n//                 // const tokenFromWei = web3.utils.fromWei(token.balance)\r\n//                 if (!tokenList) {\r\n//                     console.error('ln:226 - Token List Missing');\r\n//                 } else {\r\n//                     tokenList.innerHTML += `<li class=\"pr-2 flex justify-between w-full md:w-1/2 mx-auto\"><span class=\"w-1/2 text-center\">${token.symbol}</span><span class=\"w-1/2 text-left\">${balance}</span></li>`\r\n//                 }\r\n//             }\r\n//         });\r\n//     } else {\r\n//         if (!tokenList) {\r\n//             console.error('dev:getBalance() - Token List Missing');\r\n//         } else {\r\n//             tokenList.innerHTML += `<li class=\"w-full text-center mx-auto text-xs opacity-80 mt-2\">no other tokens available</li>`\r\n//         }\r\n//     }\r\n// }\r\n\r\n\r\nfunction toggleBtnVisibility(connected) {\r\n    const allBtns = document.querySelectorAll('.wallet-options-btn ');\r\n    if (connected) { //show\r\n        allBtns.forEach(btn => {\r\n            btn.classList.add('hidden');\r\n        });\r\n        logoutBtn && logoutBtn.classList.remove('hidden');\r\n        showTokenBtn && showTokenBtn.classList.remove('hidden');\r\n        // loginBtn && loginBtn.classList.remove('hidden');\r\n    }\r\n    else {\r\n        if (!allBtns) {\r\n            console.error(`ln:249-Invalid Arguments`);\r\n        } else {\r\n            allBtns.forEach(btn => {\r\n                btn.classList.remove('hidden');\r\n            });\r\n        }\r\n        // walletOptions && walletOptions.classList.remove('hidden');\r\n        logoutBtn && logoutBtn.classList.add('hidden');\r\n        showTokenBtn && showTokenBtn.classList.add('hidden');\r\n    }\r\n}\r\n\r\nfunction toggleConnectStatus() {\r\n    const statusFields = document.querySelectorAll('.connectivity-status');\r\n    statusFields && statusFields.forEach(el => {\r\n        if (isUserConnected()) {\r\n            el.classList.remove('bg-red-400')\r\n            el.style.background = \"#4ade80\";\r\n            el.innerHTML = 'connected'\r\n        } else {\r\n            el.style.background = \"#f87171\";\r\n            el.innerHTML = 'not connected'\r\n        }\r\n    });\r\n}\r\n\r\n\r\nfunction convertTokenBalance(balance, decimals) {\r\n    let newBalance = balance == 0 ? 0 : balance / Math.pow(10, decimals);\r\n    newBalance = newBalance < 0.001 ? 0 : newBalance;\r\n    return newBalance;\r\n}\r\n\r\n\r\n\r\nasync function isPresaleOpen() {\r\n    const ABI = [{ \"inputs\": [], \"name\": \"isPresaleOpen\", \"outputs\": [{ \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" }], \"stateMutability\": \"view\", \"type\": \"function\" }];\r\n    const result = await readFunction('isPresaleOpen', ABI);\r\n    // console.log(`isPresaleOpen = ${result}`);\r\n    return result;\r\n}\r\n\r\n// isPresaleOpen();\r\n\r\nasync function readFunction(functionName, ABI) {\r\n\r\n    let options = {\r\n        contractAddress: DEPLOYED_CONTRACT_ADDRESS,\r\n        functionName: functionName,\r\n        abi: ABI,\r\n    }\r\n    return await Moralis.executeFunction(options);\r\n}\r\n\r\n\r\n\r\nfunction getBuyAmount() {\r\n    // @todo: validate input\r\n    let buyAmount = 0;\r\n    const buyAmounts = document.querySelectorAll('.buy-amount');\r\n    // console.log(buyAmounts.length);\r\n\r\n    // const buyAmountMob = document.getElementById(\"buy-amount-mobile\");\r\n    // const buyAmountDesktop = document.getElementById(\"buy-amount-desktop\");\r\n    // if (buyAmountMob.classList.contains(hidden))\r\n    buyAmounts.forEach(el => {\r\n        if (el.value) {\r\n            // console.log(`${el.value}`);\r\n            buyAmount = +el.value;\r\n        }\r\n    });\r\n    console.log(`buyAmount = ${+buyAmount}`);\r\n    return buyAmount;\r\n}\r\n\r\nasync function buyToken() {\r\n    const BNBValue = +getBuyAmount();\r\n\r\n    const errMsgContainer = document.getElementById('buy-token-error-con');\r\n    const errMsg = document.getElementById('buy-token-error-msg');\r\n    let msg = 'Error';\r\n\r\n    if (!isUserConnected()) {\r\n        console.log('User not Logged in - connect wallet');\r\n        msg = 'Wallet not connected';\r\n        showErrMsg(errMsgContainer, errMsg, msg);\r\n        return;\r\n    }\r\n\r\n    if (BNBValue <= 0) {\r\n        msg = 'Enter valid amount between 0.1-500BNB';\r\n        console.error(`dev: BNBAmount = ${BNBValue}`);\r\n        showErrMsg(errMsgContainer, errMsg, msg);\r\n        return;\r\n    }\r\n    if (isNaN(BNBValue)) {\r\n        msg = 'Enter valid amount';\r\n        console.error(`dev: BNBAmount = ${BNBValue}`);\r\n        console.error(`dev: isNaN(BNBAmount) = ${isNaN(BNBValue)}`);\r\n        showErrMsg(errMsgContainer, errMsg, msg);\r\n        return;\r\n    }\r\n\r\n    if (!Moralis.isWeb3Enabled()) {\r\n        console.error(`dev:login() failed - Moralis.isWeb3Enabled() - probably wallet disconnected`);\r\n        msg = 'Something went wrong, kindly\\n• disconnect,\\n• refresh page and \\n• connect again.';\r\n        toastError(msg);\r\n        return;\r\n    }\r\n    if (!isSaleOpen) {\r\n        console.log('Presale is not open');\r\n        msg = 'Presale has not yet started !!!';\r\n        showErrMsg(errMsgContainer, errMsg, msg);\r\n        return;\r\n    }\r\n    const MIN_BNB = TEST_ENVIRONMENT ? 0 : 0.1;\r\n    const MAX_BNB = 500;\r\n    if (\"0xc8179e6927b61a4fdc3e5a2db14e641e51b9ad83\" !== getUserWalletAddress() && +BNBValue < MIN_BNB) {\r\n        msg = 'Minimum BNB Amount should be 0.1BNB';\r\n        showErrMsg(errMsgContainer, errMsg, msg);\r\n        return;\r\n    }\r\n    if (+BNBValue > MAX_BNB) {\r\n        msg = 'Maximum BNB Amount is 500BNB';\r\n        showErrMsg(errMsgContainer, errMsg, msg);\r\n        return;\r\n    }\r\n\r\n    const FUNCTION_NAME = 'buyToken';\r\n    const ABI_buyToken = [\r\n        {\r\n            \"inputs\": [],\r\n            \"name\": \"buyToken\",\r\n            \"outputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }],\r\n            \"stateMutability\": \"payable\",\r\n            \"type\": \"function\"\r\n        }];\r\n    let options = {\r\n        contractAddress: DEPLOYED_CONTRACT_ADDRESS,\r\n        functionName: FUNCTION_NAME,\r\n        abi: ABI_buyToken,\r\n        msgValue: Moralis.Units.ETH(BNBValue)\r\n    }\r\n    console.log(`buyToken Contract Function options - `);\r\n    console.log(options);\r\n    console.log(`buyToken Contract Function options - msgVal`);\r\n    console.log(options.msgValue);\r\n\r\n    let result;\r\n\r\n    /**\r\n     * Get Coupon Code\r\n     * If code exists && it's length is > 0 - means it was entreed\r\n     * Check if it's valid \r\n     *      if valid - update in DB\r\n     */\r\n    let userEnteredCode = getUserEnteredCouponCode();\r\n    if (userEnteredCode && userEnteredCode.length > 0) {\r\n        try {\r\n            let isValidCoupon = await isValidCouponCode(userEnteredCode);\r\n            if (!isValidCoupon) {\r\n                // throw error and return - means I need to do this checking before transaction is started\r\n                toastError(`❌Enter valid Coupon code\\nor remove it - empty the coupon field.`);\r\n                return;\r\n            }\r\n        } catch (errCoupon) {\r\n            console.error(errCoupon);\r\n            console.error(`dev:buyToken() - failed to upload coupon user's detail`);\r\n        }\r\n    }\r\n    try {\r\n        /**\r\n         * Before starting transaction - remove buyBtn.onclick = buyToken;\r\n         * so that user can't do multiple transactions - \r\n         * once completed add buyBtn.onclick = buyToken back\r\n         */\r\n        buyBtn.onclick = '';\r\n        // result = await Moralis.executeFunction(options);\r\n        let userAddress = getUserWalletAddress();\r\n        console.log(`Transaction started`);\r\n        if (!TEST_ENVIRONMENT) swapAmountDataLayer(userAddress);\r\n        const transaction = await Moralis.executeFunction(options);\r\n        showTransactionLoader(true);\r\n        if (!TEST_ENVIRONMENT) confirmTransactionDataLayer(userAddress);\r\n        console.log(`Transaction in progress`);\r\n        console.log(`Transaction data:`);\r\n        console.log(transaction);\r\n\r\n        result = await transaction.wait(CONFIRMATIONS_ON_BSC);\r\n        console.log(`Waiting for ${CONFIRMATIONS_ON_BSC} confirmations`);\r\n        console.log(`Transaction Hash`);\r\n        console.log(result.transactionHash);\r\n        updateBNBRaised();\r\n        showTransactionLoader(false);\r\n\r\n\r\n        if (typeof (toastSuccess) === 'undefined') {\r\n            alert(\"✅Transaction Successful✅\\nPlease Import token and check your wallet.\");\r\n        } else {\r\n            toastSuccess(\"✅Transaction Successful.\\nPlease Import token and check your wallet.\", 10000);\r\n        }\r\n\r\n\r\n        let IBATValue = calculateIBATAmount(BNBValue);\r\n        /**\r\n         * the coupon validity is already check :P so\r\n         * make sure it's entered and then update it\r\n         */\r\n        if (userEnteredCode && userEnteredCode.length > 0) {\r\n            updateCouponUserDB(result.transactionHash, userAddress, BNBValue, IBATValue, userEnteredCode).then(() => {\r\n                toastSuccess(\"✅Coupon Added Successfully.\", 10000);\r\n            }).catch((e) => {\r\n                toastError(\"❌Coupon Adding failed.\", 10000);\r\n                console.error(e);\r\n                console.error(`dev:buyToken() - updateCouponUserDB failed`);\r\n            });\r\n        }\r\n        refreshUsersInvestments();\r\n        if (!TEST_ENVIRONMENT) {\r\n            result && swapSuccessfulDataLayer(userAddress, result.transactionHash, BNBValue, IBATValue);\r\n        }\r\n\r\n        console.log(`Add: ${userAddress} \\n tID: ${result.transactionHash} \\n BNB: ${BNBValue} \\nIBAT: ${IBATValue}`);\r\n        buyBtn.onclick = buyToken;\r\n    } catch (error) {\r\n        buyBtn.onclick = buyToken;\r\n        console.error(`Transaction cancelled`);\r\n        if (error.message) {\r\n            console.error(error.message);\r\n            console.error(`dev:buyToken() - Transaction cancelled - 1`);\r\n            msg = error.message;\r\n            if (msg.includes('User denied transaction signature')) {\r\n                msg = 'Transaction declined by User';\r\n                showErrMsg(errMsgContainer, errMsg, msg);\r\n                return;\r\n            }\r\n        }\r\n        msg = error.data.message;\r\n        console.error(msg);\r\n        console.error(`dev:buyToken() - Transaction cancelled - 2`);\r\n        msg = 'Insufficient BNB in wallet';\r\n        showErrMsg(errMsgContainer, errMsg, msg);\r\n    }\r\n\r\n\r\n}\r\n\r\nasync function getTotalBNBAmount() {\r\n    const functionName = 'totalBNBAmount';\r\n    const ABI_totalBNBAmount = [{ \"inputs\": [], \"name\": \"totalBNBAmount\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }], \"stateMutability\": \"view\", \"type\": \"function\" }];\r\n    let options = {\r\n        contractAddress: DEPLOYED_CONTRACT_ADDRESS,\r\n        functionName: functionName,\r\n        abi: ABI_totalBNBAmount,\r\n    }\r\n\r\n    let raisedAmount = await Moralis.executeFunction(options);\r\n    raisedAmount = raisedAmount / Math.pow(10, DECIMALS);\r\n    return raisedAmount;\r\n}\r\n\r\nasync function populateAmountRaisedinHTML() {\r\n    let BSC_Chain = TEST_ENVIRONMENT ? BscChainIdTest : BscChainIdMain;\r\n    console.log(`populateAmountRaisedinHTML-switchAndAdd-chainId-${BSC_Chain}`);\r\n    await switchAndAdd(BSC_Chain);\r\n\r\n    console.log(`ran - populateAmountRaisedinHTML`);\r\n\r\n    let raisedAmount = await getTotalBNBAmount(); //which will be 'logged out' if user is logged out\r\n    raisedAmount = +raisedAmount.toFixed(2);\r\n    console.log(`raisedAmount = ${raisedAmount}`);\r\n    // const HARDCAP = IS_PRESALE ? +16500 : +1200;\r\n    let raisedAmountPercentage = '';\r\n    try {\r\n        raisedAmountPercentage = percentageOfBNBRaised(raisedAmount, HARDCAP);\r\n    } catch (error) {\r\n        console.error(`dev: percentageOfBNBRaised() issue`);\r\n    }\r\n    // if (raisedAmountPercentage < 1) raisedAmountPercentage = 1;\r\n    console.log(`raisedAmount = ${raisedAmount}`);\r\n    console.log(`setting % = ${raisedAmountPercentage}`);\r\n    // if user is logged-in we change the value of refferValue\r\n    const progressBars = document.querySelectorAll('.sale-progress');\r\n\r\n\r\n    progressBars && progressBars.forEach(el => {\r\n        // in this example - the countValue = 0\r\n        let percentageForBar = raisedAmountPercentage;\r\n        percentageForBar < 1 ? percentageForBar = 1 : '';\r\n        el.value = percentageForBar;\r\n    });\r\n\r\n\r\n    const raisedAmountHTML = document.querySelectorAll('.sale-progress-amount');\r\n    raisedAmountHTML && raisedAmountHTML.forEach(el => {\r\n        el.innerHTML = raisedAmount;\r\n    })\r\n\r\n\r\n    const raisedAmountPercentageHTML = document.querySelectorAll('.sale-progress-percentage');\r\n    raisedAmountPercentageHTML && raisedAmountPercentageHTML.forEach(el => {\r\n        el.innerHTML = raisedAmountPercentage;\r\n    })\r\n\r\n\r\n    const parentContainer = document.querySelectorAll('.sale-progress-val-parent');\r\n    parentContainer.forEach(e => {\r\n        let leftVal = +raisedAmountPercentage - 3;\r\n        const maxLeftVal = +94;\r\n        // console.log(`-left = ${leftVal}`);\r\n        leftVal >= maxLeftVal ? leftVal = maxLeftVal : '';\r\n        const minLeftVal = +0;\r\n        leftVal <= minLeftVal ? leftVal = minLeftVal : '';\r\n        // console.log(`-left = ${leftVal}`);\r\n        // console.log(e);\r\n        e.style.left = `${leftVal}%`;\r\n    })\r\n    const parentContainerMob = document.querySelectorAll('.sale-progress-val-parent-mob');\r\n    parentContainerMob.forEach(e => {\r\n        let leftVal = +raisedAmountPercentage - 3;\r\n        const maxLeftValMob = +65;\r\n        leftVal >= maxLeftValMob ? leftVal = maxLeftValMob : '';\r\n        const minLeftValMob = +0;\r\n        leftVal <= minLeftValMob ? leftVal = minLeftValMob : '';\r\n        // console.log(`left = ${leftVal}`);\r\n        // console.log(e);\r\n        e.style.left = `${leftVal}%`;\r\n    })\r\n}\r\n\r\nfunction toggleErrMsg() {\r\n    const errMsg = document.getElementById('buy-token-error-input');\r\n    errMsg.checked = !errMsg.checked;\r\n}\r\n\r\nasync function isWeb3Installed() {\r\n    const ethereum = window.ethereum;\r\n    let isInstalled = true;\r\n    if (!ethereum || !ethereum.on) {\r\n        console.log(`dev:isWeb3Installed - Metamask not installed`);\r\n        isInstalled = false;\r\n    }\r\n    return isInstalled;\r\n}\r\n\r\nfunction toggleChainName(hide = false) {\r\n    const elParent = document.getElementById('web3-wallet-chainid-con');\r\n    const el = document.getElementById('web3-wallet-chainid');\r\n    if (hide) {\r\n        el.innerHTML = HEX_TO_CHAIN_DETAILS[currentChainIdHex] ? HEX_TO_CHAIN_DETAILS[currentChainIdHex].chain : 'NOT BSC';\r\n        elParent.classList.remove('hidden');\r\n    } else {\r\n        elParent.classList.add('hidden');\r\n    }\r\n}\r\n\r\nfunction populateUserAddress(e, o = !1) {\r\n    const labels = document.querySelectorAll(\".web3-wallet-address-label\");\r\n    const n = document.querySelectorAll(\".web3-wallet-address-field\");\r\n    n &&\r\n        n.forEach((o) => {\r\n            o.value = e;\r\n        }),\r\n        labels &&\r\n        labels.forEach((e) => {\r\n            o ? e.classList.remove(\"hidden\") : e.classList.add(\"hidden\");\r\n        });\r\n}\r\nconst showAddressBtn = document.getElementById(\"web3-wallet-address-btn\");\r\nlet showAddressFied = false;\r\nfunction toggleShowAddress() {\r\n    showAddressFied = !showAddressFied;\r\n    const e = document.querySelectorAll(\".web3-wallet-address-label input\");\r\n    console.log(`toggleShowAddress - show : ${showAddressFied}`),\r\n        e.forEach((e) => {\r\n            if (showAddressFied) {\r\n                e.setAttribute(\"type\", \"text\");\r\n                showAddressBtn.innerHTML = \"HIDE\";\r\n            } else {\r\n                e.setAttribute(\"type\", \"password\");\r\n                showAddressBtn.innerHTML = \"SHOW\";\r\n            }\r\n        });\r\n}\r\n\r\nif (showAddressBtn) {\r\n    showAddressBtn.onclick = toggleShowAddress;\r\n}\r\nif (buyBtn) {\r\n    buyBtn.onclick = buyToken;\r\n} else {\r\n    console.error(`Login button missing in UI`);\r\n}\r\nif (loginBtn) {\r\n    loginBtn.onclick = login;\r\n} else {\r\n    console.error(`Login button missing in UI`);\r\n}\r\nif (logoutBtn) {\r\n    logoutBtn.onclick = logOut;\r\n} else {\r\n    console.error(`Logout button missing in UI`);\r\n}\r\n// showTokenBtn.onclick = getBalance;\r\n\r\nconst HEX_TO_CHAIN_DETAILS = {\r\n    '0x1': {\r\n        chain: 'ETH',\r\n        nativeToken: 'ETH'\r\n    },\r\n    '0x61': {\r\n        // BSC testnet\r\n        chain: 'tBSC Testnet',\r\n        nativeToken: 'tBNB'\r\n    }\r\n    ,\r\n    '0x38': {\r\n        // BSC mainnet\r\n        chain: 'BSC Mainnet',\r\n        nativeToken: 'BNB'\r\n    }\r\n}\r\n\r\n"],"names":["window","onload","async","console","log","showConnectButtons","isWeb3Installed","Moralis","enableWeb3","e","error","isUserConnected","login","TEST_ENVIRONMENT","IS_PRESALE","HARDCAP","REFER_CONTRACT_ADDRESS_TESTNET","REFER_CONTRACT_ADDRESS_MAINNET","PRIVATE_CONTRACT_ADDRESS_MAINNET","DEPLOYED_CONTRACT_ADDRESS","serverUrl_Mainnet","info","start","serverUrl","appId","appId_Mainnet","walletOptions","document","getElementById","loginBtn","logoutBtn","buyBtn","showTokenBtn","BscChainIdMain","showAddressHeader","web3","Web3","provider","givenProvider","NODE_URL_TESTNET","NODE_URL_MAINNET","userEnteredPassword","querySelector","atLogin","userAddress","getUserWalletAddress","presalePasswordEntered","secondLoginBtn","setAttribute","tempCurrentChainIdHex","parseInt","currentChainIdHex","BSC_Chain","populateReferralLinkinHTML","USER_RefferalLink","populateReferrerinHTML","error1","populateUserReferralComissions","error2","populateUserReferralsCount","error3","populateUsersInvestments","error4","updateBNBRaised","error5","toggleBtnVisibility","raisedAmount","getTotalBNBAmount","toFixed","raisedAmountPercentage","percentageOfBNBRaised","updateRaisedBNBinDB","manageTooltipWidth","toolTip","dataset","tip","innerWidth","style","setProperty","addNetwork","chainId","chainName","rpcUrl","blockExplorerUrl","BscChainId","switchAndAdd","toChainId","switchNetwork","er","provider1","user","User","current","isEnablingWeb3","deactivateWeb3","authenticate","error6","getChainId","signingMessage","hitDataLayer","error7","isSaleOpen","isPresaleOpen","error8","get","logOut","atLogout","error9","error10","error11","error12","error13","error14","toggleChainName","toggleConnectStatus","populateUserAddress","enableButton","setReferrerBtn","classList","add","setPresalePassword","showArenaLock","error15","addReferrerBtn","addReferrerInput","removeAttribute","connected","querySelectorAll","forEach","btn","remove","allBtns","statusFields","el","background","innerHTML","convertTokenBalance","balance","decimals","newBalance","Math","pow","readFunction","inputs","name","outputs","internalType","type","stateMutability","functionName","ABI","options","contractAddress","abi","executeFunction","getBuyAmount","buyAmount","value","buyToken","BNBValue","errMsgContainer","errMsg","msg","showErrMsg","isNaN","isWeb3Enabled","result","msgValue","Units","ETH","userEnteredCode","getUserEnteredCouponCode","length","isValidCouponCode","toastError","errCoupon","onclick","swapAmountDataLayer","transaction","confirmTransactionDataLayer","wait","transactionHash","showTransactionLoader","toastSuccess","alert","IBATValue","calculateIBATAmount","updateCouponUserDB","then","swapSuccessfulDataLayer","error16","message","includes","data","DECIMALS","populateAmountRaisedinHTML","progressBars","percentageForBar","raisedAmountHTML","raisedAmountPercentageHTML","leftVal","left","toggleErrMsg","checked","ethereum","isInstalled","on","hide","elParent","HEX_TO_CHAIN_DETAILS","chain","e1","o1","labels","n","o","showAddressFied","toggleShowAddress"],"version":3,"file":"index.a1120d89.js.map"}