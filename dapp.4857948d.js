const loader=document.getElementById("loader"),navItems=document.querySelectorAll(".nav-section");function navigateTo(e){const t=document.getElementById(e);navItems.forEach((e=>{e.classList.contains("hidden")||e.classList.add("hidden")})),loader.classList.remove("hidden"),setTimeout((()=>{loader.classList.add("hidden")}),500),t.classList.add("z-20"),t.classList.remove("hidden")}function hideSwap(e,t){document.querySelector(e).style.visibility=t?"hidden":"visible"}const copyReferLinkBtns=document.querySelectorAll(".refer-link");function copyReferLink(){let e=`url/${getUserWalletAddress()}`;populateReferralLinkinHTML(e),navigator.clipboard.writeText(e)}function populateReferralLinkinHTML(e){document.querySelectorAll(".refer-link-text").forEach((t=>{t.innerHTML=e}))}copyReferLinkBtns.forEach((e=>e.onclick=copyReferLink));const serverUrl="https://cbdyvlhyonhj.usemoralis.com:2053/server",appId="PC04t9NTMGlWn2p5EGf8ukAZbNaZbA1PWrv7IlaC",CONTRACT_ADDRESS_TESTNET="0xf8992AE362561427602A50aff0f84085d1fd88f7";let currentChainIdHex;try{Moralis.start({serverUrl:serverUrl,appId:appId})}catch(e){console.log(e)}const walletOptions=document.getElementById("wallet-options"),loginBtn=document.getElementById("web3-login-mm"),logoutBtn=document.getElementById("web3-logout"),showTokenBtn=document.getElementById("web3-tokens"),showAddress=document.getElementById("web3-wallet-address");let web3=new Web3(Web3.givenProvider||"ws://localhost:8545");async function login(e){let t=Moralis.User.current();t||(t="walletconnect"===e?await Moralis.Web3.authenticate({provider:"walletconnect"}):await Moralis.Web3.authenticate(),currentChainIdHex=await Moralis.switchNetwork("0x61")),currentChainIdHex=await Moralis.getChainId(),await Moralis.enableWeb3(),atLogin(),showAddress.dataset.tip=t.get("ethAddress"),getBalance(currentChainIdHex,t.get("ethAddress"))}function getUserWalletAddress(){return isUserConnected()?Moralis.User.current().get("ethAddress"):"Logged Out"}function isUserConnected(){return!!Moralis.User.current()}async function logOut(){await Moralis.User.logOut(),atLogout()}function atLogout(){populateReferralLinkinHTML("Logged Out"),toggleBtnVisibility(!1),showAddress.dataset.tip="Wallet not connected"}function atLogin(){populateReferralLinkinHTML(`url/${getUserWalletAddress()}`),toggleBtnVisibility(!0)}async function getBalance(e,t){const n=document.getElementById("token-list");currentChainIdHex=await Moralis.getChainId();let a=Moralis.User.current().get("ethAddress");const o={chain:e||currentChainIdHex||"0x38",address:t||a||"0x9d51fd1a308c073f2f06a7181ad90c6d6ab5e9d7"},s=await Moralis.Web3API.account.getNativeBalance(o);n.innerHTML=`<li class="pr-2 flex justify-between w-full md:w-1/2 mx-auto mt-2"><span class="w-1/2 text-center">${HEX_TO_CHAIN_DETAILS[currentChainIdHex].nativeToken}</span><span class="w-1/2 text-left">${web3.utils.fromWei(s.balance)}</span></li>`;const i=await Moralis.Web3API.account.getTokenBalances(o);i.length?i.forEach((e=>{if("USDC"==e.symbol||"BUSD"==e.symbol||"IBAT"==e.symbol){const t=convertTokenBalance(e.balance,e.decimals);n.innerHTML+=`<li class="pr-2 flex justify-between w-full md:w-1/2 mx-auto"><span class="w-1/2 text-center">${e.symbol}</span><span class="w-1/2 text-left">${t}</span></li>`}})):n.innerHTML+='<li class="w-full text-center mx-auto text-xs opacity-80 mt-2">no other tokens available</li>'}function toggleBtnVisibility(e){const t=document.querySelectorAll(".wallet-options-btn ");e?(t.forEach((e=>{e.classList.add("hidden")})),logoutBtn.classList.remove("hidden"),showTokenBtn.classList.remove("hidden")):(t.forEach((e=>{e.classList.remove("hidden")})),logoutBtn.classList.add("hidden"),showTokenBtn.classList.add("hidden"))}function convertTokenBalance(e,t){let n=0==e?0:e/Math.pow(10,t);return n=n<.001?0:n,n}async function isPresaleOpen(){await Moralis.enableWeb3();await readFunction("isPresaleOpen",[{inputs:[],name:"isPresaleOpen",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"}])}async function readFunction(e,t){let n={contractAddress:CONTRACT_ADDRESS_TESTNET,functionName:e,abi:t};return await Moralis.executeFunction(n)}function getBuyAmount(){let e=0;return document.querySelectorAll(".buy-amount").forEach((t=>{t.value&&(e=+t.value)})),e}async function buyToken(){let e=getBuyAmount();if(await Moralis.enableWeb3(),!isUserConnected())return void console.log("User not Logged in - connect wallet");let t,n={contractAddress:CONTRACT_ADDRESS_TESTNET,functionName:"buyToken",abi:[{inputs:[],name:"buyToken",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"payable",type:"function"}],msgValue:Moralis.Units.ETH(e)};try{t=await Moralis.executeFunction(n)}catch(e){document.getElementById("buy-token-error-msg").innerHTML=e.data.message,toggleErrMsg()}}function toggleErrMsg(){const e=document.getElementById("buy-token-error-input");e.checked=!e.checked}loginBtn.onclick=login,logoutBtn.onclick=logOut;const HEX_TO_CHAIN_DETAILS={"0x1":{chain:"ETH",nativeToken:"ETH"},"0x61":{chain:"BSC",nativeToken:"BNB"},"0x38":{chain:"BSC",nativeToken:"BNB"}};
//# sourceMappingURL=dapp.4857948d.js.map
