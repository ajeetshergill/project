window.onload=async function(){await Moralis.enableWeb3(),isUserConnected()&&(console.log("Page-refreshed - User already connected"),login()),console.log("Page-refreshed - User not connected"),populateAmountRaisedinHTML()};const serverUrl="https://gusm6vrpbwtk.usemoralis.com:2053/server",appId="glRYjrZo9XjLE2MPc7sWgzc4PyoFs3RbmyoNiPbf";let web3Instance="";const REFER_CONTRACT_ADDRESS_TESTNET="0xfe2E124FE1418419A9efd8Ba987Fa1769D506c8a",CONTRACT_ADDRESS_TESTNET=REFER_CONTRACT_ADDRESS_TESTNET,referABI=[{inputs:[{internalType:"address",name:"_user",type:"address"}],name:"getReferrer",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"}],name:"referralsCount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"}],name:"totalReferralCommissions",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"}],referOptions={contractAddress:REFER_CONTRACT_ADDRESS_TESTNET,abi:referABI},CONFIRMATIONS_ON_BSC=18;let currentChainIdHex;try{console.info("starting server - ln-30 "),Moralis.start({serverUrl:serverUrl,appId:appId})}catch(e){console.error("Server failed to start -ln-34"),console.log(e)}const walletOptions=document.getElementById("wallet-options"),loginBtn=document.getElementById("web3-login-mm"),logoutBtn=document.getElementById("web3-logout"),buyBtn=document.getElementById("buy_btn"),showTokenBtn=document.getElementById("web3-tokens"),showAddress=document.getElementById("web3-wallet-address");let web3=new Web3(Moralis.provider||Web3.givenProvider);const NODE_URL="https://speedy-nodes-nyc.moralis.io/d633c685eb50e4bb5f7bdcf8/bsc/testnet";let provider=new Web3.providers.HttpProvider(NODE_URL);const userEnteredPassword=document.querySelector("#presale-password");function atLogin(){let e=getUserWalletAddress();let t=`https://presale.battleinfinity.io/?refercode=${e}`;userEnteredPassword||(presalePasswordEntered=!0),manageTooltipWidth(),toggleConnectStatus();const o=document.querySelector("#second-login-btn");disableButton(o),o.setAttribute("for","");try{console.log("start - populateReferralLinkinHTML .."),populateReferralLinkinHTML(t),console.log("done - populateReferralLinkinHTML ")}catch(e){console.error("failed - populateReferralLinkinHTML")}try{console.log("start - populateReferrerinHTML .."),populateReferrerinHTML(e),console.log("done - populateReferrerinHTML")}catch(e){console.error("failed - populateReferrerinHTML")}try{console.log("start - populateUserReferralComissions"),populateUserReferralComissions(e),console.log("done - populateUserReferralComissions")}catch(e){console.error("failed - populateUserReferralComissions")}try{console.log("start - populateUserReferralsCount"),populateUserReferralsCount(e),console.log("done - populateUserReferralsCount")}catch(e){console.error("failed - populateUserReferralsCount")}try{console.log("start - populateUsersInvestments"),populateUsersInvestments(e),console.log("done - populateUsersInvestments")}catch(e){console.error("failed - populateUsersInvestments")}isUserConnected()&&toggleBtnVisibility(!0)}function manageTooltipWidth(){if(document.querySelector("#web3-wallet-address")){if(isUserConnected())return console.log("setting left to : 0"),void showAddress.style.setProperty("--custom-tooltip-left","0px");console.log("setting left to : negative"),showAddress.style.setProperty("--custom-tooltip-left","-100px")}else console.error("tooltips missing")}async function addNetwork(e){const t=e;await Moralis.addNetwork(t,"Testnet BSC","test BNB","tBNB","https://speedy-nodes-nyc.moralis.io/d633c685eb50e4bb5f7bdcf8/bsc/testnet","https://testnet.bscscan.com/")}async function switchNetwork(e="0x61"){currentChainIdHex=await Moralis.switchNetwork(e)}async function login(e){const t="0x61";let o=Moralis.User.current();if("walletconnect"===e&&await Moralis.enableWeb3({provider:"walletconnect"}),!o)if(console.log(`Provider :${e} -ln-108`),"walletconnect"===e)try{console.info("Authenticating with WalletConnect3"),o=await Moralis.authenticate({provider:"walletconnect"}),console.info(`Enabling Web3 - ${e} ln-128`)}catch(e){console.error("Authentication Failed - Walletconnect - ln-118"),console.error(e)}else try{if(console.info("Authenticating with MetaMask"),currentChainIdHex=await Moralis.getChainId(),currentChainIdHex!==t){console.log("NOT - Connecting"),console.log("Current chain - Bsc"),console.log(`${currentChainIdHex} - 0x61`);try{await switchNetwork(t)}catch(e){await addNetwork(t)}}o=await Moralis.authenticate()}catch(e){console.error("Authentication Failed - MetaMask"),console.error(e)}currentChainIdHex=await Moralis.getChainId(),isUserConnected()&&(atLogin(),showAddress.dataset.tip=o.get("ethAddress"),showAddress.style.setProperty("--custom-tooltip-left","0px"),getBalance(currentChainIdHex,o.get("ethAddress")))}function getUserWalletAddress(){return isUserConnected()?Moralis.User.current().get("ethAddress"):"Wallet not connected"}function isUserConnected(){return!!Moralis.User.current()}async function logOut(){await Moralis.User.logOut(),console.log("logged out"),await atLogout()}async function atLogout(){userEnteredPassword&&(presalePasswordEntered=!1);try{populateReferralLinkinHTML("Wallet not connected")}catch(e){console.error(e)}try{populateReferrerinHTML("Wallet not connected")}catch(e){console.error(e)}try{populateUserReferralComissions("0")}catch(e){console.error(e)}try{populateUserReferralsCount(0)}catch(e){console.error(e)}try{populateUsersInvestments("0")}catch(e){console.error("failed - populateUsersInvestments")}manageTooltipWidth(),toggleConnectStatus();const e=document.querySelector("#second-login-btn");enableButton(e),e.setAttribute("for","wallets");const t=document.querySelector("#add-referrer");t&&t.classList.add("hidden"),toggleBtnVisibility(!1),showAddress.dataset.tip="Wallet not connected";try{setPresalePassword&&setPresalePassword()}catch(e){console.error("dev:setPresalePassword(); not defined")}try{showArenaLock&&showArenaLock(!0)}catch(e){console.error("dev:showArenaLock(); not defined")}const o=document.getElementById("add-referrer-btn"),n=document.getElementById("add-referrer-address");enableButton(o),enableButton(n),await Moralis.enableWeb3()}async function getBalance(e,t){const o=document.getElementById("token-list");currentChainIdHex=await Moralis.getChainId();let n=Moralis.User.current().get("ethAddress");const s={chain:e||currentChainIdHex||"0x38",address:t||n||"0x9d51fd1a308c073f2f06a7181ad90c6d6ab5e9d7"},r=await Moralis.Web3API.account.getNativeBalance(s);o&&(o.innerHTML=`<li class="pr-2 flex justify-between w-full md:w-1/2 mx-auto mt-2"><span class="w-1/2 text-center">${HEX_TO_CHAIN_DETAILS[currentChainIdHex].nativeToken}</span><span class="w-1/2 text-left">${web3.utils.fromWei(r.balance)}</span></li>`);const a=await Moralis.Web3API.account.getTokenBalances(s);a.length?a.forEach((e=>{if("USDC"==e.symbol||"BUSD"==e.symbol||"IBAT"==e.symbol){const t=convertTokenBalance(e.balance,e.decimals);o?o.innerHTML+=`<li class="pr-2 flex justify-between w-full md:w-1/2 mx-auto"><span class="w-1/2 text-center">${e.symbol}</span><span class="w-1/2 text-left">${t}</span></li>`:console.error("ln:226 - Token List Missing")}})):o?o.innerHTML+='<li class="w-full text-center mx-auto text-xs opacity-80 mt-2">no other tokens available</li>':console.error("dev:getBalance() - Token List Missing")}function toggleBtnVisibility(e){const t=document.querySelectorAll(".wallet-options-btn ");e?(t.forEach((e=>{e.classList.add("hidden")})),logoutBtn&&logoutBtn.classList.remove("hidden"),showTokenBtn&&showTokenBtn.classList.remove("hidden")):(t?t.forEach((e=>{e.classList.remove("hidden")})):console.error("ln:249-Invalid Arguments"),logoutBtn&&logoutBtn.classList.add("hidden"),showTokenBtn&&showTokenBtn.classList.add("hidden"))}function toggleConnectStatus(){const e=document.querySelectorAll(".connectivity-status");e&&e.forEach((e=>{isUserConnected()?(e.classList.remove("bg-red-400"),e.style.background="#4ade80",e.innerHTML="connected"):(e.style.background="#f87171",e.innerHTML="not connected")}))}function convertTokenBalance(e,t){let o=0==e?0:e/Math.pow(10,t);return o=o<.001?0:o,o}async function isPresaleOpen(){return await readFunction("isPresaleOpen",[{inputs:[],name:"isPresaleOpen",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"}])}async function readFunction(e,t){let o={contractAddress:CONTRACT_ADDRESS_TESTNET,functionName:e,abi:t};return await Moralis.executeFunction(o)}function getBuyAmount(){let e=0;return document.querySelectorAll(".buy-amount").forEach((t=>{t.value&&(e=+t.value)})),console.log("buyAmount = "),console.log(+e),e}async function buyToken(){const e=+getBuyAmount(),t=document.getElementById("buy-token-error-con"),o=document.getElementById("buy-token-error-msg");let n="Error";if(!isUserConnected())return console.log("User not Logged in - connect wallet"),n="Wallet not connected",void showErrMsg(t,o,n);const s=await isPresaleOpen();if(console.log(`sale open - ${s}`),!s)return console.log("Presale is not open"),n="Presale is not open yet !!!",void showErrMsg(t,o,n);if(e<=0)return n="BNB Amount should be larged than 0.0",void showErrMsg(t,o,n);let r={contractAddress:CONTRACT_ADDRESS_TESTNET,functionName:"buyToken",abi:[{inputs:[],name:"buyToken",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"payable",type:"function"}],msgValue:Moralis.Units.ETH(e)};try{const e=await Moralis.executeFunction(r);console.log("Transaction"),console.log(e);await e.wait(18)}catch(e){if(e.message&&(console.log(e.message),n=e.message,n.includes("User denied transaction signature")))return n="Transaction declined by User",void showErrMsg(t,o,n);n=e.data.message,console.log(n),n="Insufficient BNB in wallet",showErrMsg(t,o,n)}}async function populateAmountRaisedinHTML(){console.log("ran - populateAmountRaisedinHTML");let e=await getTotalBnbAMount();e=+e.toFixed(2),console.log(`raisedAmount = ${e}`);let t=percentageOfBNBRaised(e);t<1&&(t=1),console.log(`raisedAmount = ${e}`),console.log(`setting % = ${t}`);const o=document.querySelectorAll(".sale-progress");o&&o.forEach((e=>{e.value=t}));const n=document.querySelectorAll(".sale-progress-amount");n&&n.forEach((t=>{t.innerHTML=e}));const s=document.querySelectorAll(".sale-progress-percentage");s&&s.forEach((e=>{e.innerHTML=t}));const r=document.querySelectorAll(".sale-progress-val-parent");r.forEach((e=>{let o=+t-3;o>=94&&(o=94),e.style.left=`${o}%`}));document.querySelectorAll(".sale-progress-val-parent-mob");r.forEach((e=>{let o=+t-3;o>=65&&(o=65),e.style.left=`${o}%`}))}function toggleErrMsg(){const e=document.getElementById("buy-token-error-input");e.checked=!e.checked}buyBtn?buyBtn.onclick=buyToken:console.error("Login button missing in UI"),loginBtn?loginBtn.onclick=login:console.error("Login button missing in UI"),logoutBtn?logoutBtn.onclick=logOut:console.error("Logout button missing in UI");const HEX_TO_CHAIN_DETAILS={"0x1":{chain:"ETH",nativeToken:"ETH"},"0x61":{chain:"BSC",nativeToken:"BNB"},"0x38":{chain:"BSC",nativeToken:"BNB"}};
//# sourceMappingURL=index.6b057034.js.map
