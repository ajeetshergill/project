{"mappings":"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","sources":["src/js/devWeb3.js"],"sourcesContent":["window.onload = async function () {\r\n    /**\r\n     * - if user is already connected - but only page was refreshed - atlogin()\r\n    */\r\n    await Moralis.enableWeb3();\r\n    if (isUserConnected()) {\r\n        console.log(`Page-refreshed - User already connected`);\r\n        login();\r\n    }\r\n    console.log(`Page-refreshed - User not connected`);\r\n\r\n\r\n    // populateAmountRaisedinHTML();\r\n    populateAmountRaisedinHTMLDB();\r\n\r\n    // this timeout is here coz when switching chain - the function fails until recalled so a quick fix is calling it again after some time\r\n    // setTimeout(() => {\r\n    //     populateAmountRaisedinHTML();\r\n    // }, 5000);\r\n\r\n};\r\n/**\r\n * *******************************    WEB3    *******************************\r\n */\r\n// Connecting with Metamask Wallet\r\n\r\n// Moralis Config details\r\n/**\r\n * forshared\r\n // const serverUrl = \"https://tdwibddr7hmu.usemoralis.com:2053/server\"; //BSC testnet\r\n // const appId = \"pxANj4iAZAqjimgleq7f5iKzPE3rKJXoFtaMfzYc\"; //BSC testnet\r\n */\r\n\r\n\r\n// const TEST_ENVIRONMENT = true;\r\nconst TEST_ENVIRONMENT = false;\r\n\r\nlet web3Instance = '';\r\n\r\nconst REFER_CONTRACT_ADDRESS_TESTNET = '0xfe2E124FE1418419A9efd8Ba987Fa1769D506c8a';\r\n// if TEST_ENVIRONMENT is false then use mainnet contract else testnet contract\r\nconst REFER_CONTRACT_ADDRESS_MAINNET = '0x5832E385f633b30519B3ECaDE3C5eD3d9881cf58'; //mainnet contract\r\n\r\nconst DEPLOYED_CONTRACT_ADDRESS = TEST_ENVIRONMENT ? REFER_CONTRACT_ADDRESS_TESTNET : REFER_CONTRACT_ADDRESS_MAINNET;\r\nconsole.log(`Deployed Presale Contract is ${DEPLOYED_CONTRACT_ADDRESS}`);\r\n// const referABI = [{ \"inputs\": [{ \"internalType\": \"address\", \"name\": \"_user\", \"type\": \"address\" }], \"name\": \"getReferrer\", \"outputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }], \"name\": \"referralsCount\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }], \"name\": \"totalReferralCommissions\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }], \"stateMutability\": \"view\", \"type\": \"function\" }]\r\n// const referOptions = {\r\n//     contractAddress: TEST_ENVIRONMENT ? REFER_CONTRACT_ADDRESS_TESTNET : REFER_CONTRACT_ADDRESS,\r\n//     abi: referABI,\r\n// };\r\n\r\nconst CONFIRMATIONS_ON_BSC = 18;\r\n// paid-account-joshi-sir\r\nconst serverUrl_Testnet = \"https://gusm6vrpbwtk.usemoralis.com:2053/server\"; //BSC testnet\r\nconst appId_Testnet = \"glRYjrZo9XjLE2MPc7sWgzc4PyoFs3RbmyoNiPbf\"; //BSC testnet\r\nlet serverUrl = \"https://gb6gwydcjjw6.usemoralis.com:2053/server\"; //BSC mainnet\r\nlet appId = \"Zq3s8magh8mlppfXIGSHZRdLj49LlCnIaqs2mD2U\"; //BSC mainnet\r\n\r\nlet currentChainIdHex; //default chain set to ETH\r\ntry {\r\n    if (TEST_ENVIRONMENT) {\r\n        console.info(`starting server - testnet `);\r\n        serverUrl = \"https://gusm6vrpbwtk.usemoralis.com:2053/server\"; //BSC testnet\r\n        appId = \"glRYjrZo9XjLE2MPc7sWgzc4PyoFs3RbmyoNiPbf\"; //BSC testnet\r\n        Moralis.start({ serverUrl, appId });\r\n    } else {\r\n        console.info(`starting server - mainnet `);\r\n        Moralis.start({ serverUrl, appId });\r\n    }\r\n} catch (error) {\r\n    console.error(`Server failed to start -ln-34`);\r\n    console.log(error);\r\n}\r\n\r\nconst walletOptions = document.getElementById(\"wallet-options\");\r\nconst loginBtn = document.getElementById(\"web3-login-mm\");\r\nconst logoutBtn = document.getElementById(\"web3-logout\");\r\nconst buyBtn = document.getElementById(\"buy_btn\");\r\nconst showTokenBtn = document.getElementById(\"web3-tokens\");\r\n\r\nconst BscChainIdMain = 0x38; //Bsc Mainnet ID\r\nconst BscChainIdTest = 0x61; //Bsc Testnet ID\r\n\r\nconst showAddress = document.getElementById(\"web3-wallet-address\");\r\n\r\nlet web3 = new Web3(Moralis.provider || Web3.givenProvider);\r\nconst NODE_URL_TESTNET = \"https://speedy-nodes-nyc.moralis.io/d633c685eb50e4bb5f7bdcf8/bsc/testnet\";\r\nconst NODE_URL_MAINNET = \"https://speedy-nodes-nyc.moralis.io/7569a2c3fc822716349963c8/bsc/mainnet\";\r\nlet provider = '';\r\nif (TEST_ENVIRONMENT) {\r\n    provider = new Web3.providers.HttpProvider(NODE_URL_TESTNET);\r\n} else {\r\n    provider = new Web3.providers.HttpProvider(NODE_URL_MAINNET);\r\n}\r\n\r\n\r\nconst userEnteredPassword = document.querySelector('#presale-password');\r\n\r\nfunction atLogin() {\r\n    /**\r\n    * 1. show referral box - toggle visibility of it\r\n    */\r\n    let userAddress = getUserWalletAddress();\r\n    const URL_Prefix = 'https://presale.battleinfinity.io/?refercode='\r\n    let USER_RefferalLink = `${URL_Prefix}${userAddress}`;\r\n    // let USER_RefferalLink = `url/${userAddress}`;\r\n\r\n    /**\r\n     * If there is a presale password field - only then \r\n     * presalePasswordEntered = true;\r\n     */\r\n    if (!userEnteredPassword) {\r\n        presalePasswordEntered = true;\r\n    }\r\n\r\n    /**\r\n     * Manages the left to make sure that weird zoomed out page effect doesn't happen\r\n     */\r\n    manageTooltipWidth()\r\n    toggleConnectStatus()\r\n    const secondLoginBtn = document.querySelector('#second-login-btn')\r\n    disableButton(secondLoginBtn)\r\n    secondLoginBtn.setAttribute(\"for\", \"\");\r\n\r\n    // if (userEnteredPassword && presalePasswordEntered) {\r\n    try {\r\n        console.log(`start - populateReferralLinkinHTML ..`);\r\n        populateReferralLinkinHTML(USER_RefferalLink);\r\n        console.log(`done - populateReferralLinkinHTML `);\r\n    } catch (error) {\r\n        console.error(`failed - populateReferralLinkinHTML`);\r\n    }\r\n    try {\r\n        console.log(`start - populateReferrerinHTML ..`);\r\n        populateReferrerinHTML(userAddress);\r\n        console.log(`done - populateReferrerinHTML`);\r\n    } catch (error) {\r\n        console.error(`failed - populateReferrerinHTML`);\r\n    }\r\n    try {\r\n        console.log(`start - populateUserReferralComissions`);\r\n        populateUserReferralComissions(userAddress);\r\n        console.log(`done - populateUserReferralComissions`);\r\n    } catch (error) {\r\n        console.error(`failed - populateUserReferralComissions`);\r\n    }\r\n    try {\r\n        console.log(`start - populateUserReferralsCount`);\r\n        populateUserReferralsCount(userAddress);\r\n        console.log(`done - populateUserReferralsCount`);\r\n    } catch (error) {\r\n        console.error(`failed - populateUserReferralsCount`);\r\n    }\r\n    try {\r\n        console.log(`start - populateUsersInvestments`);\r\n        populateUsersInvestments(userAddress);\r\n        console.log(`done - populateUsersInvestments`);\r\n    } catch (error) {\r\n        console.error(`failed - populateUsersInvestments`);\r\n    }\r\n    // each time a user logs in - they fetch value of BNBRaised and update the DB\r\n    try {\r\n        updateBNBRaised()\r\n    } catch (error) {\r\n        console.error(`failed - updateBNBRaised - atlogin`);\r\n    }\r\n    /**\r\n     * Test\r\n     // populateUserReferralComissions('0x361c26aDc02Ade99735E2A7F38606F2ec56cc1B0');\r\n     // populateUserReferralsCount('0x361c26aDc02Ade99735E2A7F38606F2ec56cc1B0');\r\n     */\r\n    // }\r\n    // toggles the visibility of connect & disconnect button\r\n    if (isUserConnected()) toggleBtnVisibility(true);\r\n\r\n}\r\n\r\nasync function updateBNBRaised() {\r\n    const HARDCAP = +16500;\r\n    let raisedAmount = await getTotalBNBAmount(); //which will be 'logged out' if user is logged out\r\n    raisedAmount = +raisedAmount.toFixed(2);\r\n    const amountBNB = ''\r\n    let raisedAmountPercentage = '';\r\n    try {\r\n        raisedAmountPercentage = percentageOfBNBRaised(raisedAmount, HARDCAP);\r\n    } catch (error) {\r\n        console.error(`dev: percentageOfBNBRaised() issue`);\r\n    }\r\n    console.log(`raisedAmount = ${raisedAmount}`);\r\n    console.log(`raisedAmountPercentage = ${raisedAmountPercentage}`);\r\n    updateRaisedBNBinDB(raisedAmount, raisedAmountPercentage);\r\n}\r\n\r\n/**\r\n * Manages the left to make sure that weird zoomed out page effect doesn't happen\r\n */\r\nfunction manageTooltipWidth() {\r\n    const toolTip = document.querySelector('#web3-wallet-address');\r\n    if (!toolTip) {\r\n        console.error(`tooltips missing`);\r\n        return;\r\n    }\r\n    if (isUserConnected()) {\r\n        console.log('setting left to : 0');\r\n        showAddress.style.setProperty(\"--custom-tooltip-left\", \"0px\");\r\n        return;\r\n    }\r\n    console.log('setting left to : negative');\r\n    showAddress.style.setProperty(\"--custom-tooltip-left\", \"-100px\");\r\n}\r\n\r\n// async function addNetwork(chainId) {\r\n//     const BscChainId = chainId; //Bsc Testnet ID\r\n//     const chainName = \"Testnet BSC\";\r\n//     const currencyName = \"test BNB\";\r\n//     const currencySymbol = \"tBNB\";\r\n//     const rpcUrl = \"https://speedy-nodes-nyc.moralis.io/d633c685eb50e4bb5f7bdcf8/bsc/testnet\";\r\n//     const blockExplorerUrl = \"https://testnet.bscscan.com/\";\r\n//     await Moralis.addNetwork(\r\n//         BscChainId,\r\n//         chainName,\r\n//         currencyName,\r\n//         currencySymbol,\r\n//         rpcUrl,\r\n//         blockExplorerUrl\r\n//     );\r\n// }\r\nasync function addNetwork(chainId) {\r\n    const BscChainId = chainId;\r\n    const chainName = TEST_ENVIRONMENT ? \"BNB Testnet\" : \"BNB Smart Chain Mainnet\";\r\n    const currencyName = TEST_ENVIRONMENT ? \"tBNB\" : \"BNB\";\r\n    const currencySymbol = TEST_ENVIRONMENT ? \"tBNB\" : \"BNB\";;\r\n    const rpcUrl = TEST_ENVIRONMENT ? NODE_URL_TESTNET : NODE_URL_MAINNET;\r\n    const blockExplorerUrl = TEST_ENVIRONMENT ? \"https://testnet.bscscan.com/\" : \"https://bscscan.com/\";\r\n    console.log('BscChainId-chainName-rpcUrl-blockexplorer');\r\n    console.log(`${BscChainId}-${chainName}-${rpcUrl}-${blockExplorerUrl}`);\r\n    await Moralis.addNetwork(\r\n        BscChainId,\r\n        chainName,\r\n        currencyName,\r\n        currencySymbol,\r\n        rpcUrl,\r\n        blockExplorerUrl\r\n    );\r\n}\r\n\r\nasync function switchAndAdd(toChainId = 0x61) {\r\n    console.log(`switchAndAdd - toChainid`);\r\n    console.log(toChainId);\r\n    try {\r\n        await switchNetwork(toChainId);\r\n    } catch (er) {\r\n        await addNetwork(toChainId);\r\n    }\r\n}\r\nasync function switchNetwork(toChainId = 0x61) {\r\n    currentChainIdHex = await Moralis.switchNetwork(toChainId);\r\n}\r\n\r\nasync function login(provider) {\r\n\r\n    let BSC_Chain = TEST_ENVIRONMENT ? BscChainIdTest : BscChainIdMain;\r\n    let user = Moralis.User.current();\r\n\r\n\r\n    if (provider === 'walletconnect') {\r\n        await Moralis.enableWeb3({ provider: \"walletconnect\" });\r\n    }\r\n\r\n\r\n    if (!user) {\r\n        console.log(`Provider :${provider} -ln-108`);\r\n\r\n        if (provider === 'walletconnect') {\r\n            try {\r\n                console.info(`Authenticating with WalletConnect3`);\r\n                user = await Moralis.authenticate({ provider: \"walletconnect\" });\r\n                console.info(`Enabling Web3 - ${provider} ln-128`)\r\n                // await Moralis.enableWeb3({ provider: \"walletconnect\" });\r\n            } catch (error) {\r\n                console.error(`Authentication Failed - Walletconnect - ln-118`);\r\n                console.error(error);\r\n            }\r\n        } else {\r\n            try {\r\n                console.info(`Authenticating with MetaMask`);\r\n                currentChainIdHex = await Moralis.getChainId();\r\n\r\n                // Authenticate only if user is on correct chain\r\n                if (currentChainIdHex !== BSC_Chain) {\r\n                    // console.log(`Connecting`);\r\n                    // console.log(`Current chain - Bsc`);\r\n                    // console.log(`${currentChainIdHex} - ${BscChainId}`);\r\n                    console.log(`NOT - Connecting`);\r\n                    console.log(`Current chain - Bsc`);\r\n                    console.log(`${currentChainIdHex} - ${BSC_Chain}`);\r\n                    await switchAndAdd(BSC_Chain);\r\n                }\r\n                // user = await Moralis.authenticate();\r\n                // user = Moralis.authenticate({ signingMessage: \"Battle Infinity Presale Authentication\" });\r\n                // user = Moralis.authenticate({ signingMessage: \"Battle Infinity Private Authentication\" });\r\n                user = await Moralis.authenticate({ signingMessage: \"Battle Infinity Authentication\" })\r\n\r\n                try {\r\n                    hitDataLayer(getUserWalletAddress())\r\n                } catch (error) {\r\n                    console.error(`dev:couldn't hit data layer`);\r\n                }\r\n\r\n            } catch (error) {\r\n                console.error(`Authentication Failed - MetaMask`);\r\n                console.error(error);\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    currentChainIdHex = await Moralis.getChainId();\r\n\r\n    console.log(`Battle Infinity Authentication - signing msg`);\r\n    if (isUserConnected()) {\r\n        console.log(`IBAT Authentication - userconnected`);\r\n        atLogin();\r\n        showAddress.dataset.tip = user.get(\"ethAddress\");\r\n        showAddress.style.setProperty(\"--custom-tooltip-left\", \"0px\");\r\n        getBalance(currentChainIdHex, user.get(\"ethAddress\"));\r\n    }\r\n\r\n    // Below address is on both BSC & ETH Scan - \r\n    // getBalance('0x1', '0x66A2C7B0d4Da7E699f6dD27f89b49AB15b0A51e8'); // eth chain\r\n    // getBalance('0x38', '0x66A2C7B0d4Da7E699f6dD27f89b49AB15b0A51e8'); // bsc chain - this account has BUSD in it\r\n}\r\n\r\n\r\nfunction getUserWalletAddress() {\r\n    let err = 'Wallet not connected';\r\n    if (!isUserConnected())\r\n        return err;\r\n\r\n    return Moralis.User.current().get(\"ethAddress\");\r\n}\r\n\r\nfunction isUserConnected() {\r\n    let user = Moralis.User.current();\r\n    return user ? true : false;\r\n}\r\n\r\nasync function logOut() {\r\n    await Moralis.User.logOut();\r\n    console.log(\"logged out\");\r\n    // toggleBtnVisibility(false);\r\n    // showAddress.dataset.tip = 'Wallet not connected';\r\n    await atLogout();\r\n}\r\n\r\nasync function atLogout() {\r\n    /**\r\n     * 1. hide referral box\r\n     */\r\n    // need to \r\n    if (userEnteredPassword) presalePasswordEntered = false;\r\n\r\n    try {\r\n        populateReferralLinkinHTML('Wallet not connected');\r\n    } catch (error) {\r\n        console.error(error);\r\n    }\r\n    try {\r\n        populateReferrerinHTML('Wallet not connected')\r\n    } catch (error) {\r\n        console.error(error);\r\n    }\r\n    try {\r\n        populateUserReferralComissions('0');\r\n    } catch (error) {\r\n        console.error(error);\r\n    }\r\n    try {\r\n        populateUserReferralsCount(0);\r\n    } catch (error) {\r\n        console.error(error);\r\n    }\r\n    try {\r\n        populateUsersInvestments('0');\r\n    } catch (error) {\r\n        console.error(`failed - populateUsersInvestments`);\r\n    }\r\n    try {\r\n        updateBNBRaised()\r\n    } catch (error) {\r\n        console.error(`failed - updateBNBRaised - logout`);\r\n    }\r\n\r\n    manageTooltipWidth()\r\n    toggleConnectStatus()\r\n    const secondLoginBtn = document.querySelector('#second-login-btn')\r\n    enableButton(secondLoginBtn)\r\n    secondLoginBtn.setAttribute(\"for\", \"wallets\");\r\n\r\n    // hiding addreferrer btn when logging out\r\n    const setRefferrerBtn = document.querySelector('#add-referrer');\r\n    setRefferrerBtn && setRefferrerBtn.classList.add('hidden')\r\n\r\n    toggleBtnVisibility(false);\r\n    showAddress.dataset.tip = 'Wallet not connected';\r\n    try {\r\n        setPresalePassword && setPresalePassword();\r\n    } catch (error) {\r\n        console.error(`dev:setPresalePassword(); not defined`);\r\n        // console.error(error);\r\n    }\r\n    try {\r\n        showArenaLock && showArenaLock(true);\r\n    } catch (error) {\r\n        console.error(`dev:showArenaLock(); not defined`);\r\n        // console.error(error);\r\n    }\r\n    const addReferrerBtn = document.getElementById('add-referrer-btn');\r\n    const addReferrerInput = document.getElementById('add-referrer-address');\r\n    enableButton(addReferrerBtn);\r\n    enableButton(addReferrerInput);\r\n\r\n    await Moralis.enableWeb3();\r\n}\r\n\r\n\r\nasync function getBalance(chainId, address) {\r\n    const tokenList = document.getElementById('token-list');\r\n    currentChainIdHex = await Moralis.getChainId();\r\n    let currentUser = Moralis.User.current();\r\n    let currentUserAddress = currentUser.get(\"ethAddress\");\r\n    const options = { chain: chainId || currentChainIdHex || '0x38', address: address || currentUserAddress || \"0x9d51fd1a308c073f2f06a7181ad90c6d6ab5e9d7\" };\r\n    // console.log(`getBalance called with \\n chaidId ${options.chain} and \\n of address: ${options.address}`);\r\n    // const options = { chain: 'eth', address: \"0x9d51fd1a308c073f2f06a7181ad90c6d6ab5e9d7\" } // test address from Etherscan\r\n    // const options = { chain: 'bsc', address: \"0x60913d3fE722bFE425247D7673D8bdbDA56D1e02\" } // test address from BSC (bscscan)\r\n\r\n    const nativeBal = await Moralis.Web3API.account.getNativeBalance(options);\r\n\r\n    if (tokenList) tokenList.innerHTML = `<li class=\"pr-2 flex justify-between w-full md:w-1/2 mx-auto mt-2\"><span class=\"w-1/2 text-center\">${HEX_TO_CHAIN_DETAILS[currentChainIdHex].nativeToken}</span><span class=\"w-1/2 text-left\">${web3.utils.fromWei(nativeBal.balance)}</span></li>`\r\n\r\n    const balances = await Moralis.Web3API.account.getTokenBalances(options);\r\n\r\n    if (balances.length) {\r\n        balances.forEach(token => {\r\n            // console.log(`not - ${token.symbol}`);\r\n            if (token.symbol == 'USDC' || token.symbol == 'BUSD' || token.symbol == 'IBAT') {\r\n                const balance = convertTokenBalance(token.balance, token.decimals);\r\n                // const tokenFromWei = web3.utils.fromWei(token.balance)\r\n                if (!tokenList) {\r\n                    console.error('ln:226 - Token List Missing');\r\n                } else {\r\n                    tokenList.innerHTML += `<li class=\"pr-2 flex justify-between w-full md:w-1/2 mx-auto\"><span class=\"w-1/2 text-center\">${token.symbol}</span><span class=\"w-1/2 text-left\">${balance}</span></li>`\r\n                }\r\n            }\r\n        });\r\n    } else {\r\n        if (!tokenList) {\r\n            console.error('dev:getBalance() - Token List Missing');\r\n        } else {\r\n            tokenList.innerHTML += `<li class=\"w-full text-center mx-auto text-xs opacity-80 mt-2\">no other tokens available</li>`\r\n        }\r\n    }\r\n}\r\n\r\n\r\nfunction toggleBtnVisibility(connected) {\r\n    const allBtns = document.querySelectorAll('.wallet-options-btn ');\r\n    if (connected) { //show\r\n        allBtns.forEach(btn => {\r\n            btn.classList.add('hidden');\r\n        });\r\n        logoutBtn && logoutBtn.classList.remove('hidden');\r\n        showTokenBtn && showTokenBtn.classList.remove('hidden');\r\n        // loginBtn && loginBtn.classList.remove('hidden');\r\n    }\r\n    else {\r\n        if (!allBtns) {\r\n            console.error(`ln:249-Invalid Arguments`);\r\n        } else {\r\n            allBtns.forEach(btn => {\r\n                btn.classList.remove('hidden');\r\n            });\r\n        }\r\n        // walletOptions && walletOptions.classList.remove('hidden');\r\n        logoutBtn && logoutBtn.classList.add('hidden');\r\n        showTokenBtn && showTokenBtn.classList.add('hidden');\r\n    }\r\n}\r\n\r\nfunction toggleConnectStatus() {\r\n    const statusFields = document.querySelectorAll('.connectivity-status');\r\n    statusFields && statusFields.forEach(el => {\r\n        if (isUserConnected()) {\r\n            el.classList.remove('bg-red-400')\r\n            el.style.background = \"#4ade80\";\r\n            el.innerHTML = 'connected'\r\n        } else {\r\n            el.style.background = \"#f87171\";\r\n            el.innerHTML = 'not connected'\r\n        }\r\n    });\r\n}\r\n\r\n\r\nfunction convertTokenBalance(balance, decimals) {\r\n    let newBalance = balance == 0 ? 0 : balance / Math.pow(10, decimals);\r\n    newBalance = newBalance < 0.001 ? 0 : newBalance;\r\n    return newBalance;\r\n}\r\n\r\n\r\n\r\nasync function isPresaleOpen() {\r\n    // if (!Moralis.isWeb3Enabled()) await Moralis.enableWeb3();;\r\n    const ABI = [{ \"inputs\": [], \"name\": \"isPresaleOpen\", \"outputs\": [{ \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" }], \"stateMutability\": \"view\", \"type\": \"function\" }];\r\n    const result = await readFunction('isPresaleOpen', ABI);\r\n    // console.log(`isPresaleOpen = ${result}`);\r\n    return result;\r\n}\r\n\r\n// isPresaleOpen();\r\n\r\nasync function readFunction(functionName, ABI) {\r\n\r\n    let options = {\r\n        contractAddress: DEPLOYED_CONTRACT_ADDRESS,\r\n        functionName: functionName,\r\n        abi: ABI,\r\n    }\r\n    return await Moralis.executeFunction(options);\r\n}\r\n\r\n\r\n\r\nfunction getBuyAmount() {\r\n    // @todo: validate input\r\n    let buyAmount = 0;\r\n    const buyAmounts = document.querySelectorAll('.buy-amount');\r\n    // console.log(buyAmounts.length);\r\n\r\n    // const buyAmountMob = document.getElementById(\"buy-amount-mobile\");\r\n    // const buyAmountDesktop = document.getElementById(\"buy-amount-desktop\");\r\n    // if (buyAmountMob.classList.contains(hidden))\r\n    buyAmounts.forEach(el => {\r\n        if (el.value) {\r\n            // console.log(`${el.value}`);\r\n            buyAmount = +el.value;\r\n        }\r\n    });\r\n    console.log('buyAmount = ');\r\n    console.log(+buyAmount);\r\n    return buyAmount;\r\n}\r\n\r\nasync function buyToken() {\r\n\r\n    const BNBValue = +getBuyAmount();\r\n    // console.log(`Ran buyToken() : BNBValue = ${BNBValue}`);\r\n\r\n    // if (!Moralis.isWeb3Enabled()) await Moralis.enableWeb3();\r\n    // await Moralis.enableWeb3(); // blah\r\n    const errMsgContainer = document.getElementById('buy-token-error-con');\r\n    const errMsg = document.getElementById('buy-token-error-msg');\r\n    let msg = 'Error';\r\n\r\n\r\n\r\n\r\n    if (!isUserConnected()) {\r\n        console.log('User not Logged in - connect wallet');\r\n        msg = 'Wallet not connected';\r\n        showErrMsg(errMsgContainer, errMsg, msg);\r\n        return;\r\n    }\r\n    const isSaleOpen = await isPresaleOpen();\r\n    console.log(`sale open - ${isSaleOpen}`);\r\n    if (!isSaleOpen) {\r\n        console.log('Presale is not open');\r\n        msg = 'Presale has not yet started !!!';\r\n        showErrMsg(errMsgContainer, errMsg, msg);\r\n        return;\r\n    }\r\n    const MIN_BNB = TEST_ENVIRONMENT ? 0 : 0.1;\r\n    if (+BNBValue <= MIN_BNB) {\r\n        msg = 'Minimum BNB Amount should be 0.1BNB';\r\n        showErrMsg(errMsgContainer, errMsg, msg);\r\n        return;\r\n    }\r\n\r\n    const FUNCTION_NAME = 'buyToken';\r\n    const ABI = [{ \"inputs\": [], \"name\": \"buyToken\", \"outputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }], \"stateMutability\": \"payable\", \"type\": \"function\" }];\r\n    let options = {\r\n        contractAddress: DEPLOYED_CONTRACT_ADDRESS,\r\n        functionName: FUNCTION_NAME,\r\n        abi: ABI,\r\n        msgValue: Moralis.Units.ETH(BNBValue)\r\n    }\r\n\r\n    let result;\r\n    try {\r\n        // result = await Moralis.executeFunction(options);\r\n        let userAddress = getUserWalletAddress();\r\n        console.log(`Transaction started`);\r\n        // dataLayer-1\r\n        swapAmountDataLayer(userAddress);\r\n        const transaction = await Moralis.executeFunction(options);\r\n        confirmTransactionDataLayer(userAddress);\r\n        console.log(`Transaction finished`);\r\n        console.log(`Transaction`);\r\n        console.log(transaction);\r\n\r\n        const result = await transaction.wait(CONFIRMATIONS_ON_BSC);\r\n        // const result = await transaction.wait(5);\r\n        /**\r\n         * Refresh the userInvestments field\r\n         */\r\n\r\n\r\n        console.log(`Result`);\r\n        console.log(result.transactionHash);\r\n        let IBATValue = calculateIBATAmount(BNBValue);\r\n        result && swapSuccessfulDataLayer(userAddress, result.transactionHash, BNBValue, IBATValue);\r\n        // setTimeout(refreshUsersInvestments, 1000, result);\r\n        console.log(`Add: ${userAddress} \\n tID: ${result.transactionHash} \\n BNB: ${BNBValue} \\nIBAT: ${IBATValue}`);\r\n\r\n    } catch (error) {\r\n        console.log(`Transaction cancelled`);\r\n        if (error.message) {\r\n            console.log(error.message);\r\n            msg = error.message;\r\n            if (msg.includes('User denied transaction signature')) {\r\n                msg = 'Transaction declined by User';\r\n                showErrMsg(errMsgContainer, errMsg, msg);\r\n                return;\r\n            }\r\n        }\r\n        msg = error.data.message;\r\n        console.log(msg);\r\n        msg = 'Insufficient BNB in wallet';\r\n        showErrMsg(errMsgContainer, errMsg, msg);\r\n    }\r\n\r\n}\r\n\r\nasync function getTotalBNBAmount() {\r\n    const functionName = 'totalBNBAmount';\r\n    const ABI_totalBNBAmount = [{ \"inputs\": [], \"name\": \"totalBNBAmount\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }], \"stateMutability\": \"view\", \"type\": \"function\" }];\r\n    let options = {\r\n        contractAddress: DEPLOYED_CONTRACT_ADDRESS,\r\n        functionName: functionName,\r\n        abi: ABI_totalBNBAmount,\r\n    }\r\n\r\n    let raisedAmount = await Moralis.executeFunction(options);\r\n    raisedAmount = raisedAmount / Math.pow(10, DECIMALS);\r\n    return raisedAmount;\r\n}\r\n\r\nasync function populateAmountRaisedinHTML() {\r\n    let BSC_Chain = TEST_ENVIRONMENT ? BscChainIdTest : BscChainIdMain;\r\n    console.log(`populateAmountRaisedinHTML-switchAndAdd-chainId-${BSC_Chain}`);\r\n    await switchAndAdd(BSC_Chain);\r\n\r\n    console.log(`ran - populateAmountRaisedinHTML`);\r\n\r\n    // await Moralis.enableWeb3(); // blah\r\n    let raisedAmount = await getTotalBNBAmount(); //which will be 'logged out' if user is logged out\r\n    raisedAmount = +raisedAmount.toFixed(2);\r\n    console.log(`raisedAmount = ${raisedAmount}`);\r\n    const HARDCAP = +16500;\r\n    let raisedAmountPercentage = '';\r\n    try {\r\n        raisedAmountPercentage = percentageOfBNBRaised(raisedAmount, HARDCAP);\r\n    } catch (error) {\r\n        console.error(`dev: percentageOfBNBRaised() issue`);\r\n    }\r\n    // if (raisedAmountPercentage < 1) raisedAmountPercentage = 1;\r\n    console.log(`raisedAmount = ${raisedAmount}`);\r\n    console.log(`setting % = ${raisedAmountPercentage}`);\r\n    // if user is logged-in we change the value of refferValue\r\n    const progressBars = document.querySelectorAll('.sale-progress');\r\n\r\n\r\n    progressBars && progressBars.forEach(el => {\r\n        // in this example - the countValue = 0\r\n        let percentageForBar = raisedAmountPercentage;\r\n        percentageForBar < 1 ? percentageForBar = 1 : '';\r\n        el.value = percentageForBar;\r\n    });\r\n\r\n\r\n    const raisedAmountHTML = document.querySelectorAll('.sale-progress-amount');\r\n    raisedAmountHTML && raisedAmountHTML.forEach(el => {\r\n        el.innerHTML = raisedAmount;\r\n    })\r\n\r\n\r\n    const raisedAmountPercentageHTML = document.querySelectorAll('.sale-progress-percentage');\r\n    raisedAmountPercentageHTML && raisedAmountPercentageHTML.forEach(el => {\r\n        el.innerHTML = raisedAmountPercentage;\r\n    })\r\n\r\n\r\n    const parentContainer = document.querySelectorAll('.sale-progress-val-parent');\r\n    parentContainer.forEach(e => {\r\n        let leftVal = +raisedAmountPercentage - 3;\r\n        const maxLeftVal = +94;\r\n        // console.log(`-left = ${leftVal}`);\r\n        leftVal >= maxLeftVal ? leftVal = maxLeftVal : '';\r\n        const minLeftVal = +0;\r\n        leftVal <= minLeftVal ? leftVal = minLeftVal : '';\r\n        // console.log(`-left = ${leftVal}`);\r\n        // console.log(e);\r\n        e.style.left = `${leftVal}%`;\r\n    })\r\n    const parentContainerMob = document.querySelectorAll('.sale-progress-val-parent-mob');\r\n    parentContainerMob.forEach(e => {\r\n        let leftVal = +raisedAmountPercentage - 3;\r\n        const maxLeftValMob = +65;\r\n        leftVal >= maxLeftValMob ? leftVal = maxLeftValMob : '';\r\n        const minLeftValMob = +0;\r\n        leftVal <= minLeftValMob ? leftVal = minLeftValMob : '';\r\n        // console.log(`left = ${leftVal}`);\r\n        // console.log(e);\r\n        e.style.left = `${leftVal}%`;\r\n    })\r\n}\r\n\r\nfunction toggleErrMsg() {\r\n    const errMsg = document.getElementById('buy-token-error-input');\r\n    errMsg.checked = !errMsg.checked;\r\n}\r\n\r\n\r\nif (buyBtn) {\r\n    buyBtn.onclick = buyToken;\r\n} else {\r\n    console.error(`Login button missing in UI`);\r\n}\r\nif (loginBtn) {\r\n    loginBtn.onclick = login;\r\n} else {\r\n    console.error(`Login button missing in UI`);\r\n}\r\nif (logoutBtn) {\r\n    logoutBtn.onclick = logOut;\r\n} else {\r\n    console.error(`Logout button missing in UI`);\r\n}\r\n// showTokenBtn.onclick = getBalance;\r\n\r\nconst HEX_TO_CHAIN_DETAILS = {\r\n    '0x1': {\r\n        chain: 'ETH',\r\n        nativeToken: 'ETH'\r\n    },\r\n    '0x61': {\r\n        // BSC testnet\r\n        chain: 'tBSC',\r\n        nativeToken: 'tBNB'\r\n    }\r\n    ,\r\n    '0x38': {\r\n        // BSC mainnet\r\n        chain: 'BSC',\r\n        nativeToken: 'BNB'\r\n    }\r\n}\r\n\r\n"],"names":["window","onload","async","Moralis","enableWeb3","isUserConnected","console","log","login","populateAmountRaisedinHTMLDB","TEST_ENVIRONMENT","web3Instance","REFER_CONTRACT_ADDRESS_TESTNET","REFER_CONTRACT_ADDRESS_MAINNET","DEPLOYED_CONTRACT_ADDRESS","CONFIRMATIONS_ON_BSC","info","start","serverUrl","appId","error","walletOptions","document","getElementById","loginBtn","logoutBtn","buyBtn","showTokenBtn","BscChainIdMain","BscChainIdTest","web3","Web3","provider","givenProvider","NODE_URL_TESTNET","NODE_URL_MAINNET","providers","HttpProvider","userEnteredPassword","querySelector","atLogin","userAddress","getUserWalletAddress","USER_RefferalLink","presalePasswordEntered","manageTooltipWidth","secondLoginBtn","setAttribute","populateReferralLinkinHTML","populateReferrerinHTML","error1","populateUserReferralComissions","error2","populateUserReferralsCount","error3","error4","updateBNBRaised","error5","toggleBtnVisibility","raisedAmount","getTotalBNBAmount","toFixed","raisedAmountPercentage","percentageOfBNBRaised","updateRaisedBNBinDB","showAddress","style","setProperty","addNetwork","chainId","BscChainId","rpcUrl","blockExplorerUrl","chainName","switchAndAdd","toChainId","switchNetwork","er","provider1","User","current","user","authenticate","error6","currentChainIdHex","getChainId","signingMessage","hitDataLayer","error7","dataset","tip","get","getBalance","logOut","atLogout","error8","error9","error10","error11","populateUsersInvestments","error12","toggleConnectStatus","enableButton","setRefferrerBtn","classList","add","setPresalePassword","error13","showArenaLock","error14","addReferrerBtn","addReferrerInput","address","tokenList","options","chain","currentUserAddress","nativeBal","Web3API","account","getNativeBalance","innerHTML","HEX_TO_CHAIN_DETAILS","nativeToken","utils","fromWei","balance","balances","getTokenBalances","length","forEach","token","symbol","convertTokenBalance","decimals","connected","querySelectorAll","allBtns","btn","remove","statusFields","el","background","newBalance","Math","pow","isPresaleOpen","readFunction","inputs","name","outputs","internalType","type","stateMutability","functionName","ABI","contractAddress","abi","executeFunction","getBuyAmount","buyAmount","value","buyToken","BNBValue","errMsgContainer","errMsg","msg","isSaleOpen","showErrMsg","msgValue","Units","ETH","transaction","confirmTransactionDataLayer","result","wait","transactionHash","IBATValue","calculateIBATAmount","swapSuccessfulDataLayer","message","error15","includes","data","DECIMALS","populateAmountRaisedinHTML","progressBars","percentageForBar","raisedAmountHTML","raisedAmountPercentageHTML","e","leftVal","left","toggleErrMsg"],"version":3,"file":"index.38a77dc6.js.map"}