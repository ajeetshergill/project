{"mappings":"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","sources":["src/js/devWeb3.js"],"sourcesContent":["/**\r\n * *******************************    WEB3    *******************************\r\n */\r\n// Connecting with Metamask Wallet\r\n\r\n// Moralis Config details\r\n/**\r\n * forshared\r\n // const serverUrl = \"https://tdwibddr7hmu.usemoralis.com:2053/server\"; //BSC testnet\r\n // const appId = \"pxANj4iAZAqjimgleq7f5iKzPE3rKJXoFtaMfzYc\"; //BSC testnet\r\n */\r\n\r\n// paid-account-joshi-\r\nconst serverUrl = \"https://gusm6vrpbwtk.usemoralis.com:2053/server\"; //BSC testnet\r\nconst appId = \"glRYjrZo9XjLE2MPc7sWgzc4PyoFs3RbmyoNiPbf\"; //BSC testnet\r\n\r\nconst CONTRACT_ADDRESS_TESTNET = '0xf8992AE362561427602A50aff0f84085d1fd88f7';\r\nconst REFER_CONTRACT_ADDRESS_TESTNET = '0xfe2E124FE1418419A9efd8Ba987Fa1769D506c8a';\r\nconst referABI = [{ \"inputs\": [{ \"internalType\": \"address\", \"name\": \"_user\", \"type\": \"address\" }], \"name\": \"getReferrer\", \"outputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }], \"name\": \"referralsCount\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }], \"name\": \"totalReferralCommissions\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }], \"stateMutability\": \"view\", \"type\": \"function\" }]\r\nconst referOptions = {\r\n    contractAddress: REFER_CONTRACT_ADDRESS_TESTNET,\r\n    abi: referABI,\r\n};\r\n\r\nlet currentChainIdHex; //default chain set to ETH\r\ntry {\r\n    console.info(`starting server - ln-30 `);\r\n    Moralis.start({ serverUrl, appId });\r\n} catch (error) {\r\n    console.error(`Server failed to start -ln-34`);\r\n    console.log(error);\r\n}\r\n\r\nconst walletOptions = document.getElementById(\"wallet-options\");\r\nconst loginBtn = document.getElementById(\"web3-login-mm\");\r\nconst logoutBtn = document.getElementById(\"web3-logout\");\r\nconst showTokenBtn = document.getElementById(\"web3-tokens\");\r\n\r\nconst showAddress = document.getElementById(\"web3-wallet-address\");\r\n\r\nlet web3 = new Web3(Moralis.provider || Web3.givenProvider);\r\nconst NODE_URL = \"https://speedy-nodes-nyc.moralis.io/d633c685eb50e4bb5f7bdcf8/bsc/testnet\";\r\nlet provider = new Web3.providers.HttpProvider(NODE_URL);\r\n\r\nconst userEnteredPassword = document.querySelector('#presale-password');\r\nfunction atLogin() {\r\n    /**\r\n    * 1. show referral box - toggle visibility of it\r\n    */\r\n    let userAddress = getUserWalletAddress();\r\n    const URL_Prefix = 'https://battleinfinstg.wpengine.com/BattleTeam/dapp.php?refercode='\r\n    let USER_RefferalLink = `${URL_Prefix}${userAddress}`;\r\n    // let USER_RefferalLink = `url/${userAddress}`;\r\n\r\n    /**\r\n     * If there is a presale password field - only then \r\n     * presalePasswordEntered = true;\r\n     */\r\n    if (!userEnteredPassword) {\r\n        presalePasswordEntered = true;\r\n    }\r\n\r\n\r\n    if (userEnteredPassword && presalePasswordEntered) {\r\n        try {\r\n            console.log(`start - populateReferralLinkinHTML ... ln-65`);\r\n            populateReferralLinkinHTML(USER_RefferalLink);\r\n            console.log(`done - populateReferralLinkinHTML ...`);\r\n        } catch (error) {\r\n            console.error(`failed - populateReferralLinkinHTML ... ln-69`);\r\n        }\r\n        try {\r\n            console.log(`start - populateReferrerLinkinHTML ... ln-72`);\r\n            populateReferrerLinkinHTML(userAddress);\r\n            console.log(`done - populateReferrerLinkinHTML`);\r\n        } catch (error) {\r\n            console.error(`failed - populateReferrerLinkinHTML ... ln-76`);\r\n        }\r\n        try {\r\n            console.log(`start - populateUserReferralComissions ... ln-79`);\r\n            populateUserReferralComissions(userAddress);\r\n            console.log(`done - populateUserReferralComissions`);\r\n        } catch (error) {\r\n            console.error(`failed - populateUserReferralComissions ... ln-83`);\r\n        }\r\n        try {\r\n            console.log(`start - populateUserReferralsCount ... ln-86`);\r\n            populateUserReferralsCount(userAddress);\r\n            console.log(`done - populateUserReferralsCount`);\r\n        } catch (error) {\r\n            console.error(`failed - populateUserReferralsCount ... ln-90`);\r\n        }\r\n        /**\r\n         * Test\r\n         // populateUserReferralComissions('0x361c26aDc02Ade99735E2A7F38606F2ec56cc1B0');\r\n         // populateUserReferralsCount('0x361c26aDc02Ade99735E2A7F38606F2ec56cc1B0');\r\n         */\r\n    }\r\n    // toggles the visibility of connect & disconnect button\r\n    if (isUserConnected()) toggleBtnVisibility(true);\r\n}\r\n\r\n\r\nasync function login(provider) {\r\n    // const BscChainId = \"0x38\"; //Bsc Mainnet ID\r\n    const BscChainId = \"0x61\"; //Bsc Testnet ID\r\n\r\n\r\n    let user = Moralis.User.current();\r\n\r\n    if (!user) {\r\n        console.log(`Provider :${provider} -ln-108`);\r\n        if (provider === 'walletconnect') {\r\n            try {\r\n                console.info(`Authenticating with WalletConnect ... ln-113`);\r\n                user = await Moralis.authenticate({ provider: \"walletconnect\" });\r\n                console.info(`Enabling Web3 - ${provider}... ln-128`)\r\n                await Moralis.enableWeb3({ provider: \"walletconnect\" });\r\n            } catch (error) {\r\n                console.error(`Authentication Failed - Walletconnect - ln-118`);\r\n                console.error(error);\r\n            }\r\n        } else {\r\n            try {\r\n                console.info(`Authenticating with MetaMask... ln-123`);\r\n                user = await Moralis.authenticate();\r\n                console.info(`Enabling Web3 - Metamask... ln-125`)\r\n                await Moralis.enableWeb3();\r\n                currentChainIdHex = await Moralis.switchNetwork(BscChainId);\r\n            } catch (error) {\r\n                console.error(`Authentication Failed - MetaMask`);\r\n                console.error(error);\r\n            }\r\n        }\r\n    }\r\n\r\n    currentChainIdHex = await Moralis.getChainId();\r\n\r\n    if (isUserConnected()) {\r\n        atLogin();\r\n        showAddress.dataset.tip = user.get(\"ethAddress\");\r\n        getBalance(currentChainIdHex, user.get(\"ethAddress\"));\r\n    }\r\n\r\n    // Below address is on both BSC & ETH Scan - \r\n    // getBalance('0x1', '0x66A2C7B0d4Da7E699f6dD27f89b49AB15b0A51e8'); // eth chain\r\n    // getBalance('0x38', '0x66A2C7B0d4Da7E699f6dD27f89b49AB15b0A51e8'); // bsc chain - this account has BUSD in it\r\n}\r\n\r\n\r\nfunction getUserWalletAddress() {\r\n    let err = 'Logged Out';\r\n    if (!isUserConnected())\r\n        return err;\r\n\r\n    return Moralis.User.current().get(\"ethAddress\");\r\n}\r\n\r\nfunction isUserConnected() {\r\n    let user = Moralis.User.current();\r\n    return user ? true : false;\r\n}\r\n\r\nasync function logOut() {\r\n    await Moralis.User.logOut();\r\n    console.log(\"logged out\");\r\n    // toggleBtnVisibility(false);\r\n    // showAddress.dataset.tip = 'Wallet not connected';\r\n    atLogout();\r\n}\r\n\r\nfunction atLogout() {\r\n    /**\r\n     * 1. hide referral box\r\n     */\r\n    // need to \r\n    if (userEnteredPassword) presalePasswordEntered = false;\r\n\r\n    try {\r\n        populateReferralLinkinHTML('Logged Out');\r\n    } catch (error) {\r\n        console.error(error);\r\n    }\r\n    try {\r\n        populateReferrerLinkinHTML('Logged Out')\r\n    } catch (error) {\r\n        console.error(error);\r\n    }\r\n    try {\r\n        populateUserReferralComissions('0');\r\n    } catch (error) {\r\n        console.error(error);\r\n    }\r\n    try {\r\n        populateUserReferralsCount(0);\r\n    } catch (error) {\r\n        console.error(error);\r\n    }\r\n\r\n\r\n    // hiding addreferrer btn when logging out\r\n    const setRefferrerBtn = document.querySelector('#add-referrer');\r\n    setRefferrerBtn && setRefferrerBtn.classList.add('hidden')\r\n\r\n    toggleBtnVisibility(false);\r\n    showAddress.dataset.tip = 'Wallet not connected';\r\n    setPresalePassword();\r\n    showArenaLock(true);\r\n}\r\n\r\n\r\nasync function getBalance(chainId, address) {\r\n    const tokenList = document.getElementById('token-list');\r\n    currentChainIdHex = await Moralis.getChainId();\r\n    let currentUser = Moralis.User.current();\r\n    let currentUserAddress = currentUser.get(\"ethAddress\");\r\n    const options = { chain: chainId || currentChainIdHex || '0x38', address: address || currentUserAddress || \"0x9d51fd1a308c073f2f06a7181ad90c6d6ab5e9d7\" };\r\n    // console.log(`getBalance called with \\n chaidId ${options.chain} and \\n of address: ${options.address}`);\r\n    // const options = { chain: 'eth', address: \"0x9d51fd1a308c073f2f06a7181ad90c6d6ab5e9d7\" } // test address from Etherscan\r\n    // const options = { chain: 'bsc', address: \"0x60913d3fE722bFE425247D7673D8bdbDA56D1e02\" } // test address from BSC (bscscan)\r\n\r\n    const nativeBal = await Moralis.Web3API.account.getNativeBalance(options);\r\n\r\n    if (tokenList) tokenList.innerHTML = `<li class=\"pr-2 flex justify-between w-full md:w-1/2 mx-auto mt-2\"><span class=\"w-1/2 text-center\">${HEX_TO_CHAIN_DETAILS[currentChainIdHex].nativeToken}</span><span class=\"w-1/2 text-left\">${web3.utils.fromWei(nativeBal.balance)}</span></li>`\r\n\r\n    const balances = await Moralis.Web3API.account.getTokenBalances(options);\r\n\r\n    if (balances.length) {\r\n        balances.forEach(token => {\r\n            // console.log(`not - ${token.symbol}`);\r\n            if (token.symbol == 'USDC' || token.symbol == 'BUSD' || token.symbol == 'IBAT') {\r\n                const balance = convertTokenBalance(token.balance, token.decimals);\r\n                // const tokenFromWei = web3.utils.fromWei(token.balance)\r\n                if (!tokenList) {\r\n                    console.error('ln:226 - Token List Missing');\r\n                } else {\r\n                    tokenList.innerHTML += `<li class=\"pr-2 flex justify-between w-full md:w-1/2 mx-auto\"><span class=\"w-1/2 text-center\">${token.symbol}</span><span class=\"w-1/2 text-left\">${balance}</span></li>`\r\n                }\r\n            }\r\n        });\r\n    } else {\r\n        if (!tokenList) {\r\n            console.error('ln:226 - Token List Missing');\r\n        } else {\r\n            tokenList.innerHTML += `<li class=\"w-full text-center mx-auto text-xs opacity-80 mt-2\">no other tokens available</li>`\r\n        }\r\n    }\r\n}\r\n\r\n\r\nfunction toggleBtnVisibility(connected) {\r\n    const allBtns = document.querySelectorAll('.wallet-options-btn ');\r\n    if (connected) { //show\r\n        // loginBtn.classList.add('hidden');\r\n        allBtns.forEach(btn => {\r\n            btn.classList.add('hidden');\r\n        });\r\n        // walletOptions.classList.add('hidden');\r\n        logoutBtn.classList.remove('hidden');\r\n        showTokenBtn.classList.remove('hidden');\r\n    }\r\n    else {\r\n        // loginBtn.classList.remove('hidden');\r\n        // walletOptions.classList.remove('hidden');\r\n        if (!allBtns) {\r\n            console.error(`ln:249-Invalid Arguments`);\r\n        } else {\r\n            allBtns.forEach(btn => {\r\n                btn.classList.remove('hidden');\r\n            });\r\n        }\r\n        logoutBtn && logoutBtn.classList.add('hidden');\r\n        showTokenBtn && showTokenBtn.classList.add('hidden');\r\n    }\r\n}\r\n\r\n\r\nfunction convertTokenBalance(balance, decimals) {\r\n    let newBalance = balance == 0 ? 0 : balance / Math.pow(10, decimals);\r\n    newBalance = newBalance < 0.001 ? 0 : newBalance;\r\n    return newBalance;\r\n}\r\n\r\nasync function isPresaleOpen() {\r\n    // await Moralis.enableWeb3();\r\n    const ABI = [{ \"inputs\": [], \"name\": \"isPresaleOpen\", \"outputs\": [{ \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" }], \"stateMutability\": \"view\", \"type\": \"function\" }];\r\n    const result = await readFunction('isPresaleOpen', ABI);\r\n    // console.log(`isPresaleOpen = ${result}`);\r\n}\r\n\r\n// isPresaleOpen();\r\n\r\nasync function readFunction(functionName, ABI) {\r\n    // let options = {\r\n    //     contractAddress: '0x356d2E7a0d592bAd95E86d19479c37cfdBb68Ab9',\r\n    //     functionName: 'isPresaleOpen',\r\n    //     abi: [{ \"inputs\": [], \"name\": \"isPresaleOpen\", \"outputs\": [{ \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" }], \"stateMutability\": \"view\", \"type\": \"function\" }],\r\n    //     Params: {\r\n    //         Note: 'Thanks for your work'\r\n    //     },\r\n    //     msgValue: Moralis.Units.ETH(0.1)\r\n    // }\r\n    let options = {\r\n        contractAddress: CONTRACT_ADDRESS_TESTNET,\r\n        functionName: functionName,\r\n        abi: ABI,\r\n    }\r\n    return await Moralis.executeFunction(options);\r\n}\r\n\r\nfunction getBuyAmount() {\r\n    // @todo: validate input\r\n    let buyAmount = 0;\r\n    const buyAmounts = document.querySelectorAll('.buy-amount');\r\n    // console.log(buyAmounts.length);\r\n\r\n    // const buyAmountMob = document.getElementById(\"buy-amount-mobile\");\r\n    // const buyAmountDesktop = document.getElementById(\"buy-amount-desktop\");\r\n    // if (buyAmountMob.classList.contains(hidden))\r\n    buyAmounts.forEach(el => {\r\n        if (el.value) {\r\n            // console.log(`${el.value}`);\r\n            buyAmount = +el.value;\r\n        }\r\n    });\r\n    // console.log(+buyAmount);\r\n    return buyAmount;\r\n}\r\nasync function buyToken() {\r\n    // console.log('Ran buyToken()');\r\n    let value = getBuyAmount();\r\n    // console.log(value);\r\n\r\n    // await Moralis.enableWeb3();\r\n    if (!isUserConnected()) {\r\n        console.log('User not Logged in - connect wallet');\r\n        return;\r\n    }\r\n\r\n\r\n    const FUNCTION_NAME = 'buyToken';\r\n    const ABI = [{ \"inputs\": [], \"name\": \"buyToken\", \"outputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }], \"stateMutability\": \"payable\", \"type\": \"function\" }];\r\n    let options = {\r\n        contractAddress: CONTRACT_ADDRESS_TESTNET,\r\n        functionName: FUNCTION_NAME,\r\n        abi: ABI,\r\n        msgValue: Moralis.Units.ETH(value)\r\n    }\r\n    let result;\r\n    try {\r\n        result = await Moralis.executeFunction(options);\r\n        // console.log(`Result \\n${result}`);\r\n    } catch (error) {\r\n        const errMsg = document.getElementById('buy-token-error-msg');\r\n        errMsg.innerHTML = error.data.message;\r\n        toggleErrMsg();\r\n    }\r\n}\r\n\r\nfunction toggleErrMsg() {\r\n    const errMsg = document.getElementById('buy-token-error-input');\r\n    errMsg.checked = !errMsg.checked;\r\n}\r\n\r\n\r\nloginBtn.onclick = login;\r\nlogoutBtn.onclick = logOut;\r\n// showTokenBtn.onclick = getBalance;\r\n\r\nconst HEX_TO_CHAIN_DETAILS = {\r\n    '0x1': {\r\n        chain: 'ETH',\r\n        nativeToken: 'ETH'\r\n    },\r\n    '0x61': {\r\n        // BSC testnet\r\n        chain: 'BSC',\r\n        nativeToken: 'BNB'\r\n    }\r\n    ,\r\n    '0x38': {\r\n        // BSC mainnet\r\n        chain: 'BSC',\r\n        nativeToken: 'BNB'\r\n    }\r\n}\r\n\r\n"],"names":["inputs","internalType","name","type","outputs","stateMutability","referOptions","contractAddress","REFER_CONTRACT_ADDRESS_TESTNET","referABI","currentChainIdHex","console","info","Moralis","start","serverUrl","appId","error","log","walletOptions","document","getElementById","loginBtn","logoutBtn","showAddress","web3","Web3","provider","givenProvider","NODE_URL","providers","HttpProvider","userEnteredPassword","querySelector","atLogin","getUserWalletAddress","USER_RefferalLink","userAddress","presalePasswordEntered","populateReferralLinkinHTML","populateReferrerLinkinHTML","error1","populateUserReferralComissions","error2","populateUserReferralsCount","error3","toggleBtnVisibility","login","provider1","user","User","current","authenticate","enableWeb3","error4","switchNetwork","error5","getChainId","isUserConnected","dataset","tip","get","logOut","atLogout","error6","error7","error8","error9","setRefferrerBtn","classList","add","setPresalePassword","showArenaLock","getBalance","chainId","address","options","chain","currentUserAddress","nativeBal","Web3API","account","getNativeBalance","tokenList","innerHTML","HEX_TO_CHAIN_DETAILS","nativeToken","utils","fromWei","balance","balances","getTokenBalances","length","forEach","token","symbol","convertTokenBalance","decimals","connected","allBtns","querySelectorAll","btn","remove","showTokenBtn","Math","pow","newBalance","isPresaleOpen","readFunction","functionName","ABI","CONTRACT_ADDRESS_TESTNET","abi","executeFunction","getBuyAmount","buyAmount","el","value","result","msgValue","Units","ETH","error10","data","message","toggleErrMsg","errMsg","checked","onclick"],"version":3,"file":"presale.96f1c046.js.map"}